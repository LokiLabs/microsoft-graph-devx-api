{
  "swagger": "2.0",
  "info": {
    "title": "OData Service for namespace microsoft.graph",
    "description": "This OData service is located at https://graph.microsoft.com/v1.0",
    "version": "1.0.1"
  },
  "host": "graph.microsoft.com",
  "basePath": "/v1.0",
  "schemes": [
    "https"
  ],
  "paths": {
    "/contracts": {
      "get": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Get entities from contracts",
        "operationId": "contracts.contract.ListContract",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "contractType",
                "contractType desc",
                "customerId",
                "customerId desc",
                "defaultDomainName",
                "defaultDomainName desc",
                "displayName",
                "displayName desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "contractType",
                "customerId",
                "defaultDomainName",
                "displayName"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of contract",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.contract"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Add new entity to contracts",
        "operationId": "contracts.contract.CreateContract",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/contracts/{contract-id}": {
      "get": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Get entity from contracts by key",
        "operationId": "contracts.contract.GetContract",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract-id",
            "description": "key: contract-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "contract"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "contractType",
                "customerId",
                "defaultDomainName",
                "displayName"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Update entity in contracts",
        "operationId": "contracts.contract.UpdateContract",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contract-id",
            "description": "key: contract-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "contract"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "contracts.contract"
        ],
        "summary": "Delete entity from contracts",
        "operationId": "contracts.contract.DeleteContract",
        "parameters": [
          {
            "in": "path",
            "name": "contract-id",
            "description": "key: contract-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "contract"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "devices.device"
        ],
        "summary": "Get entities from devices",
        "operationId": "devices.device.ListDevice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "accountEnabled",
                "accountEnabled desc",
                "alternativeSecurityIds",
                "alternativeSecurityIds desc",
                "approximateLastSignInDateTime",
                "approximateLastSignInDateTime desc",
                "deviceId",
                "deviceId desc",
                "deviceMetadata",
                "deviceMetadata desc",
                "deviceVersion",
                "deviceVersion desc",
                "displayName",
                "displayName desc",
                "isCompliant",
                "isCompliant desc",
                "isManaged",
                "isManaged desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "operatingSystem",
                "operatingSystem desc",
                "operatingSystemVersion",
                "operatingSystemVersion desc",
                "physicalIds",
                "physicalIds desc",
                "trustType",
                "trustType desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "accountEnabled",
                "alternativeSecurityIds",
                "approximateLastSignInDateTime",
                "deviceId",
                "deviceMetadata",
                "deviceVersion",
                "displayName",
                "isCompliant",
                "isManaged",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "operatingSystem",
                "operatingSystemVersion",
                "physicalIds",
                "trustType",
                "extensions",
                "registeredOwners",
                "registeredUsers"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "registeredOwners",
                "registeredUsers"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of device",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.device"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Device.ReadWrite.All",
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "devices.device"
        ],
        "summary": "Add new entity to devices",
        "operationId": "devices.device.CreateDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}": {
      "get": {
        "tags": [
          "devices.device"
        ],
        "summary": "Get entity from devices by key",
        "operationId": "devices.device.GetDevice",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "device-id",
            "description": "key: device-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "device"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "accountEnabled",
                "alternativeSecurityIds",
                "approximateLastSignInDateTime",
                "deviceId",
                "deviceMetadata",
                "deviceVersion",
                "displayName",
                "isCompliant",
                "isManaged",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "operatingSystem",
                "operatingSystemVersion",
                "physicalIds",
                "trustType",
                "extensions",
                "registeredOwners",
                "registeredUsers"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions",
                "registeredOwners",
                "registeredUsers"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Device.ReadWrite.All",
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "devices.device"
        ],
        "summary": "Update entity in devices",
        "operationId": "devices.device.UpdateDevice",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "device-id",
            "description": "key: device-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "device"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "devices.device"
        ],
        "summary": "Delete entity from devices",
        "operationId": "devices.device.DeleteDevice",
        "parameters": [
          {
            "in": "path",
            "name": "device-id",
            "description": "key: device-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "device"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/extensions": {
      "get": {
        "tags": [
          "devices.extension"
        ],
        "summary": "Get extensions from devices",
        "operationId": "devices.ListExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "device-id",
            "description": "key: device-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "device"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "devices.extension"
        ],
        "summary": "Get extensions from devices",
        "operationId": "devices.GetExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "device-id",
            "description": "key: device-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "device"
          },
          {
            "in": "path",
            "name": "extension-id",
            "description": "key: extension-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "extension"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/registeredOwners": {
      "get": {
        "tags": [
          "devices.directoryObject"
        ],
        "summary": "Get registeredOwners from devices",
        "operationId": "devices.ListRegisteredOwners",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "device-id",
            "description": "key: device-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "device"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/registeredOwners/{directoryObject-id}": {
      "get": {
        "tags": [
          "devices.directoryObject"
        ],
        "summary": "Get registeredOwners from devices",
        "operationId": "devices.GetRegisteredOwners",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "device-id",
            "description": "key: device-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "device"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/registeredUsers": {
      "get": {
        "tags": [
          "devices.directoryObject"
        ],
        "summary": "Get registeredUsers from devices",
        "operationId": "devices.ListRegisteredUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "device-id",
            "description": "key: device-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "device"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/devices/{device-id}/registeredUsers/{directoryObject-id}": {
      "get": {
        "tags": [
          "devices.directoryObject"
        ],
        "summary": "Get registeredUsers from devices",
        "operationId": "devices.GetRegisteredUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "device-id",
            "description": "key: device-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "device"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directory": {
      "get": {
        "tags": [
          "directory.directory"
        ],
        "summary": "Get directory",
        "operationId": "directory.directory.GetDirectory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deletedItems"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "deletedItems"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directory"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "directory.directory"
        ],
        "summary": "Update directory",
        "operationId": "directory.directory.UpdateDirectory",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directory"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directory/deletedItems": {
      "get": {
        "tags": [
          "directory.directoryObject"
        ],
        "summary": "Get deletedItems from directory",
        "operationId": "directory.ListDeletedItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directory/deletedItems/{directoryObject-id}": {
      "get": {
        "tags": [
          "directory.directoryObject"
        ],
        "summary": "Get deletedItems from directory",
        "operationId": "directory.GetDeletedItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryObjects": {
      "get": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Get entities from directoryObjects",
        "operationId": "directoryObjects.directoryObject.ListDirectoryObject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directoryObject",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directoryObject"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Add new entity to directoryObjects",
        "operationId": "directoryObjects.directoryObject.CreateDirectoryObject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryObjects/{directoryObject-id}": {
      "get": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Get entity from directoryObjects by key",
        "operationId": "directoryObjects.directoryObject.GetDirectoryObject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Update entity in directoryObjects",
        "operationId": "directoryObjects.directoryObject.UpdateDirectoryObject",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "directoryObjects.directoryObject"
        ],
        "summary": "Delete entity from directoryObjects",
        "operationId": "directoryObjects.directoryObject.DeleteDirectoryObject",
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryObjects/{directoryObject-id}/checkMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects.Actions"
        ],
        "summary": "Invoke action checkMemberGroups",
        "operationId": "directoryObjects.checkMemberGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "groupIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/directoryObjects/{directoryObject-id}/getMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects.Actions"
        ],
        "summary": "Invoke action getMemberGroups",
        "operationId": "directoryObjects.getMemberGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "securityEnabledOnly": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/directoryObjects/{directoryObject-id}/getMemberObjects": {
      "post": {
        "tags": [
          "directoryObjects.Actions"
        ],
        "summary": "Invoke action getMemberObjects",
        "operationId": "directoryObjects.getMemberObjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "securityEnabledOnly": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "User.Read.All",
              "and",
              "Group.Read.All",
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/directoryObjects/{directoryObject-id}/restore": {
      "post": {
        "tags": [
          "directoryObjects.Actions"
        ],
        "summary": "Invoke action restore",
        "operationId": "directoryObjects.restore",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer code Required",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Accept",
            "description": "application/json",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "action"
      }
    },
    "/directoryObjects/getByIds": {
      "post": {
        "tags": [
          "directoryObjects.Actions"
        ],
        "summary": "Invoke action getByIds",
        "operationId": "directoryObjects.getByIds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/directoryRoles": {
      "get": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Get entities from directoryRoles",
        "operationId": "directoryRoles.directoryRole.ListDirectoryRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "roleTemplateId",
                "roleTemplateId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName",
                "roleTemplateId",
                "members"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "members"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directoryRole",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directoryRole"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Add new entity to directoryRoles",
        "operationId": "directoryRoles.directoryRole.CreateDirectoryRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryRoles/{directoryRole-id}": {
      "get": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Get entity from directoryRoles by key",
        "operationId": "directoryRoles.directoryRole.GetDirectoryRole",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryRole-id",
            "description": "key: directoryRole-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryRole"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName",
                "roleTemplateId",
                "members"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "members"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Update entity in directoryRoles",
        "operationId": "directoryRoles.directoryRole.UpdateDirectoryRole",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryRole-id",
            "description": "key: directoryRole-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryRole"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "directoryRoles.directoryRole"
        ],
        "summary": "Delete entity from directoryRoles",
        "operationId": "directoryRoles.directoryRole.DeleteDirectoryRole",
        "parameters": [
          {
            "in": "path",
            "name": "directoryRole-id",
            "description": "key: directoryRole-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryRole"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryRoles/{directoryRole-id}/members": {
      "get": {
        "tags": [
          "directoryRoles.directoryObject"
        ],
        "summary": "Get members from directoryRoles",
        "operationId": "directoryRoles.ListMembers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryRole-id",
            "description": "key: directoryRole-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryRole"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryRoles/{directoryRole-id}/members/{directoryObject-id}": {
      "get": {
        "tags": [
          "directoryRoles.directoryObject"
        ],
        "summary": "Get members from directoryRoles",
        "operationId": "directoryRoles.GetMembers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryRole-id",
            "description": "key: directoryRole-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryRole"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryRoleTemplates": {
      "get": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Get entities from directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.ListDirectoryRoleTemplate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directoryRoleTemplate",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Add new entity to directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.CreateDirectoryRoleTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/directoryRoleTemplates/{directoryRoleTemplate-id}": {
      "get": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Get entity from directoryRoleTemplates by key",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.GetDirectoryRoleTemplate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryRoleTemplate-id",
            "description": "key: directoryRoleTemplate-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryRoleTemplate"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Update entity in directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.UpdateDirectoryRoleTemplate",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryRoleTemplate-id",
            "description": "key: directoryRoleTemplate-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryRoleTemplate"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "directoryRoleTemplates.directoryRoleTemplate"
        ],
        "summary": "Delete entity from directoryRoleTemplates",
        "operationId": "directoryRoleTemplates.directoryRoleTemplate.DeleteDirectoryRoleTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "directoryRoleTemplate-id",
            "description": "key: directoryRoleTemplate-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryRoleTemplate"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains": {
      "get": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Get entities from domains",
        "operationId": "domains.domain.ListDomain",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "authenticationType",
                "authenticationType desc",
                "availabilityStatus",
                "availabilityStatus desc",
                "isAdminManaged",
                "isAdminManaged desc",
                "isDefault",
                "isDefault desc",
                "isInitial",
                "isInitial desc",
                "isRoot",
                "isRoot desc",
                "isVerified",
                "isVerified desc",
                "state",
                "state desc",
                "supportedServices",
                "supportedServices desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "authenticationType",
                "availabilityStatus",
                "isAdminManaged",
                "isDefault",
                "isInitial",
                "isRoot",
                "isVerified",
                "state",
                "supportedServices",
                "domainNameReferences",
                "serviceConfigurationRecords",
                "verificationDnsRecords"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "domainNameReferences",
                "serviceConfigurationRecords",
                "verificationDnsRecords"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of domain",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.domain"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Domain.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Add new entity to domains",
        "operationId": "domains.domain.CreateDomain",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}": {
      "get": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Get entity from domains by key",
        "operationId": "domains.domain.GetDomain",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain-id",
            "description": "key: domain-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domain"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "authenticationType",
                "availabilityStatus",
                "isAdminManaged",
                "isDefault",
                "isInitial",
                "isRoot",
                "isVerified",
                "state",
                "supportedServices",
                "domainNameReferences",
                "serviceConfigurationRecords",
                "verificationDnsRecords"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "domainNameReferences",
                "serviceConfigurationRecords",
                "verificationDnsRecords"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Domain.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Update entity in domains",
        "operationId": "domains.domain.UpdateDomain",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain-id",
            "description": "key: domain-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domain"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Domain.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "domains.domain"
        ],
        "summary": "Delete entity from domains",
        "operationId": "domains.domain.DeleteDomain",
        "parameters": [
          {
            "in": "path",
            "name": "domain-id",
            "description": "key: domain-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domain"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Domain.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/domainNameReferences": {
      "get": {
        "tags": [
          "domains.directoryObject"
        ],
        "summary": "Get domainNameReferences from domains",
        "operationId": "domains.ListDomainNameReferences",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain-id",
            "description": "key: domain-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domain"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/domainNameReferences/{directoryObject-id}": {
      "get": {
        "tags": [
          "domains.directoryObject"
        ],
        "summary": "Get domainNameReferences from domains",
        "operationId": "domains.GetDomainNameReferences",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain-id",
            "description": "key: domain-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domain"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/verify": {
      "post": {
        "tags": [
          "domains.Actions"
        ],
        "summary": "Invoke action verify",
        "operationId": "domains.verify",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain-id",
            "description": "key: domain-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domain"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Domain.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/domains/{domain-id}/serviceConfigurationRecords": {
      "get": {
        "tags": [
          "domains.domainDnsRecord"
        ],
        "summary": "Get serviceConfigurationRecords from domains",
        "operationId": "domains.ListServiceConfigurationRecords",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain-id",
            "description": "key: domain-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domain"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "isOptional",
                "isOptional desc",
                "label",
                "label desc",
                "recordType",
                "recordType desc",
                "supportedService",
                "supportedService desc",
                "ttl",
                "ttl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "isOptional",
                "label",
                "recordType",
                "supportedService",
                "ttl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/serviceConfigurationRecords/{domainDnsRecord-id}": {
      "get": {
        "tags": [
          "domains.domainDnsRecord"
        ],
        "summary": "Get serviceConfigurationRecords from domains",
        "operationId": "domains.GetServiceConfigurationRecords",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain-id",
            "description": "key: domain-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domain"
          },
          {
            "in": "path",
            "name": "domainDnsRecord-id",
            "description": "key: domainDnsRecord-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domainDnsRecord"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "isOptional",
                "label",
                "recordType",
                "supportedService",
                "ttl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/verificationDnsRecords": {
      "get": {
        "tags": [
          "domains.domainDnsRecord"
        ],
        "summary": "Get verificationDnsRecords from domains",
        "operationId": "domains.ListVerificationDnsRecords",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain-id",
            "description": "key: domain-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domain"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "isOptional",
                "isOptional desc",
                "label",
                "label desc",
                "recordType",
                "recordType desc",
                "supportedService",
                "supportedService desc",
                "ttl",
                "ttl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "isOptional",
                "label",
                "recordType",
                "supportedService",
                "ttl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/domains/{domain-id}/verificationDnsRecords/{domainDnsRecord-id}": {
      "get": {
        "tags": [
          "domains.domainDnsRecord"
        ],
        "summary": "Get verificationDnsRecords from domains",
        "operationId": "domains.GetVerificationDnsRecords",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "domain-id",
            "description": "key: domain-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domain"
          },
          {
            "in": "path",
            "name": "domainDnsRecord-id",
            "description": "key: domainDnsRecord-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "domainDnsRecord"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "isOptional",
                "label",
                "recordType",
                "supportedService",
                "ttl"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives": {
      "get": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Get entities from drives",
        "operationId": "drives.drive.ListDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharepointIds",
                "sharepointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of drive",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.drive"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Add new entity to drives",
        "operationId": "drives.drive.CreateDrive",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}": {
      "get": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Get entity from drives by key",
        "operationId": "drives.drive.GetDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Update entity in drives",
        "operationId": "drives.drive.UpdateDrive",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "drives.drive"
        ],
        "summary": "Delete entity from drives",
        "operationId": "drives.drive.DeleteDrive",
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/items": {
      "get": {
        "tags": [
          "drives.driveItem"
        ],
        "summary": "Get items from drives",
        "operationId": "drives.ListItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "audio",
                "audio desc",
                "content",
                "content desc",
                "cTag",
                "cTag desc",
                "deleted",
                "deleted desc",
                "file",
                "file desc",
                "fileSystemInfo",
                "fileSystemInfo desc",
                "folder",
                "folder desc",
                "image",
                "image desc",
                "location",
                "location desc",
                "package",
                "package desc",
                "photo",
                "photo desc",
                "publication",
                "publication desc",
                "remoteItem",
                "remoteItem desc",
                "root",
                "root desc",
                "searchResult",
                "searchResult desc",
                "shared",
                "shared desc",
                "sharepointIds",
                "sharepointIds desc",
                "size",
                "size desc",
                "specialFolder",
                "specialFolder desc",
                "video",
                "video desc",
                "webDavUrl",
                "webDavUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/items/{driveItem-id}": {
      "get": {
        "tags": [
          "drives.driveItem"
        ],
        "summary": "Get items from drives",
        "operationId": "drives.GetItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/items/{driveItem-id}/copy": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "drives.items.copy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parentReference": { },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/root/copy",
        "/drives/{drive-id}/special/{driveItem-id}/copy"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/createLink": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "drives.items.createLink",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/root/createLink",
        "/drives/{drive-id}/special/{driveItem-id}/createLink"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/createUploadSession": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "drives.items.createUploadSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "header",
            "name": "if-match",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": { }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/root/createUploadSession",
        "/drives/{drive-id}/special/{driveItem-id}/createUploadSession"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/delta()": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "drives.items.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})",
        "/drives/{drive-id}/root/delta()",
        "/drives/{drive-id}/root/delta(token={token})",
        "/drives/{drive-id}/special/{driveItem-id}/delta()",
        "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "drives.items.delta.cf70",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta()",
        "/drives/{drive-id}/root/delta()",
        "/drives/{drive-id}/root/delta(token={token})",
        "/drives/{drive-id}/special/{driveItem-id}/delta()",
        "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/invite": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "drives.items.invite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipients": {
                  "type": "array",
                  "items": { }
                },
                "message": {
                  "type": "string"
                },
                "requireSignIn": {
                  "default": false,
                  "type": "boolean"
                },
                "sendInvitation": {
                  "default": false,
                  "type": "boolean"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/root/invite",
        "/drives/{drive-id}/special/{driveItem-id}/invite"
      ]
    },
    "/drives/{drive-id}/items/{driveItem-id}/search(q={q})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "drives.items.search.f2b1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "path",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/search(q={q})",
        "/drives/{drive-id}/root/search(q={q})",
        "/drives/{drive-id}/special/{driveItem-id}/search(q={q})"
      ]
    },
    "/drives/{drive-id}/list": {
      "get": {
        "tags": [
          "drives.list"
        ],
        "summary": "Get list from drives",
        "operationId": "drives.GetList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "list",
                "system",
                "sharepointIds",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "items"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "items"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.list"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/recent()": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "This method returns a collection of [DriveItem](../resources/driveitem.md) resources for items which the owner of the drive has recently accessed.",
        "operationId": "drives.recent.f75f",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/drives/{drive-id}/search(q={q})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "In addition to searching for items within a drive, your app can search more broadly to include items shared with the current user.\r\nTo broaden the search scope, use the **search** method on the [Drive](../resources/drive.md) resource.",
        "operationId": "drives.search.f2b1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/search(q={q})",
        "/drives/{drive-id}/root/search(q={q})",
        "/drives/{drive-id}/special/{driveItem-id}/search(q={q})"
      ]
    },
    "/drives/{drive-id}/sharedWithMe()": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "This returns a collection of [DriveItem](../resources/driveitem.md) resources which contain the DriveItem resources shared with the owner of the drive.\r\nIn this example, since the drive is the user's default drive, this returns items shared with the signed in user.",
        "operationId": "drives.sharedWithMe.29d5",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/drives/{drive-id}/root": {
      "get": {
        "tags": [
          "drives.driveItem"
        ],
        "summary": "Get root from drives",
        "operationId": "drives.GetRoot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/root/copy": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "drives.root.copy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parentReference": { },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/copy",
        "/drives/{drive-id}/special/{driveItem-id}/copy"
      ]
    },
    "/drives/{drive-id}/root/createLink": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "drives.root.createLink",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/createLink",
        "/drives/{drive-id}/special/{driveItem-id}/createLink"
      ]
    },
    "/drives/{drive-id}/root/createUploadSession": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "drives.root.createUploadSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "header",
            "name": "if-match",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": { }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/createUploadSession",
        "/drives/{drive-id}/special/{driveItem-id}/createUploadSession"
      ]
    },
    "/drives/{drive-id}/root/delta()": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "drives.root.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta()",
        "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})",
        "/drives/{drive-id}/root/delta(token={token})",
        "/drives/{drive-id}/special/{driveItem-id}/delta()",
        "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})"
      ]
    },
    "/drives/{drive-id}/root/delta(token={token})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "drives.root.delta.cf70",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta()",
        "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})",
        "/drives/{drive-id}/root/delta()",
        "/drives/{drive-id}/special/{driveItem-id}/delta()",
        "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})"
      ]
    },
    "/drives/{drive-id}/root/invite": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "drives.root.invite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipients": {
                  "type": "array",
                  "items": { }
                },
                "message": {
                  "type": "string"
                },
                "requireSignIn": {
                  "default": false,
                  "type": "boolean"
                },
                "sendInvitation": {
                  "default": false,
                  "type": "boolean"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/invite",
        "/drives/{drive-id}/special/{driveItem-id}/invite"
      ]
    },
    "/drives/{drive-id}/root/search(q={q})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "drives.root.search.f2b1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/search(q={q})",
        "/drives/{drive-id}/search(q={q})",
        "/drives/{drive-id}/special/{driveItem-id}/search(q={q})"
      ]
    },
    "/drives/{drive-id}/special": {
      "get": {
        "tags": [
          "drives.driveItem"
        ],
        "summary": "Get special from drives",
        "operationId": "drives.ListSpecial",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "audio",
                "audio desc",
                "content",
                "content desc",
                "cTag",
                "cTag desc",
                "deleted",
                "deleted desc",
                "file",
                "file desc",
                "fileSystemInfo",
                "fileSystemInfo desc",
                "folder",
                "folder desc",
                "image",
                "image desc",
                "location",
                "location desc",
                "package",
                "package desc",
                "photo",
                "photo desc",
                "publication",
                "publication desc",
                "remoteItem",
                "remoteItem desc",
                "root",
                "root desc",
                "searchResult",
                "searchResult desc",
                "shared",
                "shared desc",
                "sharepointIds",
                "sharepointIds desc",
                "size",
                "size desc",
                "specialFolder",
                "specialFolder desc",
                "video",
                "video desc",
                "webDavUrl",
                "webDavUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/special/{driveItem-id}": {
      "get": {
        "tags": [
          "drives.driveItem"
        ],
        "summary": "Get special from drives",
        "operationId": "drives.GetSpecial",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/drives/{drive-id}/special/{driveItem-id}/copy": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "drives.special.copy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parentReference": { },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/copy",
        "/drives/{drive-id}/root/copy"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/createLink": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "drives.special.createLink",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/createLink",
        "/drives/{drive-id}/root/createLink"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/createUploadSession": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "drives.special.createUploadSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "header",
            "name": "if-match",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": { }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/createUploadSession",
        "/drives/{drive-id}/root/createUploadSession"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/delta()": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "drives.special.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta()",
        "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})",
        "/drives/{drive-id}/root/delta()",
        "/drives/{drive-id}/root/delta(token={token})",
        "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/delta(token={token})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "drives.special.delta.cf70",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/delta()",
        "/drives/{drive-id}/items/{driveItem-id}/delta(token={token})",
        "/drives/{drive-id}/root/delta()",
        "/drives/{drive-id}/root/delta(token={token})",
        "/drives/{drive-id}/special/{driveItem-id}/delta()"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/invite": {
      "post": {
        "tags": [
          "drives.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "drives.special.invite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipients": {
                  "type": "array",
                  "items": { }
                },
                "message": {
                  "type": "string"
                },
                "requireSignIn": {
                  "default": false,
                  "type": "boolean"
                },
                "sendInvitation": {
                  "default": false,
                  "type": "boolean"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/invite",
        "/drives/{drive-id}/root/invite"
      ]
    },
    "/drives/{drive-id}/special/{driveItem-id}/search(q={q})": {
      "get": {
        "tags": [
          "drives.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "drives.special.search.f2b1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "path",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/drives/{drive-id}/items/{driveItem-id}/search(q={q})",
        "/drives/{drive-id}/search(q={q})",
        "/drives/{drive-id}/root/search(q={q})"
      ]
    },
    "/education": {
      "get": {
        "tags": [
          "education.educationRoot"
        ],
        "summary": "Here is a JSON representation of the resource.",
        "operationId": "education.educationRoot.GetEducationRoot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "classes",
                "me",
                "schools",
                "users"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "classes",
                "me",
                "schools",
                "users"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "education.educationRoot"
        ],
        "summary": "Update education",
        "operationId": "education.educationRoot.UpdateEducationRoot",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationRoot"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/classes": {
      "get": {
        "tags": [
          "education.educationClass"
        ],
        "summary": "Get classes from education",
        "operationId": "education.ListClasses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "classCode",
                "classCode desc",
                "createdBy",
                "createdBy desc",
                "displayName",
                "displayName desc",
                "externalId",
                "externalId desc",
                "externalName",
                "externalName desc",
                "externalSource",
                "externalSource desc",
                "mailNickname",
                "mailNickname desc",
                "term",
                "term desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "classCode",
                "createdBy",
                "displayName",
                "externalId",
                "externalName",
                "externalSource",
                "mailNickname",
                "term",
                "members",
                "schools",
                "teachers",
                "group"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "members",
                "schools",
                "teachers",
                "group"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationClass"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/classes/{educationClass-id}": {
      "get": {
        "tags": [
          "education.educationClass"
        ],
        "summary": "Get classes from education",
        "operationId": "education.GetClasses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "educationClass-id",
            "description": "key: educationClass-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "educationClass"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "classCode",
                "createdBy",
                "displayName",
                "externalId",
                "externalName",
                "externalSource",
                "mailNickname",
                "term",
                "members",
                "schools",
                "teachers",
                "group"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "members",
                "schools",
                "teachers",
                "group"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationClass"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/me": {
      "get": {
        "tags": [
          "education.educationUser"
        ],
        "summary": "Get me from education",
        "operationId": "education.GetMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "department",
                "displayName",
                "givenName",
                "middleName",
                "surname",
                "mail",
                "mailNickname",
                "mobilePhone",
                "createdBy",
                "externalSource",
                "mailingAddress",
                "passwordPolicies",
                "passwordProfile",
                "preferredLanguage",
                "primaryRole",
                "provisionedPlans",
                "residenceAddress",
                "student",
                "teacher",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "classes",
                "schools",
                "assignments",
                "user"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "classes",
                "schools",
                "assignments",
                "user"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/schools": {
      "get": {
        "tags": [
          "education.educationSchool"
        ],
        "summary": "Get schools from education",
        "operationId": "education.ListSchools",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "externalSource",
                "externalSource desc",
                "status",
                "status desc",
                "principalEmail",
                "principalEmail desc",
                "principalName",
                "principalName desc",
                "externalPrincipalId",
                "externalPrincipalId desc",
                "highestGrade",
                "highestGrade desc",
                "lowestGrade",
                "lowestGrade desc",
                "schoolNumber",
                "schoolNumber desc",
                "address",
                "address desc",
                "createdBy",
                "createdBy desc",
                "externalId",
                "externalId desc",
                "fax",
                "fax desc",
                "phone",
                "phone desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName",
                "externalSource",
                "status",
                "principalEmail",
                "principalName",
                "externalPrincipalId",
                "highestGrade",
                "lowestGrade",
                "schoolNumber",
                "address",
                "createdBy",
                "externalId",
                "fax",
                "phone",
                "classes",
                "users"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "classes",
                "users"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationSchool"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/schools/{educationSchool-id}": {
      "get": {
        "tags": [
          "education.educationSchool"
        ],
        "summary": "Get schools from education",
        "operationId": "education.GetSchools",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "educationSchool-id",
            "description": "key: educationSchool-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "educationSchool"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName",
                "externalSource",
                "status",
                "principalEmail",
                "principalName",
                "externalPrincipalId",
                "highestGrade",
                "lowestGrade",
                "schoolNumber",
                "address",
                "createdBy",
                "externalId",
                "fax",
                "phone",
                "classes",
                "users"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "classes",
                "users"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationSchool"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/users": {
      "get": {
        "tags": [
          "education.educationUser"
        ],
        "summary": "Get users from education",
        "operationId": "education.ListUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "department",
                "department desc",
                "displayName",
                "displayName desc",
                "givenName",
                "givenName desc",
                "middleName",
                "middleName desc",
                "surname",
                "surname desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "createdBy",
                "createdBy desc",
                "externalSource",
                "externalSource desc",
                "mailingAddress",
                "mailingAddress desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "primaryRole",
                "primaryRole desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "residenceAddress",
                "residenceAddress desc",
                "student",
                "student desc",
                "teacher",
                "teacher desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "department",
                "displayName",
                "givenName",
                "middleName",
                "surname",
                "mail",
                "mailNickname",
                "mobilePhone",
                "createdBy",
                "externalSource",
                "mailingAddress",
                "passwordPolicies",
                "passwordProfile",
                "preferredLanguage",
                "primaryRole",
                "provisionedPlans",
                "residenceAddress",
                "student",
                "teacher",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "classes",
                "schools",
                "assignments",
                "user"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "classes",
                "schools",
                "assignments",
                "user"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/education/users/{educationUser-id}": {
      "get": {
        "tags": [
          "education.educationUser"
        ],
        "summary": "Get users from education",
        "operationId": "education.GetUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "educationUser-id",
            "description": "key: educationUser-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "educationUser"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "department",
                "displayName",
                "givenName",
                "middleName",
                "surname",
                "mail",
                "mailNickname",
                "mobilePhone",
                "createdBy",
                "externalSource",
                "mailingAddress",
                "passwordPolicies",
                "passwordProfile",
                "preferredLanguage",
                "primaryRole",
                "provisionedPlans",
                "residenceAddress",
                "student",
                "teacher",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "classes",
                "schools",
                "assignments",
                "user"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "classes",
                "schools",
                "assignments",
                "user"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.educationUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groupLifecyclePolicies": {
      "get": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Get entities from groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.ListGroupLifecyclePolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "alternateNotificationEmails",
                "alternateNotificationEmails desc",
                "groupLifetimeInDays",
                "groupLifetimeInDays desc",
                "managedGroupTypes",
                "managedGroupTypes desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "alternateNotificationEmails",
                "groupLifetimeInDays",
                "managedGroupTypes"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of groupLifecyclePolicy",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Add new entity to groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.CreateGroupLifecyclePolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groupLifecyclePolicies/{groupLifecyclePolicy-id}": {
      "get": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Get entity from groupLifecyclePolicies by key",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.GetGroupLifecyclePolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupLifecyclePolicy-id",
            "description": "key: groupLifecyclePolicy-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupLifecyclePolicy"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "alternateNotificationEmails",
                "groupLifetimeInDays",
                "managedGroupTypes"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Update entity in groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.UpdateGroupLifecyclePolicy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupLifecyclePolicy-id",
            "description": "key: groupLifecyclePolicy-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupLifecyclePolicy"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "groupLifecyclePolicies.groupLifecyclePolicy"
        ],
        "summary": "Delete entity from groupLifecyclePolicies",
        "operationId": "groupLifecyclePolicies.groupLifecyclePolicy.DeleteGroupLifecyclePolicy",
        "parameters": [
          {
            "in": "path",
            "name": "groupLifecyclePolicy-id",
            "description": "key: groupLifecyclePolicy-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupLifecyclePolicy"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "groups.group"
        ],
        "summary": "Get entities from groups",
        "operationId": "groups.group.ListGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "classification",
                "classification desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "renewedDateTime",
                "renewedDateTime desc",
                "securityEnabled",
                "securityEnabled desc",
                "unseenCount",
                "unseenCount desc",
                "visibility",
                "visibility desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "isSubscribedByMail",
                "mail",
                "mailEnabled",
                "mailNickname",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "proxyAddresses",
                "renewedDateTime",
                "securityEnabled",
                "unseenCount",
                "visibility",
                "acceptedSenders",
                "calendar",
                "calendarView",
                "conversations",
                "createdOnBehalfOf",
                "drive",
                "events",
                "memberOf",
                "members",
                "owners",
                "photo",
                "rejectedSenders",
                "sites",
                "threads",
                "drives",
                "extensions",
                "groupLifecyclePolicies",
                "onenote",
                "photos",
                "planner",
                "settings"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "acceptedSenders",
                "calendar",
                "calendarView",
                "conversations",
                "createdOnBehalfOf",
                "drive",
                "events",
                "memberOf",
                "members",
                "owners",
                "photo",
                "rejectedSenders",
                "sites",
                "threads",
                "drives",
                "extensions",
                "groupLifecyclePolicies",
                "onenote",
                "photos",
                "planner",
                "settings"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of group",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.group"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "groups.group"
        ],
        "summary": "Add new entity to groups",
        "operationId": "groups.group.CreateGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}": {
      "get": {
        "tags": [
          "groups.group"
        ],
        "summary": "Get entity from groups by key",
        "operationId": "groups.group.GetGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "classification",
                "createdDateTime",
                "description",
                "displayName",
                "groupTypes",
                "isSubscribedByMail",
                "mail",
                "mailEnabled",
                "mailNickname",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "proxyAddresses",
                "renewedDateTime",
                "securityEnabled",
                "unseenCount",
                "visibility",
                "acceptedSenders",
                "calendar",
                "calendarView",
                "conversations",
                "createdOnBehalfOf",
                "drive",
                "events",
                "memberOf",
                "members",
                "owners",
                "photo",
                "rejectedSenders",
                "sites",
                "threads",
                "drives",
                "extensions",
                "groupLifecyclePolicies",
                "onenote",
                "photos",
                "planner",
                "settings"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "acceptedSenders",
                "calendar",
                "calendarView",
                "conversations",
                "createdOnBehalfOf",
                "drive",
                "events",
                "memberOf",
                "members",
                "owners",
                "photo",
                "rejectedSenders",
                "sites",
                "threads",
                "drives",
                "extensions",
                "groupLifecyclePolicies",
                "onenote",
                "photos",
                "planner",
                "settings"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "groups.group"
        ],
        "summary": "Update entity in groups",
        "operationId": "groups.group.UpdateGroup",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "groups.group"
        ],
        "summary": "Delete entity from groups",
        "operationId": "groups.group.DeleteGroup",
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/acceptedSenders": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get acceptedSenders from groups",
        "operationId": "groups.ListAcceptedSenders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/acceptedSenders/{directoryObject-id}": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get acceptedSenders from groups",
        "operationId": "groups.GetAcceptedSenders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/calendar": {
      "get": {
        "tags": [
          "groups.calendar"
        ],
        "summary": "Get calendar from groups",
        "operationId": "groups.GetCalendar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "canEdit",
                "canShare",
                "canViewPrivateItems",
                "changeKey",
                "color",
                "name",
                "owner",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/calendarView": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "Get calendarView from groups",
        "operationId": "groups.ListCalendarView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "categories",
                "categories desc",
                "changeKey",
                "changeKey desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "attendees",
                "attendees desc",
                "body",
                "body desc",
                "bodyPreview",
                "bodyPreview desc",
                "end",
                "end desc",
                "hasAttachments",
                "hasAttachments desc",
                "iCalUId",
                "iCalUId desc",
                "importance",
                "importance desc",
                "isAllDay",
                "isAllDay desc",
                "isCancelled",
                "isCancelled desc",
                "isOrganizer",
                "isOrganizer desc",
                "isReminderOn",
                "isReminderOn desc",
                "location",
                "location desc",
                "locations",
                "locations desc",
                "onlineMeetingUrl",
                "onlineMeetingUrl desc",
                "organizer",
                "organizer desc",
                "originalEndTimeZone",
                "originalEndTimeZone desc",
                "originalStart",
                "originalStart desc",
                "originalStartTimeZone",
                "originalStartTimeZone desc",
                "recurrence",
                "recurrence desc",
                "reminderMinutesBeforeStart",
                "reminderMinutesBeforeStart desc",
                "responseRequested",
                "responseRequested desc",
                "responseStatus",
                "responseStatus desc",
                "sensitivity",
                "sensitivity desc",
                "seriesMasterId",
                "seriesMasterId desc",
                "showAs",
                "showAs desc",
                "start",
                "start desc",
                "subject",
                "subject desc",
                "type",
                "type desc",
                "webLink",
                "webLink desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/calendarView/{event-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "Get calendarView from groups",
        "operationId": "groups.GetCalendarView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/calendarView/{event-id}/accept": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.calendarView.accept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/{event-id}/accept"
      ]
    },
    "/groups/{group-id}/calendarView/{event-id}/decline": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.calendarView.decline",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/{event-id}/decline"
      ]
    },
    "/groups/{group-id}/calendarView/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.calendarView.dismissReminder",
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/{event-id}/dismissReminder"
      ]
    },
    "/groups/{group-id}/calendarView/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.calendarView.snoozeReminder",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newReminderTime": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/{event-id}/snoozeReminder"
      ]
    },
    "/groups/{group-id}/calendarView/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.calendarView.tentativelyAccept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/{event-id}/tentativelyAccept"
      ]
    },
    "/groups/{group-id}/calendarView/delta()": {
      "get": {
        "tags": [
          "groups.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "groups.calendarView.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "endDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/events/delta()",
        "/groups/delta()"
      ]
    },
    "/groups/{group-id}/conversations": {
      "get": {
        "tags": [
          "groups.conversation"
        ],
        "summary": "Get conversations from groups",
        "operationId": "groups.ListConversations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "hasAttachments",
                "hasAttachments desc",
                "lastDeliveredDateTime",
                "lastDeliveredDateTime desc",
                "preview",
                "preview desc",
                "topic",
                "topic desc",
                "uniqueSenders",
                "uniqueSenders desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "hasAttachments",
                "lastDeliveredDateTime",
                "preview",
                "topic",
                "uniqueSenders",
                "threads"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "threads"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.conversation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/conversations/{conversation-id}": {
      "get": {
        "tags": [
          "groups.conversation"
        ],
        "summary": "Get conversations from groups",
        "operationId": "groups.GetConversations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "conversation-id",
            "description": "key: conversation-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "conversation"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "hasAttachments",
                "lastDeliveredDateTime",
                "preview",
                "topic",
                "uniqueSenders",
                "threads"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "threads"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.conversation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/createdOnBehalfOf": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get createdOnBehalfOf from groups",
        "operationId": "groups.GetCreatedOnBehalfOf",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/drive": {
      "get": {
        "tags": [
          "groups.drive"
        ],
        "summary": "Get drive from groups",
        "operationId": "groups.GetDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/drives": {
      "get": {
        "tags": [
          "groups.drive"
        ],
        "summary": "Get drives from groups",
        "operationId": "groups.ListDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharepointIds",
                "sharepointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/drives/{drive-id}": {
      "get": {
        "tags": [
          "groups.drive"
        ],
        "summary": "Get drives from groups",
        "operationId": "groups.GetDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/events": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "Get events from groups",
        "operationId": "groups.ListEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "categories",
                "categories desc",
                "changeKey",
                "changeKey desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "attendees",
                "attendees desc",
                "body",
                "body desc",
                "bodyPreview",
                "bodyPreview desc",
                "end",
                "end desc",
                "hasAttachments",
                "hasAttachments desc",
                "iCalUId",
                "iCalUId desc",
                "importance",
                "importance desc",
                "isAllDay",
                "isAllDay desc",
                "isCancelled",
                "isCancelled desc",
                "isOrganizer",
                "isOrganizer desc",
                "isReminderOn",
                "isReminderOn desc",
                "location",
                "location desc",
                "locations",
                "locations desc",
                "onlineMeetingUrl",
                "onlineMeetingUrl desc",
                "organizer",
                "organizer desc",
                "originalEndTimeZone",
                "originalEndTimeZone desc",
                "originalStart",
                "originalStart desc",
                "originalStartTimeZone",
                "originalStartTimeZone desc",
                "recurrence",
                "recurrence desc",
                "reminderMinutesBeforeStart",
                "reminderMinutesBeforeStart desc",
                "responseRequested",
                "responseRequested desc",
                "responseStatus",
                "responseStatus desc",
                "sensitivity",
                "sensitivity desc",
                "seriesMasterId",
                "seriesMasterId desc",
                "showAs",
                "showAs desc",
                "start",
                "start desc",
                "subject",
                "subject desc",
                "type",
                "type desc",
                "webLink",
                "webLink desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/events/{event-id}": {
      "get": {
        "tags": [
          "groups.event"
        ],
        "summary": "Get events from groups",
        "operationId": "groups.GetEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/events/{event-id}/accept": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.events.accept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/{event-id}/accept"
      ]
    },
    "/groups/{group-id}/events/{event-id}/decline": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.events.decline",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/{event-id}/decline"
      ]
    },
    "/groups/{group-id}/events/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.events.dismissReminder",
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/{event-id}/dismissReminder"
      ]
    },
    "/groups/{group-id}/events/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.events.snoozeReminder",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newReminderTime": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/{event-id}/snoozeReminder"
      ]
    },
    "/groups/{group-id}/events/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.events.tentativelyAccept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/{event-id}/tentativelyAccept"
      ]
    },
    "/groups/{group-id}/events/delta()": {
      "get": {
        "tags": [
          "groups.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "groups.events.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "endDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/delta()",
        "/groups/delta()"
      ]
    },
    "/groups/{group-id}/extensions": {
      "get": {
        "tags": [
          "groups.extension"
        ],
        "summary": "Get extensions from groups",
        "operationId": "groups.ListExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "groups.extension"
        ],
        "summary": "Get extensions from groups",
        "operationId": "groups.GetExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "extension-id",
            "description": "key: extension-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "extension"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/groupLifecyclePolicies": {
      "get": {
        "tags": [
          "groups.groupLifecyclePolicy"
        ],
        "summary": "Get groupLifecyclePolicies from groups",
        "operationId": "groups.ListGroupLifecyclePolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "alternateNotificationEmails",
                "alternateNotificationEmails desc",
                "groupLifetimeInDays",
                "groupLifetimeInDays desc",
                "managedGroupTypes",
                "managedGroupTypes desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "alternateNotificationEmails",
                "groupLifetimeInDays",
                "managedGroupTypes"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/groupLifecyclePolicies/{groupLifecyclePolicy-id}": {
      "get": {
        "tags": [
          "groups.groupLifecyclePolicy"
        ],
        "summary": "Get groupLifecyclePolicies from groups",
        "operationId": "groups.GetGroupLifecyclePolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "groupLifecyclePolicy-id",
            "description": "key: groupLifecyclePolicy-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupLifecyclePolicy"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "alternateNotificationEmails",
                "groupLifetimeInDays",
                "managedGroupTypes"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/memberOf": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get memberOf from groups",
        "operationId": "groups.ListMemberOf",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/memberOf/{directoryObject-id}": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get memberOf from groups",
        "operationId": "groups.GetMemberOf",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/members": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get members from groups",
        "operationId": "groups.ListMembers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/members/{directoryObject-id}": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get members from groups",
        "operationId": "groups.GetMembers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/addFavorite": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action addFavorite",
        "operationId": "groups.addFavorite",
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/removeFavorite": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action removeFavorite",
        "operationId": "groups.removeFavorite",
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/renew": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action renew",
        "operationId": "groups.renew",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.ReadWrite.All",
              "or",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/resetUnseenCount": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action resetUnseenCount",
        "operationId": "groups.resetUnseenCount",
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/subscribeByMail": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action subscribeByMail",
        "operationId": "groups.subscribeByMail",
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/unsubscribeByMail": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Invoke action unsubscribeByMail",
        "operationId": "groups.unsubscribeByMail",
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/{group-id}/onenote": {
      "get": {
        "tags": [
          "groups.onenote"
        ],
        "summary": "Get onenote from groups",
        "operationId": "groups.GetOnenote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "notebooks",
                "operations",
                "pages",
                "resources",
                "sectionGroups",
                "sections"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "notebooks",
                "operations",
                "pages",
                "resources",
                "sectionGroups",
                "sections"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.onenote"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/owners": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get owners from groups",
        "operationId": "groups.ListOwners",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/owners/{directoryObject-id}": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get owners from groups",
        "operationId": "groups.GetOwners",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/photo": {
      "get": {
        "tags": [
          "groups.profilePhoto"
        ],
        "summary": "Get photo from groups",
        "operationId": "groups.GetPhoto",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "height",
                "width"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/photos": {
      "get": {
        "tags": [
          "groups.profilePhoto"
        ],
        "summary": "Get photos from groups",
        "operationId": "groups.ListPhotos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "height",
                "height desc",
                "width",
                "width desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "height",
                "width"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/photos/{profilePhoto-id}": {
      "get": {
        "tags": [
          "groups.profilePhoto"
        ],
        "summary": "Get photos from groups",
        "operationId": "groups.GetPhotos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "profilePhoto-id",
            "description": "key: profilePhoto-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "profilePhoto"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "height",
                "width"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/planner": {
      "get": {
        "tags": [
          "groups.plannerGroup"
        ],
        "summary": "Get planner from groups",
        "operationId": "groups.GetPlanner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "plans"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "plans"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerGroup"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/rejectedSenders": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get rejectedSenders from groups",
        "operationId": "groups.ListRejectedSenders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/rejectedSenders/{directoryObject-id}": {
      "get": {
        "tags": [
          "groups.directoryObject"
        ],
        "summary": "Get rejectedSenders from groups",
        "operationId": "groups.GetRejectedSenders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/settings": {
      "get": {
        "tags": [
          "groups.groupSetting"
        ],
        "summary": "Get settings from groups",
        "operationId": "groups.ListSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "displayName",
                "displayName desc",
                "templateId",
                "templateId desc",
                "values",
                "values desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "templateId",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/settings/{groupSetting-id}": {
      "get": {
        "tags": [
          "groups.groupSetting"
        ],
        "summary": "Get settings from groups",
        "operationId": "groups.GetSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "groupSetting-id",
            "description": "key: groupSetting-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupSetting"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "templateId",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/sites": {
      "get": {
        "tags": [
          "groups.site"
        ],
        "summary": "Get sites from groups",
        "operationId": "groups.ListSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc",
                "displayName",
                "displayName desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "root",
                "sharepointIds",
                "siteCollection",
                "displayName",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/sites/{site-id}": {
      "get": {
        "tags": [
          "groups.site"
        ],
        "summary": "Get sites from groups",
        "operationId": "groups.GetSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "root",
                "sharepointIds",
                "siteCollection",
                "displayName",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/threads": {
      "get": {
        "tags": [
          "groups.conversationThread"
        ],
        "summary": "Get threads from groups",
        "operationId": "groups.ListThreads",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "ccRecipients",
                "ccRecipients desc",
                "hasAttachments",
                "hasAttachments desc",
                "isLocked",
                "isLocked desc",
                "lastDeliveredDateTime",
                "lastDeliveredDateTime desc",
                "preview",
                "preview desc",
                "toRecipients",
                "toRecipients desc",
                "topic",
                "topic desc",
                "uniqueSenders",
                "uniqueSenders desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "ccRecipients",
                "hasAttachments",
                "isLocked",
                "lastDeliveredDateTime",
                "preview",
                "toRecipients",
                "topic",
                "uniqueSenders",
                "posts"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "posts"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.conversationThread"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/threads/{conversationThread-id}": {
      "get": {
        "tags": [
          "groups.conversationThread"
        ],
        "summary": "Get threads from groups",
        "operationId": "groups.GetThreads",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "conversationThread-id",
            "description": "key: conversationThread-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "conversationThread"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "ccRecipients",
                "hasAttachments",
                "isLocked",
                "lastDeliveredDateTime",
                "preview",
                "toRecipients",
                "topic",
                "uniqueSenders",
                "posts"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "posts"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.conversationThread"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groups/{group-id}/threads/{conversationThread-id}/reply": {
      "post": {
        "tags": [
          "groups.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "groups.threads.reply",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "group-id",
            "description": "key: group-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "group"
          },
          {
            "in": "path",
            "name": "conversationThread-id",
            "description": "key: conversationThread-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "conversationThread"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "post": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/groups/delta()": {
      "get": {
        "tags": [
          "groups.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "groups.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Group.Read.All",
              "Group.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/groups/{group-id}/calendarView/delta()",
        "/groups/{group-id}/events/delta()"
      ]
    },
    "/groupSettings": {
      "get": {
        "tags": [
          "groupSettings.groupSetting"
        ],
        "summary": "Get entities from groupSettings",
        "operationId": "groupSettings.groupSetting.ListGroupSetting",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "displayName",
                "displayName desc",
                "templateId",
                "templateId desc",
                "values",
                "values desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "templateId",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of groupSetting",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.groupSetting"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "groupSettings.groupSetting"
        ],
        "summary": "Add new entity to groupSettings",
        "operationId": "groupSettings.groupSetting.CreateGroupSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groupSettings/{groupSetting-id}": {
      "get": {
        "tags": [
          "groupSettings.groupSetting"
        ],
        "summary": "Get entity from groupSettings by key",
        "operationId": "groupSettings.groupSetting.GetGroupSetting",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupSetting-id",
            "description": "key: groupSetting-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupSetting"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "templateId",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "groupSettings.groupSetting"
        ],
        "summary": "Update entity in groupSettings",
        "operationId": "groupSettings.groupSetting.UpdateGroupSetting",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupSetting-id",
            "description": "key: groupSetting-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupSetting"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSetting"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "groupSettings.groupSetting"
        ],
        "summary": "Delete entity from groupSettings",
        "operationId": "groupSettings.groupSetting.DeleteGroupSetting",
        "parameters": [
          {
            "in": "path",
            "name": "groupSetting-id",
            "description": "key: groupSetting-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupSetting"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groupSettingTemplates": {
      "get": {
        "tags": [
          "groupSettingTemplates.groupSettingTemplate"
        ],
        "summary": "Get entities from groupSettingTemplates",
        "operationId": "groupSettingTemplates.groupSettingTemplate.ListGroupSettingTemplate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "values",
                "values desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of groupSettingTemplate",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.groupSettingTemplate"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "groupSettingTemplates.groupSettingTemplate"
        ],
        "summary": "Add new entity to groupSettingTemplates",
        "operationId": "groupSettingTemplates.groupSettingTemplate.CreateGroupSettingTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSettingTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSettingTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/groupSettingTemplates/{groupSettingTemplate-id}": {
      "get": {
        "tags": [
          "groupSettingTemplates.groupSettingTemplate"
        ],
        "summary": "Get entity from groupSettingTemplates by key",
        "operationId": "groupSettingTemplates.groupSettingTemplate.GetGroupSettingTemplate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupSettingTemplate-id",
            "description": "key: groupSettingTemplate-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupSettingTemplate"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSettingTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "groupSettingTemplates.groupSettingTemplate"
        ],
        "summary": "Update entity in groupSettingTemplates",
        "operationId": "groupSettingTemplates.groupSettingTemplate.UpdateGroupSettingTemplate",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "groupSettingTemplate-id",
            "description": "key: groupSettingTemplate-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupSettingTemplate"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSettingTemplate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "groupSettingTemplates.groupSettingTemplate"
        ],
        "summary": "Delete entity from groupSettingTemplates",
        "operationId": "groupSettingTemplates.groupSettingTemplate.DeleteGroupSettingTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "groupSettingTemplate-id",
            "description": "key: groupSettingTemplate-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "groupSettingTemplate"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/invitations": {
      "get": {
        "tags": [
          "invitations.invitation"
        ],
        "summary": "Get invitations",
        "operationId": "invitations.invitation.GetInvitation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "invitedUserDisplayName",
                "invitedUserEmailAddress",
                "invitedUserMessageInfo",
                "sendInvitationMessage",
                "inviteRedirectUrl",
                "inviteRedeemUrl",
                "status",
                "invitedUserType",
                "invitedUser"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "invitedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.invitation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "invitations.invitation"
        ],
        "summary": "Update invitations",
        "operationId": "invitations.invitation.UpdateInvitation",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.invitation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/invitations/invitedUser": {
      "get": {
        "tags": [
          "invitations.user"
        ],
        "summary": "Get invitedUser from invitations",
        "operationId": "invitations.GetInvitedUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deviceEnrollmentLimit",
                "aboutMe",
                "accountEnabled",
                "ageGroup",
                "assignedLicenses",
                "assignedPlans",
                "birthday",
                "businessPhones",
                "city",
                "companyName",
                "consentProvidedForMinor",
                "country",
                "department",
                "displayName",
                "givenName",
                "hireDate",
                "imAddresses",
                "interests",
                "jobTitle",
                "legalAgeGroupClassification",
                "mail",
                "mailboxSettings",
                "mailNickname",
                "mobilePhone",
                "mySite",
                "officeLocation",
                "onPremisesDomainName",
                "onPremisesExtensionAttributes",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSamAccountName",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "pastProjects",
                "postalCode",
                "preferredLanguage",
                "preferredName",
                "provisionedPlans",
                "proxyAddresses",
                "responsibilities",
                "schools",
                "skills",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "managedDevices",
                "managedAppRegistrations",
                "deviceManagementTroubleshootingEvents",
                "calendar",
                "calendarGroups",
                "calendarView",
                "calendars",
                "contacts",
                "contactFolders",
                "createdObjects",
                "directReports",
                "drive",
                "drives",
                "events",
                "inferenceClassification",
                "mailFolders",
                "manager",
                "memberOf",
                "messages",
                "outlook",
                "ownedDevices",
                "ownedObjects",
                "photo",
                "registeredDevices",
                "activities",
                "extensions",
                "licenseDetails",
                "onenote",
                "people",
                "planner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "managedDevices",
                "managedAppRegistrations",
                "deviceManagementTroubleshootingEvents",
                "calendar",
                "calendarGroups",
                "calendarView",
                "calendars",
                "contacts",
                "contactFolders",
                "createdObjects",
                "directReports",
                "drive",
                "drives",
                "events",
                "inferenceClassification",
                "mailFolders",
                "manager",
                "memberOf",
                "messages",
                "outlook",
                "ownedDevices",
                "ownedObjects",
                "photo",
                "registeredDevices",
                "activities",
                "extensions",
                "licenseDetails",
                "onenote",
                "people",
                "planner"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me": {
      "get": {
        "tags": [
          "me.user"
        ],
        "summary": "Get me",
        "operationId": "me.user.GetUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deviceEnrollmentLimit",
                "aboutMe",
                "accountEnabled",
                "ageGroup",
                "assignedLicenses",
                "assignedPlans",
                "birthday",
                "businessPhones",
                "city",
                "companyName",
                "consentProvidedForMinor",
                "country",
                "department",
                "displayName",
                "givenName",
                "hireDate",
                "imAddresses",
                "interests",
                "jobTitle",
                "legalAgeGroupClassification",
                "mail",
                "mailboxSettings",
                "mailNickname",
                "mobilePhone",
                "mySite",
                "officeLocation",
                "onPremisesDomainName",
                "onPremisesExtensionAttributes",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSamAccountName",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "pastProjects",
                "postalCode",
                "preferredLanguage",
                "preferredName",
                "provisionedPlans",
                "proxyAddresses",
                "responsibilities",
                "schools",
                "skills",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "managedDevices",
                "managedAppRegistrations",
                "deviceManagementTroubleshootingEvents",
                "calendar",
                "calendarGroups",
                "calendarView",
                "calendars",
                "contacts",
                "contactFolders",
                "createdObjects",
                "directReports",
                "drive",
                "drives",
                "events",
                "inferenceClassification",
                "mailFolders",
                "manager",
                "memberOf",
                "messages",
                "outlook",
                "ownedDevices",
                "ownedObjects",
                "photo",
                "registeredDevices",
                "activities",
                "extensions",
                "licenseDetails",
                "onenote",
                "people",
                "planner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "managedDevices",
                "managedAppRegistrations",
                "deviceManagementTroubleshootingEvents",
                "calendar",
                "calendarGroups",
                "calendarView",
                "calendars",
                "contacts",
                "contactFolders",
                "createdObjects",
                "directReports",
                "drive",
                "drives",
                "events",
                "inferenceClassification",
                "mailFolders",
                "manager",
                "memberOf",
                "messages",
                "outlook",
                "ownedDevices",
                "ownedObjects",
                "photo",
                "registeredDevices",
                "activities",
                "extensions",
                "licenseDetails",
                "onenote",
                "people",
                "planner"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "me.user"
        ],
        "summary": "Update me",
        "operationId": "me.user.UpdateUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.ReadWrite",
              "User.ReadWrite.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.ReadWrite"
            ]
          },
          {
            "Application": [
              "User.ReadWrite.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/activities": {
      "get": {
        "tags": [
          "me.userActivity"
        ],
        "summary": "Get activities from me",
        "operationId": "me.ListActivities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "appActivityId",
                "appActivityId desc",
                "activitySourceHost",
                "activitySourceHost desc",
                "userTimezone",
                "userTimezone desc",
                "appDisplayName",
                "appDisplayName desc",
                "activationUrl",
                "activationUrl desc",
                "contentUrl",
                "contentUrl desc",
                "fallbackUrl",
                "fallbackUrl desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "expirationDateTime",
                "expirationDateTime desc",
                "status",
                "status desc",
                "contentInfo",
                "contentInfo desc",
                "visualElements",
                "visualElements desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "appActivityId",
                "activitySourceHost",
                "userTimezone",
                "appDisplayName",
                "activationUrl",
                "contentUrl",
                "fallbackUrl",
                "createdDateTime",
                "lastModifiedDateTime",
                "expirationDateTime",
                "status",
                "contentInfo",
                "visualElements",
                "historyItems"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "historyItems"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.userActivity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/activities/{userActivity-id}": {
      "get": {
        "tags": [
          "me.userActivity"
        ],
        "summary": "Get activities from me",
        "operationId": "me.GetActivities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userActivity-id",
            "description": "key: userActivity-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "userActivity"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "appActivityId",
                "activitySourceHost",
                "userTimezone",
                "appDisplayName",
                "activationUrl",
                "contentUrl",
                "fallbackUrl",
                "createdDateTime",
                "lastModifiedDateTime",
                "expirationDateTime",
                "status",
                "contentInfo",
                "visualElements",
                "historyItems"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "historyItems"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.userActivity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/activities/recent()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function recent",
        "operationId": "me.activities.recent.f75f",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "UserActivity.ReadWrite.CreatedByApp"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "UserActivity.ReadWrite.CreatedByApp"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/me/calendar": {
      "get": {
        "tags": [
          "me.calendar"
        ],
        "summary": "Get calendar from me",
        "operationId": "me.GetCalendar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "canEdit",
                "canShare",
                "canViewPrivateItems",
                "changeKey",
                "color",
                "name",
                "owner",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendarGroups": {
      "get": {
        "tags": [
          "me.calendarGroup"
        ],
        "summary": "Get calendarGroups from me",
        "operationId": "me.ListCalendarGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "changeKey",
                "changeKey desc",
                "classId",
                "classId desc",
                "name",
                "name desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "changeKey",
                "classId",
                "name",
                "calendars"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendars"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendarGroup"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendarGroups/{calendarGroup-id}": {
      "get": {
        "tags": [
          "me.calendarGroup"
        ],
        "summary": "Get calendarGroups from me",
        "operationId": "me.GetCalendarGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "calendarGroup-id",
            "description": "key: calendarGroup-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "calendarGroup"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "changeKey",
                "classId",
                "name",
                "calendars"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendars"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendarGroup"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendars": {
      "get": {
        "tags": [
          "me.calendar"
        ],
        "summary": "Get calendars from me",
        "operationId": "me.ListCalendars",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "canEdit",
                "canEdit desc",
                "canShare",
                "canShare desc",
                "canViewPrivateItems",
                "canViewPrivateItems desc",
                "changeKey",
                "changeKey desc",
                "color",
                "color desc",
                "name",
                "name desc",
                "owner",
                "owner desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "canEdit",
                "canShare",
                "canViewPrivateItems",
                "changeKey",
                "color",
                "name",
                "owner",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendars/{calendar-id}": {
      "get": {
        "tags": [
          "me.calendar"
        ],
        "summary": "Get calendars from me",
        "operationId": "me.GetCalendars",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "calendar-id",
            "description": "key: calendar-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "calendar"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "canEdit",
                "canShare",
                "canViewPrivateItems",
                "changeKey",
                "color",
                "name",
                "owner",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendarView": {
      "get": {
        "tags": [
          "me.event"
        ],
        "summary": "Get calendarView from me",
        "operationId": "me.ListCalendarView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "categories",
                "categories desc",
                "changeKey",
                "changeKey desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "attendees",
                "attendees desc",
                "body",
                "body desc",
                "bodyPreview",
                "bodyPreview desc",
                "end",
                "end desc",
                "hasAttachments",
                "hasAttachments desc",
                "iCalUId",
                "iCalUId desc",
                "importance",
                "importance desc",
                "isAllDay",
                "isAllDay desc",
                "isCancelled",
                "isCancelled desc",
                "isOrganizer",
                "isOrganizer desc",
                "isReminderOn",
                "isReminderOn desc",
                "location",
                "location desc",
                "locations",
                "locations desc",
                "onlineMeetingUrl",
                "onlineMeetingUrl desc",
                "organizer",
                "organizer desc",
                "originalEndTimeZone",
                "originalEndTimeZone desc",
                "originalStart",
                "originalStart desc",
                "originalStartTimeZone",
                "originalStartTimeZone desc",
                "recurrence",
                "recurrence desc",
                "reminderMinutesBeforeStart",
                "reminderMinutesBeforeStart desc",
                "responseRequested",
                "responseRequested desc",
                "responseStatus",
                "responseStatus desc",
                "sensitivity",
                "sensitivity desc",
                "seriesMasterId",
                "seriesMasterId desc",
                "showAs",
                "showAs desc",
                "start",
                "start desc",
                "subject",
                "subject desc",
                "type",
                "type desc",
                "webLink",
                "webLink desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendarView/{event-id}": {
      "get": {
        "tags": [
          "me.event"
        ],
        "summary": "Get calendarView from me",
        "operationId": "me.GetCalendarView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/calendarView/{event-id}/accept": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.calendarView.accept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/events/{event-id}/accept"
      ]
    },
    "/me/calendarView/{event-id}/decline": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.calendarView.decline",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/events/{event-id}/decline"
      ]
    },
    "/me/calendarView/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.calendarView.dismissReminder",
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/events/{event-id}/dismissReminder"
      ]
    },
    "/me/calendarView/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.calendarView.snoozeReminder",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newReminderTime": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/events/{event-id}/snoozeReminder"
      ]
    },
    "/me/calendarView/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.calendarView.tentativelyAccept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/events/{event-id}/tentativelyAccept"
      ]
    },
    "/me/calendarView/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.calendarView.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "endDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/contactFolders/delta()",
        "/me/contacts/delta()",
        "/me/events/delta()",
        "/me/mailFolders/delta()",
        "/me/messages/delta()"
      ]
    },
    "/me/contactFolders": {
      "get": {
        "tags": [
          "me.contactFolder"
        ],
        "summary": "Get contactFolders from me",
        "operationId": "me.ListContactFolders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "displayName",
                "displayName desc",
                "parentFolderId",
                "parentFolderId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "parentFolderId",
                "childFolders",
                "contacts",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "childFolders",
                "contacts",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contactFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/contactFolders/{contactFolder-id}": {
      "get": {
        "tags": [
          "me.contactFolder"
        ],
        "summary": "Get contactFolders from me",
        "operationId": "me.GetContactFolders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactFolder-id",
            "description": "key: contactFolder-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "contactFolder"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "parentFolderId",
                "childFolders",
                "contacts",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "childFolders",
                "contacts",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contactFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/contactFolders/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.contactFolders.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Application": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/delta()",
        "/me/contacts/delta()",
        "/me/events/delta()",
        "/me/mailFolders/delta()",
        "/me/messages/delta()"
      ]
    },
    "/me/contacts": {
      "get": {
        "tags": [
          "me.contact"
        ],
        "summary": "Get contacts from me",
        "operationId": "me.ListContacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "categories",
                "categories desc",
                "changeKey",
                "changeKey desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "assistantName",
                "assistantName desc",
                "birthday",
                "birthday desc",
                "businessAddress",
                "businessAddress desc",
                "businessHomePage",
                "businessHomePage desc",
                "businessPhones",
                "businessPhones desc",
                "children",
                "children desc",
                "companyName",
                "companyName desc",
                "department",
                "department desc",
                "displayName",
                "displayName desc",
                "emailAddresses",
                "emailAddresses desc",
                "flag",
                "flag desc",
                "fileAs",
                "fileAs desc",
                "generation",
                "generation desc",
                "givenName",
                "givenName desc",
                "homeAddress",
                "homeAddress desc",
                "homePhones",
                "homePhones desc",
                "imAddresses",
                "imAddresses desc",
                "initials",
                "initials desc",
                "jobTitle",
                "jobTitle desc",
                "manager",
                "manager desc",
                "middleName",
                "middleName desc",
                "mobilePhone",
                "mobilePhone desc",
                "nickName",
                "nickName desc",
                "officeLocation",
                "officeLocation desc",
                "otherAddress",
                "otherAddress desc",
                "parentFolderId",
                "parentFolderId desc",
                "personalNotes",
                "personalNotes desc",
                "profession",
                "profession desc",
                "spouseName",
                "spouseName desc",
                "surname",
                "surname desc",
                "title",
                "title desc",
                "yomiCompanyName",
                "yomiCompanyName desc",
                "yomiGivenName",
                "yomiGivenName desc",
                "yomiSurname",
                "yomiSurname desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "assistantName",
                "birthday",
                "businessAddress",
                "businessHomePage",
                "businessPhones",
                "children",
                "companyName",
                "department",
                "displayName",
                "emailAddresses",
                "flag",
                "fileAs",
                "generation",
                "givenName",
                "homeAddress",
                "homePhones",
                "imAddresses",
                "initials",
                "jobTitle",
                "manager",
                "middleName",
                "mobilePhone",
                "nickName",
                "officeLocation",
                "otherAddress",
                "parentFolderId",
                "personalNotes",
                "profession",
                "spouseName",
                "surname",
                "title",
                "yomiCompanyName",
                "yomiGivenName",
                "yomiSurname",
                "photo",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "photo",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contact"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/contacts/{contact-id}": {
      "get": {
        "tags": [
          "me.contact"
        ],
        "summary": "Get contacts from me",
        "operationId": "me.GetContacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contact-id",
            "description": "key: contact-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "contact"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "assistantName",
                "birthday",
                "businessAddress",
                "businessHomePage",
                "businessPhones",
                "children",
                "companyName",
                "department",
                "displayName",
                "emailAddresses",
                "flag",
                "fileAs",
                "generation",
                "givenName",
                "homeAddress",
                "homePhones",
                "imAddresses",
                "initials",
                "jobTitle",
                "manager",
                "middleName",
                "mobilePhone",
                "nickName",
                "officeLocation",
                "otherAddress",
                "parentFolderId",
                "personalNotes",
                "profession",
                "spouseName",
                "surname",
                "title",
                "yomiCompanyName",
                "yomiGivenName",
                "yomiSurname",
                "photo",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "photo",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contact"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/contacts/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.contacts.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Application": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/delta()",
        "/me/contactFolders/delta()",
        "/me/events/delta()",
        "/me/mailFolders/delta()",
        "/me/messages/delta()"
      ]
    },
    "/me/createdObjects": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get createdObjects from me",
        "operationId": "me.ListCreatedObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/createdObjects/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get createdObjects from me",
        "operationId": "me.GetCreatedObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/deviceManagementTroubleshootingEvents": {
      "get": {
        "tags": [
          "me.deviceManagementTroubleshootingEvent"
        ],
        "summary": "Get deviceManagementTroubleshootingEvents from me",
        "operationId": "me.ListDeviceManagementTroubleshootingEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "eventDateTime",
                "eventDateTime desc",
                "correlationId",
                "correlationId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "eventDateTime",
                "correlationId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/deviceManagementTroubleshootingEvents/{deviceManagementTroubleshootingEvent-id}": {
      "get": {
        "tags": [
          "me.deviceManagementTroubleshootingEvent"
        ],
        "summary": "Get deviceManagementTroubleshootingEvents from me",
        "operationId": "me.GetDeviceManagementTroubleshootingEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceManagementTroubleshootingEvent-id",
            "description": "key: deviceManagementTroubleshootingEvent-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "deviceManagementTroubleshootingEvent"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "eventDateTime",
                "correlationId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/directReports": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get directReports from me",
        "operationId": "me.ListDirectReports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/directReports/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get directReports from me",
        "operationId": "me.GetDirectReports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/drive": {
      "get": {
        "tags": [
          "me.drive"
        ],
        "summary": "Get drive from me",
        "operationId": "me.GetDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/drives": {
      "get": {
        "tags": [
          "me.drive"
        ],
        "summary": "Get drives from me",
        "operationId": "me.ListDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharepointIds",
                "sharepointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/drives/{drive-id}": {
      "get": {
        "tags": [
          "me.drive"
        ],
        "summary": "Get drives from me",
        "operationId": "me.GetDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/events": {
      "get": {
        "tags": [
          "me.event"
        ],
        "summary": "Get events from me",
        "operationId": "me.ListEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "categories",
                "categories desc",
                "changeKey",
                "changeKey desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "attendees",
                "attendees desc",
                "body",
                "body desc",
                "bodyPreview",
                "bodyPreview desc",
                "end",
                "end desc",
                "hasAttachments",
                "hasAttachments desc",
                "iCalUId",
                "iCalUId desc",
                "importance",
                "importance desc",
                "isAllDay",
                "isAllDay desc",
                "isCancelled",
                "isCancelled desc",
                "isOrganizer",
                "isOrganizer desc",
                "isReminderOn",
                "isReminderOn desc",
                "location",
                "location desc",
                "locations",
                "locations desc",
                "onlineMeetingUrl",
                "onlineMeetingUrl desc",
                "organizer",
                "organizer desc",
                "originalEndTimeZone",
                "originalEndTimeZone desc",
                "originalStart",
                "originalStart desc",
                "originalStartTimeZone",
                "originalStartTimeZone desc",
                "recurrence",
                "recurrence desc",
                "reminderMinutesBeforeStart",
                "reminderMinutesBeforeStart desc",
                "responseRequested",
                "responseRequested desc",
                "responseStatus",
                "responseStatus desc",
                "sensitivity",
                "sensitivity desc",
                "seriesMasterId",
                "seriesMasterId desc",
                "showAs",
                "showAs desc",
                "start",
                "start desc",
                "subject",
                "subject desc",
                "type",
                "type desc",
                "webLink",
                "webLink desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/events/{event-id}": {
      "get": {
        "tags": [
          "me.event"
        ],
        "summary": "Get events from me",
        "operationId": "me.GetEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/events/{event-id}/accept": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.events.accept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/{event-id}/accept"
      ]
    },
    "/me/events/{event-id}/decline": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.events.decline",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/{event-id}/decline"
      ]
    },
    "/me/events/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.events.dismissReminder",
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/{event-id}/dismissReminder"
      ]
    },
    "/me/events/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.events.snoozeReminder",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newReminderTime": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/{event-id}/snoozeReminder"
      ]
    },
    "/me/events/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.events.tentativelyAccept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/{event-id}/tentativelyAccept"
      ]
    },
    "/me/events/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.events.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "endDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/delta()",
        "/me/contactFolders/delta()",
        "/me/contacts/delta()",
        "/me/mailFolders/delta()",
        "/me/messages/delta()"
      ]
    },
    "/me/extensions": {
      "get": {
        "tags": [
          "me.extension"
        ],
        "summary": "Get extensions from me",
        "operationId": "me.ListExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/extensions/{extension-id}": {
      "get": {
        "tags": [
          "me.extension"
        ],
        "summary": "Get extensions from me",
        "operationId": "me.GetExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "extension-id",
            "description": "key: extension-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "extension"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/inferenceClassification": {
      "get": {
        "tags": [
          "me.inferenceClassification"
        ],
        "summary": "Get inferenceClassification from me",
        "operationId": "me.GetInferenceClassification",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "overrides"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "overrides"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.inferenceClassification"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/licenseDetails": {
      "get": {
        "tags": [
          "me.licenseDetails"
        ],
        "summary": "Get licenseDetails from me",
        "operationId": "me.ListLicenseDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "servicePlans",
                "servicePlans desc",
                "skuId",
                "skuId desc",
                "skuPartNumber",
                "skuPartNumber desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "servicePlans",
                "skuId",
                "skuPartNumber"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.licenseDetails"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/licenseDetails/{licenseDetails-id}": {
      "get": {
        "tags": [
          "me.licenseDetails"
        ],
        "summary": "Get licenseDetails from me",
        "operationId": "me.GetLicenseDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "licenseDetails-id",
            "description": "key: licenseDetails-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "licenseDetails"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "servicePlans",
                "skuId",
                "skuPartNumber"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.licenseDetails"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/mailFolders": {
      "get": {
        "tags": [
          "me.mailFolder"
        ],
        "summary": "Get mailFolders from me",
        "operationId": "me.ListMailFolders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "childFolderCount",
                "childFolderCount desc",
                "displayName",
                "displayName desc",
                "parentFolderId",
                "parentFolderId desc",
                "totalItemCount",
                "totalItemCount desc",
                "unreadItemCount",
                "unreadItemCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "childFolderCount",
                "displayName",
                "parentFolderId",
                "totalItemCount",
                "unreadItemCount",
                "childFolders",
                "messageRules",
                "messages",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "childFolders",
                "messageRules",
                "messages",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mailFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/mailFolders/{mailFolder-id}": {
      "get": {
        "tags": [
          "me.mailFolder"
        ],
        "summary": "Get mailFolders from me",
        "operationId": "me.GetMailFolders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mailFolder-id",
            "description": "key: mailFolder-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "childFolderCount",
                "displayName",
                "parentFolderId",
                "totalItemCount",
                "unreadItemCount",
                "childFolders",
                "messageRules",
                "messages",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "childFolders",
                "messageRules",
                "messages",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mailFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/mailFolders/{mailFolder-id}/copy": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.mailFolders.copy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mailFolder-id",
            "description": "key: mailFolder-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destinationId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/messages/{message-id}/copy"
      ]
    },
    "/me/mailFolders/{mailFolder-id}/move": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.mailFolders.move",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "mailFolder-id",
            "description": "key: mailFolder-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destinationId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/messages/{message-id}/move"
      ]
    },
    "/me/mailFolders/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.mailFolders.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/delta()",
        "/me/contactFolders/delta()",
        "/me/contacts/delta()",
        "/me/events/delta()",
        "/me/messages/delta()"
      ]
    },
    "/me/managedAppRegistrations": {
      "get": {
        "tags": [
          "me.managedAppRegistration"
        ],
        "summary": "Get managedAppRegistrations from me",
        "operationId": "me.ListManagedAppRegistrations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastSyncDateTime",
                "lastSyncDateTime desc",
                "applicationVersion",
                "applicationVersion desc",
                "managementSdkVersion",
                "managementSdkVersion desc",
                "platformVersion",
                "platformVersion desc",
                "deviceType",
                "deviceType desc",
                "deviceTag",
                "deviceTag desc",
                "deviceName",
                "deviceName desc",
                "flaggedReasons",
                "flaggedReasons desc",
                "userId",
                "userId desc",
                "appIdentifier",
                "appIdentifier desc",
                "version",
                "version desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdDateTime",
                "lastSyncDateTime",
                "applicationVersion",
                "managementSdkVersion",
                "platformVersion",
                "deviceType",
                "deviceTag",
                "deviceName",
                "flaggedReasons",
                "userId",
                "appIdentifier",
                "version",
                "appliedPolicies",
                "intendedPolicies",
                "operations"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "appliedPolicies",
                "intendedPolicies",
                "operations"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/managedAppRegistrations/{managedAppRegistration-id}": {
      "get": {
        "tags": [
          "me.managedAppRegistration"
        ],
        "summary": "Get managedAppRegistrations from me",
        "operationId": "me.GetManagedAppRegistrations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "managedAppRegistration-id",
            "description": "key: managedAppRegistration-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "managedAppRegistration"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdDateTime",
                "lastSyncDateTime",
                "applicationVersion",
                "managementSdkVersion",
                "platformVersion",
                "deviceType",
                "deviceTag",
                "deviceName",
                "flaggedReasons",
                "userId",
                "appIdentifier",
                "version",
                "appliedPolicies",
                "intendedPolicies",
                "operations"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "appliedPolicies",
                "intendedPolicies",
                "operations"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/managedDevices": {
      "get": {
        "tags": [
          "me.managedDevice"
        ],
        "summary": "Get managedDevices from me",
        "operationId": "me.ListManagedDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userId",
                "userId desc",
                "deviceName",
                "deviceName desc",
                "managedDeviceOwnerType",
                "managedDeviceOwnerType desc",
                "deviceActionResults",
                "deviceActionResults desc",
                "enrolledDateTime",
                "enrolledDateTime desc",
                "lastSyncDateTime",
                "lastSyncDateTime desc",
                "operatingSystem",
                "operatingSystem desc",
                "complianceState",
                "complianceState desc",
                "jailBroken",
                "jailBroken desc",
                "managementAgent",
                "managementAgent desc",
                "osVersion",
                "osVersion desc",
                "easActivated",
                "easActivated desc",
                "easDeviceId",
                "easDeviceId desc",
                "easActivationDateTime",
                "easActivationDateTime desc",
                "azureADRegistered",
                "azureADRegistered desc",
                "deviceEnrollmentType",
                "deviceEnrollmentType desc",
                "activationLockBypassCode",
                "activationLockBypassCode desc",
                "emailAddress",
                "emailAddress desc",
                "azureADDeviceId",
                "azureADDeviceId desc",
                "deviceRegistrationState",
                "deviceRegistrationState desc",
                "deviceCategoryDisplayName",
                "deviceCategoryDisplayName desc",
                "isSupervised",
                "isSupervised desc",
                "exchangeLastSuccessfulSyncDateTime",
                "exchangeLastSuccessfulSyncDateTime desc",
                "exchangeAccessState",
                "exchangeAccessState desc",
                "exchangeAccessStateReason",
                "exchangeAccessStateReason desc",
                "remoteAssistanceSessionUrl",
                "remoteAssistanceSessionUrl desc",
                "remoteAssistanceSessionErrorDetails",
                "remoteAssistanceSessionErrorDetails desc",
                "isEncrypted",
                "isEncrypted desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "model",
                "model desc",
                "manufacturer",
                "manufacturer desc",
                "imei",
                "imei desc",
                "complianceGracePeriodExpirationDateTime",
                "complianceGracePeriodExpirationDateTime desc",
                "serialNumber",
                "serialNumber desc",
                "phoneNumber",
                "phoneNumber desc",
                "androidSecurityPatchLevel",
                "androidSecurityPatchLevel desc",
                "userDisplayName",
                "userDisplayName desc",
                "configurationManagerClientEnabledFeatures",
                "configurationManagerClientEnabledFeatures desc",
                "wiFiMacAddress",
                "wiFiMacAddress desc",
                "deviceHealthAttestationState",
                "deviceHealthAttestationState desc",
                "subscriberCarrier",
                "subscriberCarrier desc",
                "meid",
                "meid desc",
                "totalStorageSpaceInBytes",
                "totalStorageSpaceInBytes desc",
                "freeStorageSpaceInBytes",
                "freeStorageSpaceInBytes desc",
                "managedDeviceName",
                "managedDeviceName desc",
                "partnerReportedThreatState",
                "partnerReportedThreatState desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "deviceName",
                "managedDeviceOwnerType",
                "deviceActionResults",
                "enrolledDateTime",
                "lastSyncDateTime",
                "operatingSystem",
                "complianceState",
                "jailBroken",
                "managementAgent",
                "osVersion",
                "easActivated",
                "easDeviceId",
                "easActivationDateTime",
                "azureADRegistered",
                "deviceEnrollmentType",
                "activationLockBypassCode",
                "emailAddress",
                "azureADDeviceId",
                "deviceRegistrationState",
                "deviceCategoryDisplayName",
                "isSupervised",
                "exchangeLastSuccessfulSyncDateTime",
                "exchangeAccessState",
                "exchangeAccessStateReason",
                "remoteAssistanceSessionUrl",
                "remoteAssistanceSessionErrorDetails",
                "isEncrypted",
                "userPrincipalName",
                "model",
                "manufacturer",
                "imei",
                "complianceGracePeriodExpirationDateTime",
                "serialNumber",
                "phoneNumber",
                "androidSecurityPatchLevel",
                "userDisplayName",
                "configurationManagerClientEnabledFeatures",
                "wiFiMacAddress",
                "deviceHealthAttestationState",
                "subscriberCarrier",
                "meid",
                "totalStorageSpaceInBytes",
                "freeStorageSpaceInBytes",
                "managedDeviceName",
                "partnerReportedThreatState",
                "deviceCategory"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "deviceCategory"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedDevice"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/managedDevices/{managedDevice-id}": {
      "get": {
        "tags": [
          "me.managedDevice"
        ],
        "summary": "Get managedDevices from me",
        "operationId": "me.GetManagedDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "managedDevice-id",
            "description": "key: managedDevice-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "managedDevice"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "deviceName",
                "managedDeviceOwnerType",
                "deviceActionResults",
                "enrolledDateTime",
                "lastSyncDateTime",
                "operatingSystem",
                "complianceState",
                "jailBroken",
                "managementAgent",
                "osVersion",
                "easActivated",
                "easDeviceId",
                "easActivationDateTime",
                "azureADRegistered",
                "deviceEnrollmentType",
                "activationLockBypassCode",
                "emailAddress",
                "azureADDeviceId",
                "deviceRegistrationState",
                "deviceCategoryDisplayName",
                "isSupervised",
                "exchangeLastSuccessfulSyncDateTime",
                "exchangeAccessState",
                "exchangeAccessStateReason",
                "remoteAssistanceSessionUrl",
                "remoteAssistanceSessionErrorDetails",
                "isEncrypted",
                "userPrincipalName",
                "model",
                "manufacturer",
                "imei",
                "complianceGracePeriodExpirationDateTime",
                "serialNumber",
                "phoneNumber",
                "androidSecurityPatchLevel",
                "userDisplayName",
                "configurationManagerClientEnabledFeatures",
                "wiFiMacAddress",
                "deviceHealthAttestationState",
                "subscriberCarrier",
                "meid",
                "totalStorageSpaceInBytes",
                "freeStorageSpaceInBytes",
                "managedDeviceName",
                "partnerReportedThreatState",
                "deviceCategory"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "deviceCategory"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedDevice"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/manager": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get manager from me",
        "operationId": "me.GetManager",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/memberOf": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get memberOf from me",
        "operationId": "me.ListMemberOf",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/memberOf/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get memberOf from me",
        "operationId": "me.GetMemberOf",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/messages": {
      "get": {
        "tags": [
          "me.message"
        ],
        "summary": "Get messages from me",
        "operationId": "me.ListMessages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "categories",
                "categories desc",
                "changeKey",
                "changeKey desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "bccRecipients",
                "bccRecipients desc",
                "body",
                "body desc",
                "bodyPreview",
                "bodyPreview desc",
                "ccRecipients",
                "ccRecipients desc",
                "conversationId",
                "conversationId desc",
                "flag",
                "flag desc",
                "from",
                "from desc",
                "hasAttachments",
                "hasAttachments desc",
                "importance",
                "importance desc",
                "inferenceClassification",
                "inferenceClassification desc",
                "internetMessageHeaders",
                "internetMessageHeaders desc",
                "internetMessageId",
                "internetMessageId desc",
                "isDeliveryReceiptRequested",
                "isDeliveryReceiptRequested desc",
                "isDraft",
                "isDraft desc",
                "isRead",
                "isRead desc",
                "isReadReceiptRequested",
                "isReadReceiptRequested desc",
                "parentFolderId",
                "parentFolderId desc",
                "receivedDateTime",
                "receivedDateTime desc",
                "replyTo",
                "replyTo desc",
                "sender",
                "sender desc",
                "sentDateTime",
                "sentDateTime desc",
                "subject",
                "subject desc",
                "toRecipients",
                "toRecipients desc",
                "uniqueBody",
                "uniqueBody desc",
                "webLink",
                "webLink desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "bccRecipients",
                "body",
                "bodyPreview",
                "ccRecipients",
                "conversationId",
                "flag",
                "from",
                "hasAttachments",
                "importance",
                "inferenceClassification",
                "internetMessageHeaders",
                "internetMessageId",
                "isDeliveryReceiptRequested",
                "isDraft",
                "isRead",
                "isReadReceiptRequested",
                "parentFolderId",
                "receivedDateTime",
                "replyTo",
                "sender",
                "sentDateTime",
                "subject",
                "toRecipients",
                "uniqueBody",
                "webLink",
                "attachments",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.message"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/messages/{message-id}": {
      "get": {
        "tags": [
          "me.message"
        ],
        "summary": "Get messages from me",
        "operationId": "me.GetMessages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "bccRecipients",
                "body",
                "bodyPreview",
                "ccRecipients",
                "conversationId",
                "flag",
                "from",
                "hasAttachments",
                "importance",
                "inferenceClassification",
                "internetMessageHeaders",
                "internetMessageId",
                "isDeliveryReceiptRequested",
                "isDraft",
                "isRead",
                "isReadReceiptRequested",
                "parentFolderId",
                "receivedDateTime",
                "replyTo",
                "sender",
                "sentDateTime",
                "subject",
                "toRecipients",
                "uniqueBody",
                "webLink",
                "attachments",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.message"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/messages/{message-id}/copy": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.copy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destinationId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/mailFolders/{mailFolder-id}/copy"
      ]
    },
    "/me/messages/{message-id}/createForward": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.createForward",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/createReply": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.createReply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/createReplyAll": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.createReplyAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/forward": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.forward",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "toRecipients": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/move": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.move",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destinationId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/me/mailFolders/{mailFolder-id}/move"
      ]
    },
    "/me/messages/{message-id}/reply": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.reply",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/replyAll": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.messages.replyAll",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/{message-id}/send": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "The following example shows how to call this API.",
        "operationId": "me.messages.send",
        "parameters": [
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Length",
            "description": "* Required.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/messages/delta()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "me.messages.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/calendarView/delta()",
        "/me/contactFolders/delta()",
        "/me/contacts/delta()",
        "/me/events/delta()",
        "/me/mailFolders/delta()"
      ]
    },
    "/me/assignLicense": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.assignLicense",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addLicenses": {
                  "type": "array",
                  "items": { }
                },
                "removeLicenses": {
                  "type": "array",
                  "items": {
                    "format": "uuid",
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.ReadWrite.All",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "User.ReadWrite.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/findMeetingTimes": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Notice that the request specifies time in the PST time zone, and the response returns meeting time suggestions in UTC, by default. You can use the `Prefer: outlook.timezone` request \r\nheader to specify PST as well for the time values in the response.",
        "operationId": "me.findMeetingTimes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer: outlook.timezone",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "attendees": {
                  "type": "array",
                  "items": { }
                },
                "locationConstraint": { },
                "timeConstraint": { },
                "meetingDuration": {
                  "format": "duration",
                  "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                  "type": "string"
                },
                "returnSuggestionReasons": {
                  "default": false,
                  "type": "boolean"
                },
                "minimumAttendeePercentage": {
                  "format": "double"
                },
                "isOrganizerOptional": {
                  "default": false,
                  "type": "boolean"
                },
                "maxCandidates": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read.Shared",
              "Calendars.ReadWrite.Shared"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/getMailTips": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Invoke action getMailTips",
        "operationId": "me.getMailTips",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EmailAddresses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "MailTipsOptions": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.Read.Shared"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read"
            ]
          },
          {
            "Application": [
              "Mail.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/reminderView(endDateTime={endDateTime},startDateTime={startDateTime})": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.reminderView.d02b",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "type": "string"
          },
          {
            "in": "path",
            "name": "endDateTime",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "startDateTime",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/me/sendMail": {
      "post": {
        "tags": [
          "me.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.sendMail",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "message": { },
                "saveToSentItems": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/me/onenote": {
      "get": {
        "tags": [
          "me.onenote"
        ],
        "summary": "Get onenote from me",
        "operationId": "me.GetOnenote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "notebooks",
                "operations",
                "pages",
                "resources",
                "sectionGroups",
                "sections"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "notebooks",
                "operations",
                "pages",
                "resources",
                "sectionGroups",
                "sections"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.onenote"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/outlook": {
      "get": {
        "tags": [
          "me.outlookUser"
        ],
        "summary": "Get outlook from me",
        "operationId": "me.GetOutlook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "masterCategories"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "masterCategories"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.outlookUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/outlook/supportedLanguages()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "me.outlook.supportedLanguages.7d99",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/me/outlook/supportedTimeZones()": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function supportedTimeZones",
        "operationId": "me.outlook.supportedTimeZones.4c5b",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/outlook/supportedTimeZones(TimeZoneStandard={TimeZoneStandard})"
      ]
    },
    "/me/outlook/supportedTimeZones(TimeZoneStandard={TimeZoneStandard})": {
      "get": {
        "tags": [
          "me.Functions"
        ],
        "summary": "Invoke function supportedTimeZones",
        "operationId": "me.outlook.supportedTimeZones.cfd8",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "TimeZoneStandard",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/me/outlook/supportedTimeZones()"
      ]
    },
    "/me/ownedDevices": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get ownedDevices from me",
        "operationId": "me.ListOwnedDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/ownedDevices/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get ownedDevices from me",
        "operationId": "me.GetOwnedDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/ownedObjects": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get ownedObjects from me",
        "operationId": "me.ListOwnedObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/ownedObjects/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get ownedObjects from me",
        "operationId": "me.GetOwnedObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/people": {
      "get": {
        "tags": [
          "me.person"
        ],
        "summary": "Get people from me",
        "operationId": "me.ListPeople",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "birthday",
                "birthday desc",
                "companyName",
                "companyName desc",
                "department",
                "department desc",
                "displayName",
                "displayName desc",
                "scoredEmailAddresses",
                "scoredEmailAddresses desc",
                "givenName",
                "givenName desc",
                "imAddress",
                "imAddress desc",
                "isFavorite",
                "isFavorite desc",
                "jobTitle",
                "jobTitle desc",
                "officeLocation",
                "officeLocation desc",
                "personNotes",
                "personNotes desc",
                "personType",
                "personType desc",
                "phones",
                "phones desc",
                "postalAddresses",
                "postalAddresses desc",
                "profession",
                "profession desc",
                "surname",
                "surname desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "websites",
                "websites desc",
                "yomiCompany",
                "yomiCompany desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "birthday",
                "companyName",
                "department",
                "displayName",
                "scoredEmailAddresses",
                "givenName",
                "imAddress",
                "isFavorite",
                "jobTitle",
                "officeLocation",
                "personNotes",
                "personType",
                "phones",
                "postalAddresses",
                "profession",
                "surname",
                "userPrincipalName",
                "websites",
                "yomiCompany"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.person"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/people/{person-id}": {
      "get": {
        "tags": [
          "me.person"
        ],
        "summary": "Get people from me",
        "operationId": "me.GetPeople",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "person-id",
            "description": "key: person-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "person"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "birthday",
                "companyName",
                "department",
                "displayName",
                "scoredEmailAddresses",
                "givenName",
                "imAddress",
                "isFavorite",
                "jobTitle",
                "officeLocation",
                "personNotes",
                "personType",
                "phones",
                "postalAddresses",
                "profession",
                "surname",
                "userPrincipalName",
                "websites",
                "yomiCompany"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.person"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/photo": {
      "get": {
        "tags": [
          "me.profilePhoto"
        ],
        "summary": "Get photo from me",
        "operationId": "me.GetPhoto",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "height",
                "width"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/planner": {
      "get": {
        "tags": [
          "me.plannerUser"
        ],
        "summary": "Get planner from me",
        "operationId": "me.GetPlanner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "plans",
                "tasks"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "plans",
                "tasks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/registeredDevices": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get registeredDevices from me",
        "operationId": "me.ListRegisteredDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/me/registeredDevices/{directoryObject-id}": {
      "get": {
        "tags": [
          "me.directoryObject"
        ],
        "summary": "Get registeredDevices from me",
        "operationId": "me.GetRegisteredDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/organization": {
      "get": {
        "tags": [
          "organization.organization"
        ],
        "summary": "Get organization",
        "operationId": "organization.organization.GetOrganization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "mobileDeviceManagementAuthority",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyLastDirSyncTime",
                "country",
                "countryLetterCode",
                "deletionTimestamp",
                "dirSyncEnabled",
                "displayName",
                "marketingNotificationEmails",
                "objectType",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "postalCode",
                "preferredLanguage",
                "privacyProfile",
                "provisionedPlans",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationPhones",
                "state",
                "street",
                "technicalNotificationMails",
                "telephoneNumber",
                "verifiedDomains",
                "extensions"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "organization.organization"
        ],
        "summary": "Update organization",
        "operationId": "organization.organization.UpdateOrganization",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/organization/extensions": {
      "get": {
        "tags": [
          "organization.extension"
        ],
        "summary": "Get extensions from organization",
        "operationId": "organization.ListExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/organization/extensions/{extension-id}": {
      "get": {
        "tags": [
          "organization.extension"
        ],
        "summary": "Get extensions from organization",
        "operationId": "organization.GetExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "extension-id",
            "description": "key: extension-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "extension"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner": {
      "get": {
        "tags": [
          "planner.planner"
        ],
        "summary": "The **planner** resource is available at the root of the graph.",
        "operationId": "planner.planner.GetPlanner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "buckets",
                "plans",
                "tasks"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "buckets",
                "plans",
                "tasks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "planner.planner"
        ],
        "summary": "Update planner",
        "operationId": "planner.planner.UpdatePlanner",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/buckets": {
      "get": {
        "tags": [
          "planner.plannerBucket"
        ],
        "summary": "Get buckets from planner",
        "operationId": "planner.ListBuckets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "name",
                "name desc",
                "orderHint",
                "orderHint desc",
                "planId",
                "planId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "name",
                "orderHint",
                "planId",
                "tasks"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "tasks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerBucket"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/buckets/{plannerBucket-id}": {
      "get": {
        "tags": [
          "planner.plannerBucket"
        ],
        "summary": "Get buckets from planner",
        "operationId": "planner.GetBuckets",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "plannerBucket-id",
            "description": "key: plannerBucket-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "plannerBucket"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "name",
                "orderHint",
                "planId",
                "tasks"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "tasks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerBucket"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/plans": {
      "get": {
        "tags": [
          "planner.plannerPlan"
        ],
        "summary": "Get plans from planner",
        "operationId": "planner.ListPlans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "owner",
                "owner desc",
                "title",
                "title desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "owner",
                "title",
                "buckets",
                "details",
                "tasks"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "buckets",
                "details",
                "tasks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerPlan"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/plans/{plannerPlan-id}": {
      "get": {
        "tags": [
          "planner.plannerPlan"
        ],
        "summary": "Get plans from planner",
        "operationId": "planner.GetPlans",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "plannerPlan-id",
            "description": "key: plannerPlan-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "plannerPlan"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "owner",
                "title",
                "buckets",
                "details",
                "tasks"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "buckets",
                "details",
                "tasks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerPlan"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/tasks": {
      "get": {
        "tags": [
          "planner.plannerTask"
        ],
        "summary": "Get tasks from planner",
        "operationId": "planner.ListTasks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "activeChecklistItemCount",
                "activeChecklistItemCount desc",
                "appliedCategories",
                "appliedCategories desc",
                "assigneePriority",
                "assigneePriority desc",
                "assignments",
                "assignments desc",
                "bucketId",
                "bucketId desc",
                "checklistItemCount",
                "checklistItemCount desc",
                "completedBy",
                "completedBy desc",
                "completedDateTime",
                "completedDateTime desc",
                "conversationThreadId",
                "conversationThreadId desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "dueDateTime",
                "dueDateTime desc",
                "hasDescription",
                "hasDescription desc",
                "orderHint",
                "orderHint desc",
                "percentComplete",
                "percentComplete desc",
                "planId",
                "planId desc",
                "previewType",
                "previewType desc",
                "referenceCount",
                "referenceCount desc",
                "startDateTime",
                "startDateTime desc",
                "title",
                "title desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "activeChecklistItemCount",
                "appliedCategories",
                "assigneePriority",
                "assignments",
                "bucketId",
                "checklistItemCount",
                "completedBy",
                "completedDateTime",
                "conversationThreadId",
                "createdBy",
                "createdDateTime",
                "dueDateTime",
                "hasDescription",
                "orderHint",
                "percentComplete",
                "planId",
                "previewType",
                "referenceCount",
                "startDateTime",
                "title",
                "assignedToTaskBoardFormat",
                "bucketTaskBoardFormat",
                "details",
                "progressTaskBoardFormat"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "assignedToTaskBoardFormat",
                "bucketTaskBoardFormat",
                "details",
                "progressTaskBoardFormat"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerTask"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/planner/tasks/{plannerTask-id}": {
      "get": {
        "tags": [
          "planner.plannerTask"
        ],
        "summary": "Get tasks from planner",
        "operationId": "planner.GetTasks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "plannerTask-id",
            "description": "key: plannerTask-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "plannerTask"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "activeChecklistItemCount",
                "appliedCategories",
                "assigneePriority",
                "assignments",
                "bucketId",
                "checklistItemCount",
                "completedBy",
                "completedDateTime",
                "conversationThreadId",
                "createdBy",
                "createdDateTime",
                "dueDateTime",
                "hasDescription",
                "orderHint",
                "percentComplete",
                "planId",
                "previewType",
                "referenceCount",
                "startDateTime",
                "title",
                "assignedToTaskBoardFormat",
                "bucketTaskBoardFormat",
                "details",
                "progressTaskBoardFormat"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "assignedToTaskBoardFormat",
                "bucketTaskBoardFormat",
                "details",
                "progressTaskBoardFormat"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerTask"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "reports.reportRoot"
        ],
        "summary": "Get reports",
        "operationId": "reports.reportRoot.GetReportRoot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.reportRoot"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "reports.reportRoot"
        ],
        "summary": "Update reports",
        "operationId": "reports.reportRoot.UpdateReportRoot",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.reportRoot"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/reports/getEmailActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailActivityCounts",
        "operationId": "reports.getEmailActivityCounts.d2c9",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getEmailActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailActivityUserCounts",
        "operationId": "reports.getEmailActivityUserCounts.67ae",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getEmailActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailActivityUserDetail",
        "operationId": "reports.getEmailActivityUserDetail.35e0",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getEmailActivityUserDetail(period={period})"
      ]
    },
    "/reports/getEmailActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailActivityUserDetail",
        "operationId": "reports.getEmailActivityUserDetail.ae84",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getEmailActivityUserDetail(date={date})"
      ]
    },
    "/reports/getEmailAppUsageAppsUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailAppUsageAppsUserCounts",
        "operationId": "reports.getEmailAppUsageAppsUserCounts.807c",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getEmailAppUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailAppUsageUserCounts",
        "operationId": "reports.getEmailAppUsageUserCounts.6fd2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getEmailAppUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailAppUsageUserDetail",
        "operationId": "reports.getEmailAppUsageUserDetail.8c90",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getEmailAppUsageUserDetail(period={period})"
      ]
    },
    "/reports/getEmailAppUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailAppUsageUserDetail",
        "operationId": "reports.getEmailAppUsageUserDetail.a73d",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getEmailAppUsageUserDetail(date={date})"
      ]
    },
    "/reports/getEmailAppUsageVersionsUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getEmailAppUsageVersionsUserCounts",
        "operationId": "reports.getEmailAppUsageVersionsUserCounts.f73b",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getMailboxUsageDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getMailboxUsageDetail",
        "operationId": "reports.getMailboxUsageDetail.6ef8",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getMailboxUsageMailboxCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getMailboxUsageMailboxCounts",
        "operationId": "reports.getMailboxUsageMailboxCounts.1ae9",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getMailboxUsageQuotaStatusMailboxCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getMailboxUsageQuotaStatusMailboxCounts",
        "operationId": "reports.getMailboxUsageQuotaStatusMailboxCounts.b080",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getMailboxUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getMailboxUsageStorage",
        "operationId": "reports.getMailboxUsageStorage.fdb0",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ActivationCounts()": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActivationCounts",
        "operationId": "reports.getOffice365ActivationCounts.dd57",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ActivationsUserCounts()": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActivationsUserCounts",
        "operationId": "reports.getOffice365ActivationsUserCounts.21b3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ActivationsUserDetail()": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActivationsUserDetail",
        "operationId": "reports.getOffice365ActivationsUserDetail.1156",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ActiveUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActiveUserCounts",
        "operationId": "reports.getOffice365ActiveUserCounts.c3b0",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ActiveUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActiveUserDetail",
        "operationId": "reports.getOffice365ActiveUserDetail.3621",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOffice365ActiveUserDetail(period={period})"
      ]
    },
    "/reports/getOffice365ActiveUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ActiveUserDetail",
        "operationId": "reports.getOffice365ActiveUserDetail.7f57",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOffice365ActiveUserDetail(date={date})"
      ]
    },
    "/reports/getOffice365GroupsActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityCounts",
        "operationId": "reports.getOffice365GroupsActivityCounts.9333",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365GroupsActivityDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityDetail",
        "operationId": "reports.getOffice365GroupsActivityDetail.d699",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOffice365GroupsActivityDetail(period={period})"
      ]
    },
    "/reports/getOffice365GroupsActivityDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityDetail",
        "operationId": "reports.getOffice365GroupsActivityDetail.1b51",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOffice365GroupsActivityDetail(date={date})"
      ]
    },
    "/reports/getOffice365GroupsActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityFileCounts",
        "operationId": "reports.getOffice365GroupsActivityFileCounts.7206",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365GroupsActivityGroupCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityGroupCounts",
        "operationId": "reports.getOffice365GroupsActivityGroupCounts.f5de",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365GroupsActivityStorage(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365GroupsActivityStorage",
        "operationId": "reports.getOffice365GroupsActivityStorage.a4d3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOffice365ServicesUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOffice365ServicesUserCounts",
        "operationId": "reports.getOffice365ServicesUserCounts.0d23",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOneDriveActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveActivityFileCounts",
        "operationId": "reports.getOneDriveActivityFileCounts.c2dc",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOneDriveActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveActivityUserCounts",
        "operationId": "reports.getOneDriveActivityUserCounts.442b",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOneDriveActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveActivityUserDetail",
        "operationId": "reports.getOneDriveActivityUserDetail.57de",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOneDriveActivityUserDetail(period={period})"
      ]
    },
    "/reports/getOneDriveActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveActivityUserDetail",
        "operationId": "reports.getOneDriveActivityUserDetail.20ae",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOneDriveActivityUserDetail(date={date})"
      ]
    },
    "/reports/getOneDriveUsageAccountCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveUsageAccountCounts",
        "operationId": "reports.getOneDriveUsageAccountCounts.801b",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOneDriveUsageAccountDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveUsageAccountDetail",
        "operationId": "reports.getOneDriveUsageAccountDetail.b461",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOneDriveUsageAccountDetail(period={period})"
      ]
    },
    "/reports/getOneDriveUsageAccountDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveUsageAccountDetail",
        "operationId": "reports.getOneDriveUsageAccountDetail.3f04",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getOneDriveUsageAccountDetail(date={date})"
      ]
    },
    "/reports/getOneDriveUsageFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveUsageFileCounts",
        "operationId": "reports.getOneDriveUsageFileCounts.8444",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getOneDriveUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getOneDriveUsageStorage",
        "operationId": "reports.getOneDriveUsageStorage.c292",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointActivityFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointActivityFileCounts",
        "operationId": "reports.getSharePointActivityFileCounts.b044",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointActivityPages(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointActivityPages",
        "operationId": "reports.getSharePointActivityPages.73a2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointActivityUserCounts",
        "operationId": "reports.getSharePointActivityUserCounts.a723",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointActivityUserDetail",
        "operationId": "reports.getSharePointActivityUserDetail.c908",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSharePointActivityUserDetail(period={period})"
      ]
    },
    "/reports/getSharePointActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointActivityUserDetail",
        "operationId": "reports.getSharePointActivityUserDetail.9d39",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSharePointActivityUserDetail(date={date})"
      ]
    },
    "/reports/getSharePointSiteUsageDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsageDetail",
        "operationId": "reports.getSharePointSiteUsageDetail.9a98",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSharePointSiteUsageDetail(period={period})"
      ]
    },
    "/reports/getSharePointSiteUsageDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsageDetail",
        "operationId": "reports.getSharePointSiteUsageDetail.bec0",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSharePointSiteUsageDetail(date={date})"
      ]
    },
    "/reports/getSharePointSiteUsageFileCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsageFileCounts",
        "operationId": "reports.getSharePointSiteUsageFileCounts.b2bd",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointSiteUsagePages(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsagePages",
        "operationId": "reports.getSharePointSiteUsagePages.ef52",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointSiteUsageSiteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsageSiteCounts",
        "operationId": "reports.getSharePointSiteUsageSiteCounts.1b68",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSharePointSiteUsageStorage(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSharePointSiteUsageStorage",
        "operationId": "reports.getSharePointSiteUsageStorage.4100",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityCounts",
        "operationId": "reports.getSkypeForBusinessActivityCounts.1cd1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserCounts",
        "operationId": "reports.getSkypeForBusinessActivityUserCounts.502a",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserDetail",
        "operationId": "reports.getSkypeForBusinessActivityUserDetail.de4b",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSkypeForBusinessActivityUserDetail(period={period})"
      ]
    },
    "/reports/getSkypeForBusinessActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessActivityUserDetail",
        "operationId": "reports.getSkypeForBusinessActivityUserDetail.2a24",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSkypeForBusinessActivityUserDetail(date={date})"
      ]
    },
    "/reports/getSkypeForBusinessDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageDistributionUserCounts",
        "operationId": "reports.getSkypeForBusinessDeviceUsageDistributionUserCounts.b288",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserCounts",
        "operationId": "reports.getSkypeForBusinessDeviceUsageUserCounts.afec",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserDetail",
        "operationId": "reports.getSkypeForBusinessDeviceUsageUserDetail.c31f",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSkypeForBusinessDeviceUsageUserDetail(period={period})"
      ]
    },
    "/reports/getSkypeForBusinessDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessDeviceUsageUserDetail",
        "operationId": "reports.getSkypeForBusinessDeviceUsageUserDetail.e139",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getSkypeForBusinessDeviceUsageUserDetail(date={date})"
      ]
    },
    "/reports/getSkypeForBusinessOrganizerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityCounts",
        "operationId": "reports.getSkypeForBusinessOrganizerActivityCounts.337a",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessOrganizerActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityMinuteCounts",
        "operationId": "reports.getSkypeForBusinessOrganizerActivityMinuteCounts.a6f3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessOrganizerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessOrganizerActivityUserCounts",
        "operationId": "reports.getSkypeForBusinessOrganizerActivityUserCounts.61cb",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessParticipantActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityCounts",
        "operationId": "reports.getSkypeForBusinessParticipantActivityCounts.3f25",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessParticipantActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityMinuteCounts",
        "operationId": "reports.getSkypeForBusinessParticipantActivityMinuteCounts.19f1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessParticipantActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessParticipantActivityUserCounts",
        "operationId": "reports.getSkypeForBusinessParticipantActivityUserCounts.2fb8",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessPeerToPeerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityCounts",
        "operationId": "reports.getSkypeForBusinessPeerToPeerActivityCounts.4ba6",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessPeerToPeerActivityMinuteCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityMinuteCounts",
        "operationId": "reports.getSkypeForBusinessPeerToPeerActivityMinuteCounts.de62",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getSkypeForBusinessPeerToPeerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getSkypeForBusinessPeerToPeerActivityUserCounts",
        "operationId": "reports.getSkypeForBusinessPeerToPeerActivityUserCounts.5fbc",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getTeamsDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsDeviceUsageDistributionUserCounts",
        "operationId": "reports.getTeamsDeviceUsageDistributionUserCounts.91e1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getTeamsDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserCounts",
        "operationId": "reports.getTeamsDeviceUsageUserCounts.c715",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getTeamsDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserDetail",
        "operationId": "reports.getTeamsDeviceUsageUserDetail.43be",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getTeamsDeviceUsageUserDetail(period={period})"
      ]
    },
    "/reports/getTeamsDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsDeviceUsageUserDetail",
        "operationId": "reports.getTeamsDeviceUsageUserDetail.aab9",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getTeamsDeviceUsageUserDetail(date={date})"
      ]
    },
    "/reports/getTeamsUserActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsUserActivityCounts",
        "operationId": "reports.getTeamsUserActivityCounts.0201",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getTeamsUserActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsUserActivityUserCounts",
        "operationId": "reports.getTeamsUserActivityUserCounts.fd77",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getTeamsUserActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsUserActivityUserDetail",
        "operationId": "reports.getTeamsUserActivityUserDetail.3a37",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getTeamsUserActivityUserDetail(period={period})"
      ]
    },
    "/reports/getTeamsUserActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getTeamsUserActivityUserDetail",
        "operationId": "reports.getTeamsUserActivityUserDetail.dd45",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getTeamsUserActivityUserDetail(date={date})"
      ]
    },
    "/reports/getYammerActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerActivityCounts",
        "operationId": "reports.getYammerActivityCounts.31c4",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getYammerActivityUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerActivityUserCounts",
        "operationId": "reports.getYammerActivityUserCounts.5f59",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getYammerActivityUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerActivityUserDetail",
        "operationId": "reports.getYammerActivityUserDetail.7d9d",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerActivityUserDetail(period={period})"
      ]
    },
    "/reports/getYammerActivityUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerActivityUserDetail",
        "operationId": "reports.getYammerActivityUserDetail.ca58",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerActivityUserDetail(date={date})"
      ]
    },
    "/reports/getYammerDeviceUsageDistributionUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerDeviceUsageDistributionUserCounts",
        "operationId": "reports.getYammerDeviceUsageDistributionUserCounts.9d71",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getYammerDeviceUsageUserCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserCounts",
        "operationId": "reports.getYammerDeviceUsageUserCounts.0624",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getYammerDeviceUsageUserDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserDetail",
        "operationId": "reports.getYammerDeviceUsageUserDetail.c8b5",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerDeviceUsageUserDetail(period={period})"
      ]
    },
    "/reports/getYammerDeviceUsageUserDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerDeviceUsageUserDetail",
        "operationId": "reports.getYammerDeviceUsageUserDetail.1955",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerDeviceUsageUserDetail(date={date})"
      ]
    },
    "/reports/getYammerGroupsActivityCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerGroupsActivityCounts",
        "operationId": "reports.getYammerGroupsActivityCounts.3fdb",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/reports/getYammerGroupsActivityDetail(date={date})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerGroupsActivityDetail",
        "operationId": "reports.getYammerGroupsActivityDetail.3ad3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "date",
            "required": true,
            "type": "string",
            "format": "date",
            "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerGroupsActivityDetail(period={period})"
      ]
    },
    "/reports/getYammerGroupsActivityDetail(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerGroupsActivityDetail",
        "operationId": "reports.getYammerGroupsActivityDetail.1de3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/reports/getYammerGroupsActivityDetail(date={date})"
      ]
    },
    "/reports/getYammerGroupsActivityGroupCounts(period={period})": {
      "get": {
        "tags": [
          "reports.Functions"
        ],
        "summary": "Invoke function getYammerGroupsActivityGroupCounts",
        "operationId": "reports.getYammerGroupsActivityGroupCounts.61cb",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-None-Match",
            "description": "If this request header is included and the eTag provided matches the current tag on the file, a 304 Not Modified response code is returned. Optional.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "period",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Reports.Read.All"
            ]
          },
          {
            "Application": [
              "Reports.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/schemaExtensions": {
      "get": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Get entities from schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.ListSchemaExtension",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "owner",
                "owner desc",
                "properties",
                "properties desc",
                "status",
                "status desc",
                "targetTypes",
                "targetTypes desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "owner",
                "properties",
                "status",
                "targetTypes"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of schemaExtension",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.schemaExtension"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Add new entity to schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.CreateSchemaExtension",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/schemaExtensions/{schemaExtension-id}": {
      "get": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Get entity from schemaExtensions by key",
        "operationId": "schemaExtensions.schemaExtension.GetSchemaExtension",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "schemaExtension-id",
            "description": "key: schemaExtension-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "schemaExtension"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "owner",
                "properties",
                "status",
                "targetTypes"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Update entity in schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.UpdateSchemaExtension",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "schemaExtension-id",
            "description": "key: schemaExtension-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "schemaExtension"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "schemaExtensions.schemaExtension"
        ],
        "summary": "Delete entity from schemaExtensions",
        "operationId": "schemaExtensions.schemaExtension.DeleteSchemaExtension",
        "parameters": [
          {
            "in": "path",
            "name": "schemaExtension-id",
            "description": "key: schemaExtension-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "schemaExtension"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/security": {
      "get": {
        "tags": [
          "security.security"
        ],
        "summary": "The **security** resource is available at the root of the graph.",
        "operationId": "security.security.GetSecurity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "alerts"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "alerts"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.security"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "security.security"
        ],
        "summary": "Update security",
        "operationId": "security.security.UpdateSecurity",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.security"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/security/alerts": {
      "get": {
        "tags": [
          "security.alert"
        ],
        "summary": "Get alerts from security",
        "operationId": "security.ListAlerts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.alert"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/security/alerts/": {
      "get": {
        "tags": [
          "security.alert"
        ],
        "summary": "Get alerts from security",
        "operationId": "security.GetAlerts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.alert"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares": {
      "get": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Get entities from shares",
        "operationId": "shares.sharedDriveItem.ListSharedDriveItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "owner",
                "owner desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of sharedDriveItem",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Add new entity to shares",
        "operationId": "shares.sharedDriveItem.CreateSharedDriveItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}": {
      "get": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Get entity from shares by key",
        "operationId": "shares.sharedDriveItem.GetSharedDriveItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Update entity in shares",
        "operationId": "shares.sharedDriveItem.UpdateSharedDriveItem",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "shares.sharedDriveItem"
        ],
        "summary": "Delete entity from shares",
        "operationId": "shares.sharedDriveItem.DeleteSharedDriveItem",
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/driveItem": {
      "get": {
        "tags": [
          "shares.driveItem"
        ],
        "summary": "Get driveItem from shares",
        "operationId": "shares.GetDriveItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/driveItem/copy": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "shares.driveItem.copy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parentReference": { },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/copy",
        "/shares/{sharedDriveItem-id}/root/copy"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/createLink": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "shares.driveItem.createLink",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createLink",
        "/shares/{sharedDriveItem-id}/root/createLink"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/createUploadSession": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "shares.driveItem.createUploadSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "header",
            "name": "if-match",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": { }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createUploadSession",
        "/shares/{sharedDriveItem-id}/root/createUploadSession"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/delta()": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "shares.driveItem.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})",
        "/shares/{sharedDriveItem-id}/root/delta()",
        "/shares/{sharedDriveItem-id}/root/delta(token={token})"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "shares.driveItem.delta.cf70",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta()",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})",
        "/shares/{sharedDriveItem-id}/root/delta()",
        "/shares/{sharedDriveItem-id}/root/delta(token={token})"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/invite": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "shares.driveItem.invite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipients": {
                  "type": "array",
                  "items": { }
                },
                "message": {
                  "type": "string"
                },
                "requireSignIn": {
                  "default": false,
                  "type": "boolean"
                },
                "sendInvitation": {
                  "default": false,
                  "type": "boolean"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/invite",
        "/shares/{sharedDriveItem-id}/root/invite"
      ]
    },
    "/shares/{sharedDriveItem-id}/driveItem/search(q={q})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "shares.driveItem.search.f2b1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/search(q={q})",
        "/shares/{sharedDriveItem-id}/root/search(q={q})"
      ]
    },
    "/shares/{sharedDriveItem-id}/items": {
      "get": {
        "tags": [
          "shares.driveItem"
        ],
        "summary": "Get items from shares",
        "operationId": "shares.ListItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "audio",
                "audio desc",
                "content",
                "content desc",
                "cTag",
                "cTag desc",
                "deleted",
                "deleted desc",
                "file",
                "file desc",
                "fileSystemInfo",
                "fileSystemInfo desc",
                "folder",
                "folder desc",
                "image",
                "image desc",
                "location",
                "location desc",
                "package",
                "package desc",
                "photo",
                "photo desc",
                "publication",
                "publication desc",
                "remoteItem",
                "remoteItem desc",
                "root",
                "root desc",
                "searchResult",
                "searchResult desc",
                "shared",
                "shared desc",
                "sharepointIds",
                "sharepointIds desc",
                "size",
                "size desc",
                "specialFolder",
                "specialFolder desc",
                "video",
                "video desc",
                "webDavUrl",
                "webDavUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}": {
      "get": {
        "tags": [
          "shares.driveItem"
        ],
        "summary": "Get items from shares",
        "operationId": "shares.GetItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/copy": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "shares.items.copy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parentReference": { },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/copy",
        "/shares/{sharedDriveItem-id}/root/copy"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createLink": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "shares.items.createLink",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/createLink",
        "/shares/{sharedDriveItem-id}/root/createLink"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createUploadSession": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "shares.items.createUploadSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "header",
            "name": "if-match",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": { }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/createUploadSession",
        "/shares/{sharedDriveItem-id}/root/createUploadSession"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "shares.items.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta()",
        "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})",
        "/shares/{sharedDriveItem-id}/root/delta()",
        "/shares/{sharedDriveItem-id}/root/delta(token={token})"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "shares.items.delta.cf70",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta()",
        "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()",
        "/shares/{sharedDriveItem-id}/root/delta()",
        "/shares/{sharedDriveItem-id}/root/delta(token={token})"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/invite": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "shares.items.invite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipients": {
                  "type": "array",
                  "items": { }
                },
                "message": {
                  "type": "string"
                },
                "requireSignIn": {
                  "default": false,
                  "type": "boolean"
                },
                "sendInvitation": {
                  "default": false,
                  "type": "boolean"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/invite",
        "/shares/{sharedDriveItem-id}/root/invite"
      ]
    },
    "/shares/{sharedDriveItem-id}/items/{driveItem-id}/search(q={q})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "shares.items.search.f2b1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "driveItem-id",
            "description": "key: driveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "driveItem"
          },
          {
            "in": "path",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/search(q={q})",
        "/shares/{sharedDriveItem-id}/root/search(q={q})"
      ]
    },
    "/shares/{sharedDriveItem-id}/list": {
      "get": {
        "tags": [
          "shares.list"
        ],
        "summary": "Get list from shares",
        "operationId": "shares.GetList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "list",
                "system",
                "sharepointIds",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "items"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "items"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.list"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/listItem": {
      "get": {
        "tags": [
          "shares.listItem"
        ],
        "summary": "Get listItem from shares",
        "operationId": "shares.GetListItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "contentType",
                "sharepointIds",
                "createdByUser",
                "lastModifiedByUser",
                "fields",
                "driveItem",
                "versions"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "fields",
                "driveItem",
                "versions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.listItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/root": {
      "get": {
        "tags": [
          "shares.driveItem"
        ],
        "summary": "Get root from shares",
        "operationId": "shares.GetRoot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "publication",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "permissions",
                "thumbnails",
                "versions",
                "listItem",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/shares/{sharedDriveItem-id}/root/copy": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Returns details about how to [monitor the progress](../../../concepts/long_running_actions_overview.md) of the copy, upon accepting the request.",
        "operationId": "shares.root.copy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parentReference": { },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/copy",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/copy"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/createLink": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "The following example requests a sharing link to be created for the DriveItem specified by {itemId} in the user's OneDrive.\r\nThe sharing link is configured to be read-only and usable by anyone with the link.",
        "operationId": "shares.root.createLink",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/createLink",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createLink"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/createUploadSession": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "Invoke action createUploadSession",
        "operationId": "shares.root.createUploadSession",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "header",
            "name": "if-match",
            "description": "If this request header is included and the eTag (or cTag) provided does not match the current etag on the item, a 412 Precondition Failed error response is returned.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item": { }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/createUploadSession",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/createUploadSession"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/delta()": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to establish your local state.",
        "operationId": "shares.root.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta()",
        "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})",
        "/shares/{sharedDriveItem-id}/root/delta(token={token})"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/delta(token={token})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Here is an example of how to call this API to update your local state.",
        "operationId": "shares.root.delta.cf70",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/delta()",
        "/shares/{sharedDriveItem-id}/driveItem/delta(token={token})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta()",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/delta(token={token})",
        "/shares/{sharedDriveItem-id}/root/delta()"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/invite": {
      "post": {
        "tags": [
          "shares.Actions"
        ],
        "summary": "This example sends a sharing invitation to a user with email address 'ryan@contoso.com' with a message about a file being collaborated on.\r\nThe invitation grants Ryan read-write access to the file.",
        "operationId": "shares.root.invite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "recipients": {
                  "type": "array",
                  "items": { }
                },
                "message": {
                  "type": "string"
                },
                "requireSignIn": {
                  "default": false,
                  "type": "boolean"
                },
                "sendInvitation": {
                  "default": false,
                  "type": "boolean"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.ReadWrite",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.ReadWrite.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/invite",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/invite"
      ]
    },
    "/shares/{sharedDriveItem-id}/root/search(q={q})": {
      "get": {
        "tags": [
          "shares.Functions"
        ],
        "summary": "Invoke function search",
        "operationId": "shares.root.search.f2b1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "path",
            "name": "q",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Files.Read",
              "Files.ReadWrite",
              "Files.Read.All",
              "Files.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Files.Read.All",
              "Files.ReadWrite.All",
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/shares/{sharedDriveItem-id}/driveItem/search(q={q})",
        "/shares/{sharedDriveItem-id}/items/{driveItem-id}/search(q={q})"
      ]
    },
    "/shares/{sharedDriveItem-id}/site": {
      "get": {
        "tags": [
          "shares.site"
        ],
        "summary": "Get site from shares",
        "operationId": "shares.GetSite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sharedDriveItem-id",
            "description": "key: sharedDriveItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "sharedDriveItem"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "root",
                "sharepointIds",
                "siteCollection",
                "displayName",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites": {
      "get": {
        "tags": [
          "sites.site"
        ],
        "summary": "Get entities from sites",
        "operationId": "sites.site.ListSite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc",
                "displayName",
                "displayName desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "root",
                "sharepointIds",
                "siteCollection",
                "displayName",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of site",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.site"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "sites.site"
        ],
        "summary": "Add new entity to sites",
        "operationId": "sites.site.CreateSite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}": {
      "get": {
        "tags": [
          "sites.site"
        ],
        "summary": "Get entity from sites by key",
        "operationId": "sites.site.GetSite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "root",
                "sharepointIds",
                "siteCollection",
                "displayName",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "Sites.Read.All",
              "Sites.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "sites.site"
        ],
        "summary": "Update entity in sites",
        "operationId": "sites.site.UpdateSite",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "sites.site"
        ],
        "summary": "Delete entity from sites",
        "operationId": "sites.site.DeleteSite",
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/columns": {
      "get": {
        "tags": [
          "sites.columnDefinition"
        ],
        "summary": "Get columns from sites",
        "operationId": "sites.ListColumns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "columnGroup",
                "columnGroup desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "enforceUniqueValues",
                "enforceUniqueValues desc",
                "hidden",
                "hidden desc",
                "indexed",
                "indexed desc",
                "name",
                "name desc",
                "readOnly",
                "readOnly desc",
                "required",
                "required desc",
                "boolean",
                "boolean desc",
                "calculated",
                "calculated desc",
                "choice",
                "choice desc",
                "currency",
                "currency desc",
                "dateTime",
                "dateTime desc",
                "defaultValue",
                "defaultValue desc",
                "lookup",
                "lookup desc",
                "number",
                "number desc",
                "personOrGroup",
                "personOrGroup desc",
                "text",
                "text desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "columnGroup",
                "description",
                "displayName",
                "enforceUniqueValues",
                "hidden",
                "indexed",
                "name",
                "readOnly",
                "required",
                "boolean",
                "calculated",
                "choice",
                "currency",
                "dateTime",
                "defaultValue",
                "lookup",
                "number",
                "personOrGroup",
                "text"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.columnDefinition"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/columns/{columnDefinition-id}": {
      "get": {
        "tags": [
          "sites.columnDefinition"
        ],
        "summary": "Get columns from sites",
        "operationId": "sites.GetColumns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "path",
            "name": "columnDefinition-id",
            "description": "key: columnDefinition-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "columnDefinition"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "columnGroup",
                "description",
                "displayName",
                "enforceUniqueValues",
                "hidden",
                "indexed",
                "name",
                "readOnly",
                "required",
                "boolean",
                "calculated",
                "choice",
                "currency",
                "dateTime",
                "defaultValue",
                "lookup",
                "number",
                "personOrGroup",
                "text"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.columnDefinition"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/contentTypes": {
      "get": {
        "tags": [
          "sites.contentType"
        ],
        "summary": "Get contentTypes from sites",
        "operationId": "sites.ListContentTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "group",
                "group desc",
                "hidden",
                "hidden desc",
                "inheritedFrom",
                "inheritedFrom desc",
                "name",
                "name desc",
                "order",
                "order desc",
                "parentId",
                "parentId desc",
                "readOnly",
                "readOnly desc",
                "sealed",
                "sealed desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "group",
                "hidden",
                "inheritedFrom",
                "name",
                "order",
                "parentId",
                "readOnly",
                "sealed",
                "columnLinks"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "columnLinks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contentType"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/contentTypes/{contentType-id}": {
      "get": {
        "tags": [
          "sites.contentType"
        ],
        "summary": "Get contentTypes from sites",
        "operationId": "sites.GetContentTypes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "path",
            "name": "contentType-id",
            "description": "key: contentType-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "contentType"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "group",
                "hidden",
                "inheritedFrom",
                "name",
                "order",
                "parentId",
                "readOnly",
                "sealed",
                "columnLinks"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "columnLinks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contentType"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/drive": {
      "get": {
        "tags": [
          "sites.drive"
        ],
        "summary": "Get drive from sites",
        "operationId": "sites.GetDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/drives": {
      "get": {
        "tags": [
          "sites.drive"
        ],
        "summary": "Get drives from sites",
        "operationId": "sites.ListDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharepointIds",
                "sharepointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/drives/{drive-id}": {
      "get": {
        "tags": [
          "sites.drive"
        ],
        "summary": "Get drives from sites",
        "operationId": "sites.GetDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/items": {
      "get": {
        "tags": [
          "sites.baseItem"
        ],
        "summary": "Get items from sites",
        "operationId": "sites.ListItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "createdByUser",
                "lastModifiedByUser"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.baseItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/items/{baseItem-id}": {
      "get": {
        "tags": [
          "sites.baseItem"
        ],
        "summary": "Get items from sites",
        "operationId": "sites.GetItems",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "path",
            "name": "baseItem-id",
            "description": "key: baseItem-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "baseItem"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "createdByUser",
                "lastModifiedByUser"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.baseItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/lists": {
      "get": {
        "tags": [
          "sites.list"
        ],
        "summary": "Get lists from sites",
        "operationId": "sites.ListLists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "displayName",
                "displayName desc",
                "list",
                "list desc",
                "system",
                "system desc",
                "sharepointIds",
                "sharepointIds desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "list",
                "system",
                "sharepointIds",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "items"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "items"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.list"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/lists/{list-id}": {
      "get": {
        "tags": [
          "sites.list"
        ],
        "summary": "Get lists from sites",
        "operationId": "sites.GetLists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "path",
            "name": "list-id",
            "description": "key: list-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "list"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "list",
                "system",
                "sharepointIds",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "items"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "items"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.list"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/onenote": {
      "get": {
        "tags": [
          "sites.onenote"
        ],
        "summary": "Get onenote from sites",
        "operationId": "sites.GetOnenote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "notebooks",
                "operations",
                "pages",
                "resources",
                "sectionGroups",
                "sections"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "notebooks",
                "operations",
                "pages",
                "resources",
                "sectionGroups",
                "sections"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.onenote"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/sites": {
      "get": {
        "tags": [
          "sites.site"
        ],
        "summary": "Get sites from sites",
        "operationId": "sites.ListSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc",
                "displayName",
                "displayName desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "root",
                "sharepointIds",
                "siteCollection",
                "displayName",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/sites/{site-id}/sites/{site-id}": {
      "get": {
        "tags": [
          "sites.site"
        ],
        "summary": "Get sites from sites",
        "operationId": "sites.GetSites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "path",
            "name": "site-id",
            "description": "key: site-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "site"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "root",
                "sharepointIds",
                "siteCollection",
                "displayName",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "columns",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscribedSkus": {
      "get": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Get entities from subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.ListSubscribedSku",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token. Required",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "appliesTo",
                "appliesTo desc",
                "capabilityStatus",
                "capabilityStatus desc",
                "consumedUnits",
                "consumedUnits desc",
                "prepaidUnits",
                "prepaidUnits desc",
                "servicePlans",
                "servicePlans desc",
                "skuId",
                "skuId desc",
                "skuPartNumber",
                "skuPartNumber desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "appliesTo",
                "capabilityStatus",
                "consumedUnits",
                "prepaidUnits",
                "servicePlans",
                "skuId",
                "skuPartNumber"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of subscribedSku",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.subscribedSku"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Add new entity to subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.CreateSubscribedSku",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscribedSkus/{subscribedSku-id}": {
      "get": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Get entity from subscribedSkus by key",
        "operationId": "subscribedSkus.subscribedSku.GetSubscribedSku",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscribedSku-id",
            "description": "key: subscribedSku-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "subscribedSku"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token. Required",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "appliesTo",
                "capabilityStatus",
                "consumedUnits",
                "prepaidUnits",
                "servicePlans",
                "skuId",
                "skuPartNumber"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Update entity in subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.UpdateSubscribedSku",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscribedSku-id",
            "description": "key: subscribedSku-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "subscribedSku"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "subscribedSkus.subscribedSku"
        ],
        "summary": "Delete entity from subscribedSkus",
        "operationId": "subscribedSkus.subscribedSku.DeleteSubscribedSku",
        "parameters": [
          {
            "in": "path",
            "name": "subscribedSku-id",
            "description": "key: subscribedSku-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "subscribedSku"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Get entities from subscriptions",
        "operationId": "subscriptions.subscription.ListSubscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "changeType",
                "changeType desc",
                "notificationUrl",
                "notificationUrl desc",
                "resource",
                "resource desc",
                "applicationId",
                "applicationId desc",
                "expirationDateTime",
                "expirationDateTime desc",
                "clientState",
                "clientState desc",
                "creatorId",
                "creatorId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "changeType",
                "notificationUrl",
                "resource",
                "applicationId",
                "expirationDateTime",
                "clientState",
                "creatorId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of subscription",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.subscription"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Add new entity to subscriptions",
        "operationId": "subscriptions.subscription.CreateSubscription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/subscriptions/{subscription-id}": {
      "get": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Get entity from subscriptions by key",
        "operationId": "subscriptions.subscription.GetSubscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscription-id",
            "description": "key: subscription-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "subscription"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "changeType",
                "notificationUrl",
                "resource",
                "applicationId",
                "expirationDateTime",
                "clientState",
                "creatorId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Update entity in subscriptions",
        "operationId": "subscriptions.subscription.UpdateSubscription",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscription-id",
            "description": "key: subscription-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "subscription"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "subscriptions.subscription"
        ],
        "summary": "Delete entity from subscriptions",
        "operationId": "subscriptions.subscription.DeleteSubscription",
        "parameters": [
          {
            "in": "path",
            "name": "subscription-id",
            "description": "key: subscription-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "subscription"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users.user"
        ],
        "summary": "Get entities from users",
        "operationId": "users.user.ListUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "deviceEnrollmentLimit",
                "deviceEnrollmentLimit desc",
                "aboutMe",
                "aboutMe desc",
                "accountEnabled",
                "accountEnabled desc",
                "ageGroup",
                "ageGroup desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "birthday",
                "birthday desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "consentProvidedForMinor",
                "consentProvidedForMinor desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "displayName",
                "displayName desc",
                "givenName",
                "givenName desc",
                "hireDate",
                "hireDate desc",
                "imAddresses",
                "imAddresses desc",
                "interests",
                "interests desc",
                "jobTitle",
                "jobTitle desc",
                "legalAgeGroupClassification",
                "legalAgeGroupClassification desc",
                "mail",
                "mail desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "mySite",
                "mySite desc",
                "officeLocation",
                "officeLocation desc",
                "onPremisesDomainName",
                "onPremisesDomainName desc",
                "onPremisesExtensionAttributes",
                "onPremisesExtensionAttributes desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesProvisioningErrors",
                "onPremisesProvisioningErrors desc",
                "onPremisesSamAccountName",
                "onPremisesSamAccountName desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "onPremisesUserPrincipalName",
                "onPremisesUserPrincipalName desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "pastProjects",
                "pastProjects desc",
                "postalCode",
                "postalCode desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "preferredName",
                "preferredName desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deviceEnrollmentLimit",
                "aboutMe",
                "accountEnabled",
                "ageGroup",
                "assignedLicenses",
                "assignedPlans",
                "birthday",
                "businessPhones",
                "city",
                "companyName",
                "consentProvidedForMinor",
                "country",
                "department",
                "displayName",
                "givenName",
                "hireDate",
                "imAddresses",
                "interests",
                "jobTitle",
                "legalAgeGroupClassification",
                "mail",
                "mailboxSettings",
                "mailNickname",
                "mobilePhone",
                "mySite",
                "officeLocation",
                "onPremisesDomainName",
                "onPremisesExtensionAttributes",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSamAccountName",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "pastProjects",
                "postalCode",
                "preferredLanguage",
                "preferredName",
                "provisionedPlans",
                "proxyAddresses",
                "responsibilities",
                "schools",
                "skills",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "managedDevices",
                "managedAppRegistrations",
                "deviceManagementTroubleshootingEvents",
                "calendar",
                "calendarGroups",
                "calendarView",
                "calendars",
                "contacts",
                "contactFolders",
                "createdObjects",
                "directReports",
                "drive",
                "drives",
                "events",
                "inferenceClassification",
                "mailFolders",
                "manager",
                "memberOf",
                "messages",
                "outlook",
                "ownedDevices",
                "ownedObjects",
                "photo",
                "registeredDevices",
                "activities",
                "extensions",
                "licenseDetails",
                "onenote",
                "people",
                "planner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "managedDevices",
                "managedAppRegistrations",
                "deviceManagementTroubleshootingEvents",
                "calendar",
                "calendarGroups",
                "calendarView",
                "calendars",
                "contacts",
                "contactFolders",
                "createdObjects",
                "directReports",
                "drive",
                "drives",
                "events",
                "inferenceClassification",
                "mailFolders",
                "manager",
                "memberOf",
                "messages",
                "outlook",
                "ownedDevices",
                "ownedObjects",
                "photo",
                "registeredDevices",
                "activities",
                "extensions",
                "licenseDetails",
                "onenote",
                "people",
                "planner"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of user",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.user"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "post": {
        "tags": [
          "users.user"
        ],
        "summary": "Add new entity to users",
        "operationId": "users.user.CreateUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New entity",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}": {
      "get": {
        "tags": [
          "users.user"
        ],
        "summary": "Get entity from users by key",
        "operationId": "users.user.GetUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "deviceEnrollmentLimit",
                "aboutMe",
                "accountEnabled",
                "ageGroup",
                "assignedLicenses",
                "assignedPlans",
                "birthday",
                "businessPhones",
                "city",
                "companyName",
                "consentProvidedForMinor",
                "country",
                "department",
                "displayName",
                "givenName",
                "hireDate",
                "imAddresses",
                "interests",
                "jobTitle",
                "legalAgeGroupClassification",
                "mail",
                "mailboxSettings",
                "mailNickname",
                "mobilePhone",
                "mySite",
                "officeLocation",
                "onPremisesDomainName",
                "onPremisesExtensionAttributes",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesProvisioningErrors",
                "onPremisesSamAccountName",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "onPremisesUserPrincipalName",
                "passwordPolicies",
                "passwordProfile",
                "pastProjects",
                "postalCode",
                "preferredLanguage",
                "preferredName",
                "provisionedPlans",
                "proxyAddresses",
                "responsibilities",
                "schools",
                "skills",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "managedDevices",
                "managedAppRegistrations",
                "deviceManagementTroubleshootingEvents",
                "calendar",
                "calendarGroups",
                "calendarView",
                "calendars",
                "contacts",
                "contactFolders",
                "createdObjects",
                "directReports",
                "drive",
                "drives",
                "events",
                "inferenceClassification",
                "mailFolders",
                "manager",
                "memberOf",
                "messages",
                "outlook",
                "ownedDevices",
                "ownedObjects",
                "photo",
                "registeredDevices",
                "activities",
                "extensions",
                "licenseDetails",
                "onenote",
                "people",
                "planner"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "managedDevices",
                "managedAppRegistrations",
                "deviceManagementTroubleshootingEvents",
                "calendar",
                "calendarGroups",
                "calendarView",
                "calendars",
                "contacts",
                "contactFolders",
                "createdObjects",
                "directReports",
                "drive",
                "drives",
                "events",
                "inferenceClassification",
                "mailFolders",
                "manager",
                "memberOf",
                "messages",
                "outlook",
                "ownedDevices",
                "ownedObjects",
                "photo",
                "registeredDevices",
                "activities",
                "extensions",
                "licenseDetails",
                "onenote",
                "people",
                "planner"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "patch": {
        "tags": [
          "users.user"
        ],
        "summary": "Update entity in users",
        "operationId": "users.user.UpdateUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "body",
            "name": "body",
            "description": "New property values",
            "required": true,
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      },
      "delete": {
        "tags": [
          "users.user"
        ],
        "summary": "Delete entity from users",
        "operationId": "users.user.DeleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "If-Match",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Application": [
              "User.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/activities": {
      "get": {
        "tags": [
          "users.userActivity"
        ],
        "summary": "Get activities from users",
        "operationId": "users.ListActivities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "appActivityId",
                "appActivityId desc",
                "activitySourceHost",
                "activitySourceHost desc",
                "userTimezone",
                "userTimezone desc",
                "appDisplayName",
                "appDisplayName desc",
                "activationUrl",
                "activationUrl desc",
                "contentUrl",
                "contentUrl desc",
                "fallbackUrl",
                "fallbackUrl desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "expirationDateTime",
                "expirationDateTime desc",
                "status",
                "status desc",
                "contentInfo",
                "contentInfo desc",
                "visualElements",
                "visualElements desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "appActivityId",
                "activitySourceHost",
                "userTimezone",
                "appDisplayName",
                "activationUrl",
                "contentUrl",
                "fallbackUrl",
                "createdDateTime",
                "lastModifiedDateTime",
                "expirationDateTime",
                "status",
                "contentInfo",
                "visualElements",
                "historyItems"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "historyItems"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.userActivity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/activities/{userActivity-id}": {
      "get": {
        "tags": [
          "users.userActivity"
        ],
        "summary": "Get activities from users",
        "operationId": "users.GetActivities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "userActivity-id",
            "description": "key: userActivity-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "userActivity"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "appActivityId",
                "activitySourceHost",
                "userTimezone",
                "appDisplayName",
                "activationUrl",
                "contentUrl",
                "fallbackUrl",
                "createdDateTime",
                "lastModifiedDateTime",
                "expirationDateTime",
                "status",
                "contentInfo",
                "visualElements",
                "historyItems"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "historyItems"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.userActivity"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/activities/recent()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function recent",
        "operationId": "users.activities.recent.f75f",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "UserActivity.ReadWrite.CreatedByApp"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "UserActivity.ReadWrite.CreatedByApp"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/users/{user-id}/calendar": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "Get calendar from users",
        "operationId": "users.GetCalendar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "canEdit",
                "canShare",
                "canViewPrivateItems",
                "changeKey",
                "color",
                "name",
                "owner",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendarGroups": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "Get calendarGroups from users",
        "operationId": "users.ListCalendarGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "changeKey",
                "changeKey desc",
                "classId",
                "classId desc",
                "name",
                "name desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "changeKey",
                "classId",
                "name",
                "calendars"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendars"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendarGroup"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendarGroups/{calendarGroup-id}": {
      "get": {
        "tags": [
          "users.calendarGroup"
        ],
        "summary": "Get calendarGroups from users",
        "operationId": "users.GetCalendarGroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "calendarGroup-id",
            "description": "key: calendarGroup-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "calendarGroup"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "changeKey",
                "classId",
                "name",
                "calendars"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendars"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendarGroup"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendars": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "Get calendars from users",
        "operationId": "users.ListCalendars",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "canEdit",
                "canEdit desc",
                "canShare",
                "canShare desc",
                "canViewPrivateItems",
                "canViewPrivateItems desc",
                "changeKey",
                "changeKey desc",
                "color",
                "color desc",
                "name",
                "name desc",
                "owner",
                "owner desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "canEdit",
                "canShare",
                "canViewPrivateItems",
                "changeKey",
                "color",
                "name",
                "owner",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendars/{calendar-id}": {
      "get": {
        "tags": [
          "users.calendar"
        ],
        "summary": "Get calendars from users",
        "operationId": "users.GetCalendars",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "calendar-id",
            "description": "key: calendar-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "calendar"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "canEdit",
                "canShare",
                "canViewPrivateItems",
                "changeKey",
                "color",
                "name",
                "owner",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "calendarView",
                "events",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.calendar"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendarView": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "Get calendarView from users",
        "operationId": "users.ListCalendarView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "categories",
                "categories desc",
                "changeKey",
                "changeKey desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "attendees",
                "attendees desc",
                "body",
                "body desc",
                "bodyPreview",
                "bodyPreview desc",
                "end",
                "end desc",
                "hasAttachments",
                "hasAttachments desc",
                "iCalUId",
                "iCalUId desc",
                "importance",
                "importance desc",
                "isAllDay",
                "isAllDay desc",
                "isCancelled",
                "isCancelled desc",
                "isOrganizer",
                "isOrganizer desc",
                "isReminderOn",
                "isReminderOn desc",
                "location",
                "location desc",
                "locations",
                "locations desc",
                "onlineMeetingUrl",
                "onlineMeetingUrl desc",
                "organizer",
                "organizer desc",
                "originalEndTimeZone",
                "originalEndTimeZone desc",
                "originalStart",
                "originalStart desc",
                "originalStartTimeZone",
                "originalStartTimeZone desc",
                "recurrence",
                "recurrence desc",
                "reminderMinutesBeforeStart",
                "reminderMinutesBeforeStart desc",
                "responseRequested",
                "responseRequested desc",
                "responseStatus",
                "responseStatus desc",
                "sensitivity",
                "sensitivity desc",
                "seriesMasterId",
                "seriesMasterId desc",
                "showAs",
                "showAs desc",
                "start",
                "start desc",
                "subject",
                "subject desc",
                "type",
                "type desc",
                "webLink",
                "webLink desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendarView/{event-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "Get calendarView from users",
        "operationId": "users.GetCalendarView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/calendarView/{event-id}/accept": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.calendarView.accept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/events/{event-id}/accept"
      ]
    },
    "/users/{user-id}/calendarView/{event-id}/decline": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.calendarView.decline",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/events/{event-id}/decline"
      ]
    },
    "/users/{user-id}/calendarView/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.calendarView.dismissReminder",
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/events/{event-id}/dismissReminder"
      ]
    },
    "/users/{user-id}/calendarView/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.calendarView.snoozeReminder",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newReminderTime": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/events/{event-id}/snoozeReminder"
      ]
    },
    "/users/{user-id}/calendarView/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.calendarView.tentativelyAccept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/events/{event-id}/tentativelyAccept"
      ]
    },
    "/users/{user-id}/calendarView/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.calendarView.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "endDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/{user-id}/messages/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/contactFolders": {
      "get": {
        "tags": [
          "users.contactFolder"
        ],
        "summary": "Get contactFolders from users",
        "operationId": "users.ListContactFolders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "displayName",
                "displayName desc",
                "parentFolderId",
                "parentFolderId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "parentFolderId",
                "childFolders",
                "contacts",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "childFolders",
                "contacts",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contactFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/contactFolders/{contactFolder-id}": {
      "get": {
        "tags": [
          "users.contactFolder"
        ],
        "summary": "Get contactFolders from users",
        "operationId": "users.GetContactFolders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "contactFolder-id",
            "description": "key: contactFolder-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "contactFolder"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "parentFolderId",
                "childFolders",
                "contacts",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "childFolders",
                "contacts",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contactFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/contactFolders/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.contactFolders.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Application": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/{user-id}/messages/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/contacts": {
      "get": {
        "tags": [
          "users.contact"
        ],
        "summary": "Get contacts from users",
        "operationId": "users.ListContacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "categories",
                "categories desc",
                "changeKey",
                "changeKey desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "assistantName",
                "assistantName desc",
                "birthday",
                "birthday desc",
                "businessAddress",
                "businessAddress desc",
                "businessHomePage",
                "businessHomePage desc",
                "businessPhones",
                "businessPhones desc",
                "children",
                "children desc",
                "companyName",
                "companyName desc",
                "department",
                "department desc",
                "displayName",
                "displayName desc",
                "emailAddresses",
                "emailAddresses desc",
                "flag",
                "flag desc",
                "fileAs",
                "fileAs desc",
                "generation",
                "generation desc",
                "givenName",
                "givenName desc",
                "homeAddress",
                "homeAddress desc",
                "homePhones",
                "homePhones desc",
                "imAddresses",
                "imAddresses desc",
                "initials",
                "initials desc",
                "jobTitle",
                "jobTitle desc",
                "manager",
                "manager desc",
                "middleName",
                "middleName desc",
                "mobilePhone",
                "mobilePhone desc",
                "nickName",
                "nickName desc",
                "officeLocation",
                "officeLocation desc",
                "otherAddress",
                "otherAddress desc",
                "parentFolderId",
                "parentFolderId desc",
                "personalNotes",
                "personalNotes desc",
                "profession",
                "profession desc",
                "spouseName",
                "spouseName desc",
                "surname",
                "surname desc",
                "title",
                "title desc",
                "yomiCompanyName",
                "yomiCompanyName desc",
                "yomiGivenName",
                "yomiGivenName desc",
                "yomiSurname",
                "yomiSurname desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "assistantName",
                "birthday",
                "businessAddress",
                "businessHomePage",
                "businessPhones",
                "children",
                "companyName",
                "department",
                "displayName",
                "emailAddresses",
                "flag",
                "fileAs",
                "generation",
                "givenName",
                "homeAddress",
                "homePhones",
                "imAddresses",
                "initials",
                "jobTitle",
                "manager",
                "middleName",
                "mobilePhone",
                "nickName",
                "officeLocation",
                "otherAddress",
                "parentFolderId",
                "personalNotes",
                "profession",
                "spouseName",
                "surname",
                "title",
                "yomiCompanyName",
                "yomiGivenName",
                "yomiSurname",
                "photo",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "photo",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contact"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/contacts/{contact-id}": {
      "get": {
        "tags": [
          "users.contact"
        ],
        "summary": "Get contacts from users",
        "operationId": "users.GetContacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "contact-id",
            "description": "key: contact-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "contact"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "assistantName",
                "birthday",
                "businessAddress",
                "businessHomePage",
                "businessPhones",
                "children",
                "companyName",
                "department",
                "displayName",
                "emailAddresses",
                "flag",
                "fileAs",
                "generation",
                "givenName",
                "homeAddress",
                "homePhones",
                "imAddresses",
                "initials",
                "jobTitle",
                "manager",
                "middleName",
                "mobilePhone",
                "nickName",
                "officeLocation",
                "otherAddress",
                "parentFolderId",
                "personalNotes",
                "profession",
                "spouseName",
                "surname",
                "title",
                "yomiCompanyName",
                "yomiGivenName",
                "yomiSurname",
                "photo",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "photo",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contact"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/contacts/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.contacts.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          },
          {
            "Application": [
              "Contacts.Read",
              "Contacts.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/{user-id}/messages/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/createdObjects": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get createdObjects from users",
        "operationId": "users.ListCreatedObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/createdObjects/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get createdObjects from users",
        "operationId": "users.GetCreatedObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/deviceManagementTroubleshootingEvents": {
      "get": {
        "tags": [
          "users.deviceManagementTroubleshootingEvent"
        ],
        "summary": "Get deviceManagementTroubleshootingEvents from users",
        "operationId": "users.ListDeviceManagementTroubleshootingEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "eventDateTime",
                "eventDateTime desc",
                "correlationId",
                "correlationId desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "eventDateTime",
                "correlationId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/deviceManagementTroubleshootingEvents/{deviceManagementTroubleshootingEvent-id}": {
      "get": {
        "tags": [
          "users.deviceManagementTroubleshootingEvent"
        ],
        "summary": "Get deviceManagementTroubleshootingEvents from users",
        "operationId": "users.GetDeviceManagementTroubleshootingEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "deviceManagementTroubleshootingEvent-id",
            "description": "key: deviceManagementTroubleshootingEvent-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "deviceManagementTroubleshootingEvent"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "eventDateTime",
                "correlationId"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/directReports": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get directReports from users",
        "operationId": "users.ListDirectReports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/directReports/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get directReports from users",
        "operationId": "users.GetDirectReports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/drive": {
      "get": {
        "tags": [
          "users.drive"
        ],
        "summary": "Get drive from users",
        "operationId": "users.GetDrive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/drives": {
      "get": {
        "tags": [
          "users.drive"
        ],
        "summary": "Get drives from users",
        "operationId": "users.ListDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharepointIds",
                "sharepointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/drives/{drive-id}": {
      "get": {
        "tags": [
          "users.drive"
        ],
        "summary": "Get drives from users",
        "operationId": "users.GetDrives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "drive-id",
            "description": "key: drive-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "drive"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharepointIds",
                "system",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "root",
                "special",
                "list"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/events": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "Get events from users",
        "operationId": "users.ListEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "categories",
                "categories desc",
                "changeKey",
                "changeKey desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "attendees",
                "attendees desc",
                "body",
                "body desc",
                "bodyPreview",
                "bodyPreview desc",
                "end",
                "end desc",
                "hasAttachments",
                "hasAttachments desc",
                "iCalUId",
                "iCalUId desc",
                "importance",
                "importance desc",
                "isAllDay",
                "isAllDay desc",
                "isCancelled",
                "isCancelled desc",
                "isOrganizer",
                "isOrganizer desc",
                "isReminderOn",
                "isReminderOn desc",
                "location",
                "location desc",
                "locations",
                "locations desc",
                "onlineMeetingUrl",
                "onlineMeetingUrl desc",
                "organizer",
                "organizer desc",
                "originalEndTimeZone",
                "originalEndTimeZone desc",
                "originalStart",
                "originalStart desc",
                "originalStartTimeZone",
                "originalStartTimeZone desc",
                "recurrence",
                "recurrence desc",
                "reminderMinutesBeforeStart",
                "reminderMinutesBeforeStart desc",
                "responseRequested",
                "responseRequested desc",
                "responseStatus",
                "responseStatus desc",
                "sensitivity",
                "sensitivity desc",
                "seriesMasterId",
                "seriesMasterId desc",
                "showAs",
                "showAs desc",
                "start",
                "start desc",
                "subject",
                "subject desc",
                "type",
                "type desc",
                "webLink",
                "webLink desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/events/{event-id}": {
      "get": {
        "tags": [
          "users.event"
        ],
        "summary": "Get events from users",
        "operationId": "users.GetEvents",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "attendees",
                "body",
                "bodyPreview",
                "end",
                "hasAttachments",
                "iCalUId",
                "importance",
                "isAllDay",
                "isCancelled",
                "isOrganizer",
                "isReminderOn",
                "location",
                "locations",
                "onlineMeetingUrl",
                "organizer",
                "originalEndTimeZone",
                "originalStart",
                "originalStartTimeZone",
                "recurrence",
                "reminderMinutesBeforeStart",
                "responseRequested",
                "responseStatus",
                "sensitivity",
                "seriesMasterId",
                "showAs",
                "start",
                "subject",
                "type",
                "webLink",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "calendar",
                "extensions",
                "instances",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.event"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/events/{event-id}/accept": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.events.accept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/{event-id}/accept"
      ]
    },
    "/users/{user-id}/events/{event-id}/decline": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.events.decline",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/{event-id}/decline"
      ]
    },
    "/users/{user-id}/events/{event-id}/dismissReminder": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.events.dismissReminder",
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/{event-id}/dismissReminder"
      ]
    },
    "/users/{user-id}/events/{event-id}/snoozeReminder": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.events.snoozeReminder",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newReminderTime": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/{event-id}/snoozeReminder"
      ]
    },
    "/users/{user-id}/events/{event-id}/tentativelyAccept": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.events.tentativelyAccept",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "event-id",
            "description": "key: event-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "event"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "sendResponse": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/{event-id}/tentativelyAccept"
      ]
    },
    "/users/{user-id}/events/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.events.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "startDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "endDateTime",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "{Time zone}. Optional, UTC assumed if absent.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read"
            ]
          },
          {
            "Application": [
              "Calendars.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/{user-id}/messages/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/extensions": {
      "get": {
        "tags": [
          "users.extension"
        ],
        "summary": "Get extensions from users",
        "operationId": "users.ListExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/extensions/{extension-id}": {
      "get": {
        "tags": [
          "users.extension"
        ],
        "summary": "Get extensions from users",
        "operationId": "users.GetExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "extension-id",
            "description": "key: extension-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "extension"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.extension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/inferenceClassification": {
      "get": {
        "tags": [
          "users.inferenceClassification"
        ],
        "summary": "Get inferenceClassification from users",
        "operationId": "users.GetInferenceClassification",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "overrides"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "overrides"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.inferenceClassification"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/licenseDetails": {
      "get": {
        "tags": [
          "users.licenseDetails"
        ],
        "summary": "Get licenseDetails from users",
        "operationId": "users.ListLicenseDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "servicePlans",
                "servicePlans desc",
                "skuId",
                "skuId desc",
                "skuPartNumber",
                "skuPartNumber desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "servicePlans",
                "skuId",
                "skuPartNumber"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.licenseDetails"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/licenseDetails/{licenseDetails-id}": {
      "get": {
        "tags": [
          "users.licenseDetails"
        ],
        "summary": "Get licenseDetails from users",
        "operationId": "users.GetLicenseDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "licenseDetails-id",
            "description": "key: licenseDetails-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "licenseDetails"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "servicePlans",
                "skuId",
                "skuPartNumber"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.licenseDetails"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/mailFolders": {
      "get": {
        "tags": [
          "users.mailFolder"
        ],
        "summary": "Get mailFolders from users",
        "operationId": "users.ListMailFolders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "childFolderCount",
                "childFolderCount desc",
                "displayName",
                "displayName desc",
                "parentFolderId",
                "parentFolderId desc",
                "totalItemCount",
                "totalItemCount desc",
                "unreadItemCount",
                "unreadItemCount desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "childFolderCount",
                "displayName",
                "parentFolderId",
                "totalItemCount",
                "unreadItemCount",
                "childFolders",
                "messageRules",
                "messages",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "childFolders",
                "messageRules",
                "messages",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mailFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/mailFolders/{mailFolder-id}": {
      "get": {
        "tags": [
          "users.mailFolder"
        ],
        "summary": "Get mailFolders from users",
        "operationId": "users.GetMailFolders",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "mailFolder-id",
            "description": "key: mailFolder-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "childFolderCount",
                "displayName",
                "parentFolderId",
                "totalItemCount",
                "unreadItemCount",
                "childFolders",
                "messageRules",
                "messages",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "childFolders",
                "messageRules",
                "messages",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.mailFolder"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/mailFolders/{mailFolder-id}/copy": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.mailFolders.copy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "mailFolder-id",
            "description": "key: mailFolder-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destinationId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/messages/{message-id}/copy"
      ]
    },
    "/users/{user-id}/mailFolders/{mailFolder-id}/move": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.mailFolders.move",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "mailFolder-id",
            "description": "key: mailFolder-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "mailFolder"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destinationId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/messages/{message-id}/move"
      ]
    },
    "/users/{user-id}/mailFolders/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.mailFolders.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/messages/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/managedAppRegistrations": {
      "get": {
        "tags": [
          "users.managedAppRegistration"
        ],
        "summary": "Get managedAppRegistrations from users",
        "operationId": "users.ListManagedAppRegistrations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastSyncDateTime",
                "lastSyncDateTime desc",
                "applicationVersion",
                "applicationVersion desc",
                "managementSdkVersion",
                "managementSdkVersion desc",
                "platformVersion",
                "platformVersion desc",
                "deviceType",
                "deviceType desc",
                "deviceTag",
                "deviceTag desc",
                "deviceName",
                "deviceName desc",
                "flaggedReasons",
                "flaggedReasons desc",
                "userId",
                "userId desc",
                "appIdentifier",
                "appIdentifier desc",
                "version",
                "version desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdDateTime",
                "lastSyncDateTime",
                "applicationVersion",
                "managementSdkVersion",
                "platformVersion",
                "deviceType",
                "deviceTag",
                "deviceName",
                "flaggedReasons",
                "userId",
                "appIdentifier",
                "version",
                "appliedPolicies",
                "intendedPolicies",
                "operations"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "appliedPolicies",
                "intendedPolicies",
                "operations"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/managedAppRegistrations/{managedAppRegistration-id}": {
      "get": {
        "tags": [
          "users.managedAppRegistration"
        ],
        "summary": "Get managedAppRegistrations from users",
        "operationId": "users.GetManagedAppRegistrations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "managedAppRegistration-id",
            "description": "key: managedAppRegistration-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "managedAppRegistration"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdDateTime",
                "lastSyncDateTime",
                "applicationVersion",
                "managementSdkVersion",
                "platformVersion",
                "deviceType",
                "deviceTag",
                "deviceName",
                "flaggedReasons",
                "userId",
                "appIdentifier",
                "version",
                "appliedPolicies",
                "intendedPolicies",
                "operations"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "appliedPolicies",
                "intendedPolicies",
                "operations"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/managedDevices": {
      "get": {
        "tags": [
          "users.managedDevice"
        ],
        "summary": "Get managedDevices from users",
        "operationId": "users.ListManagedDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "userId",
                "userId desc",
                "deviceName",
                "deviceName desc",
                "managedDeviceOwnerType",
                "managedDeviceOwnerType desc",
                "deviceActionResults",
                "deviceActionResults desc",
                "enrolledDateTime",
                "enrolledDateTime desc",
                "lastSyncDateTime",
                "lastSyncDateTime desc",
                "operatingSystem",
                "operatingSystem desc",
                "complianceState",
                "complianceState desc",
                "jailBroken",
                "jailBroken desc",
                "managementAgent",
                "managementAgent desc",
                "osVersion",
                "osVersion desc",
                "easActivated",
                "easActivated desc",
                "easDeviceId",
                "easDeviceId desc",
                "easActivationDateTime",
                "easActivationDateTime desc",
                "azureADRegistered",
                "azureADRegistered desc",
                "deviceEnrollmentType",
                "deviceEnrollmentType desc",
                "activationLockBypassCode",
                "activationLockBypassCode desc",
                "emailAddress",
                "emailAddress desc",
                "azureADDeviceId",
                "azureADDeviceId desc",
                "deviceRegistrationState",
                "deviceRegistrationState desc",
                "deviceCategoryDisplayName",
                "deviceCategoryDisplayName desc",
                "isSupervised",
                "isSupervised desc",
                "exchangeLastSuccessfulSyncDateTime",
                "exchangeLastSuccessfulSyncDateTime desc",
                "exchangeAccessState",
                "exchangeAccessState desc",
                "exchangeAccessStateReason",
                "exchangeAccessStateReason desc",
                "remoteAssistanceSessionUrl",
                "remoteAssistanceSessionUrl desc",
                "remoteAssistanceSessionErrorDetails",
                "remoteAssistanceSessionErrorDetails desc",
                "isEncrypted",
                "isEncrypted desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "model",
                "model desc",
                "manufacturer",
                "manufacturer desc",
                "imei",
                "imei desc",
                "complianceGracePeriodExpirationDateTime",
                "complianceGracePeriodExpirationDateTime desc",
                "serialNumber",
                "serialNumber desc",
                "phoneNumber",
                "phoneNumber desc",
                "androidSecurityPatchLevel",
                "androidSecurityPatchLevel desc",
                "userDisplayName",
                "userDisplayName desc",
                "configurationManagerClientEnabledFeatures",
                "configurationManagerClientEnabledFeatures desc",
                "wiFiMacAddress",
                "wiFiMacAddress desc",
                "deviceHealthAttestationState",
                "deviceHealthAttestationState desc",
                "subscriberCarrier",
                "subscriberCarrier desc",
                "meid",
                "meid desc",
                "totalStorageSpaceInBytes",
                "totalStorageSpaceInBytes desc",
                "freeStorageSpaceInBytes",
                "freeStorageSpaceInBytes desc",
                "managedDeviceName",
                "managedDeviceName desc",
                "partnerReportedThreatState",
                "partnerReportedThreatState desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "deviceName",
                "managedDeviceOwnerType",
                "deviceActionResults",
                "enrolledDateTime",
                "lastSyncDateTime",
                "operatingSystem",
                "complianceState",
                "jailBroken",
                "managementAgent",
                "osVersion",
                "easActivated",
                "easDeviceId",
                "easActivationDateTime",
                "azureADRegistered",
                "deviceEnrollmentType",
                "activationLockBypassCode",
                "emailAddress",
                "azureADDeviceId",
                "deviceRegistrationState",
                "deviceCategoryDisplayName",
                "isSupervised",
                "exchangeLastSuccessfulSyncDateTime",
                "exchangeAccessState",
                "exchangeAccessStateReason",
                "remoteAssistanceSessionUrl",
                "remoteAssistanceSessionErrorDetails",
                "isEncrypted",
                "userPrincipalName",
                "model",
                "manufacturer",
                "imei",
                "complianceGracePeriodExpirationDateTime",
                "serialNumber",
                "phoneNumber",
                "androidSecurityPatchLevel",
                "userDisplayName",
                "configurationManagerClientEnabledFeatures",
                "wiFiMacAddress",
                "deviceHealthAttestationState",
                "subscriberCarrier",
                "meid",
                "totalStorageSpaceInBytes",
                "freeStorageSpaceInBytes",
                "managedDeviceName",
                "partnerReportedThreatState",
                "deviceCategory"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "deviceCategory"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedDevice"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/managedDevices/{managedDevice-id}": {
      "get": {
        "tags": [
          "users.managedDevice"
        ],
        "summary": "Get managedDevices from users",
        "operationId": "users.GetManagedDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "managedDevice-id",
            "description": "key: managedDevice-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "managedDevice"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "userId",
                "deviceName",
                "managedDeviceOwnerType",
                "deviceActionResults",
                "enrolledDateTime",
                "lastSyncDateTime",
                "operatingSystem",
                "complianceState",
                "jailBroken",
                "managementAgent",
                "osVersion",
                "easActivated",
                "easDeviceId",
                "easActivationDateTime",
                "azureADRegistered",
                "deviceEnrollmentType",
                "activationLockBypassCode",
                "emailAddress",
                "azureADDeviceId",
                "deviceRegistrationState",
                "deviceCategoryDisplayName",
                "isSupervised",
                "exchangeLastSuccessfulSyncDateTime",
                "exchangeAccessState",
                "exchangeAccessStateReason",
                "remoteAssistanceSessionUrl",
                "remoteAssistanceSessionErrorDetails",
                "isEncrypted",
                "userPrincipalName",
                "model",
                "manufacturer",
                "imei",
                "complianceGracePeriodExpirationDateTime",
                "serialNumber",
                "phoneNumber",
                "androidSecurityPatchLevel",
                "userDisplayName",
                "configurationManagerClientEnabledFeatures",
                "wiFiMacAddress",
                "deviceHealthAttestationState",
                "subscriberCarrier",
                "meid",
                "totalStorageSpaceInBytes",
                "freeStorageSpaceInBytes",
                "managedDeviceName",
                "partnerReportedThreatState",
                "deviceCategory"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "deviceCategory"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.managedDevice"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/manager": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get manager from users",
        "operationId": "users.GetManager",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/memberOf": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get memberOf from users",
        "operationId": "users.ListMemberOf",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/memberOf/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get memberOf from users",
        "operationId": "users.GetMemberOf",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/messages": {
      "get": {
        "tags": [
          "users.message"
        ],
        "summary": "Get messages from users",
        "operationId": "users.ListMessages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "categories",
                "categories desc",
                "changeKey",
                "changeKey desc",
                "createdDateTime",
                "createdDateTime desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "bccRecipients",
                "bccRecipients desc",
                "body",
                "body desc",
                "bodyPreview",
                "bodyPreview desc",
                "ccRecipients",
                "ccRecipients desc",
                "conversationId",
                "conversationId desc",
                "flag",
                "flag desc",
                "from",
                "from desc",
                "hasAttachments",
                "hasAttachments desc",
                "importance",
                "importance desc",
                "inferenceClassification",
                "inferenceClassification desc",
                "internetMessageHeaders",
                "internetMessageHeaders desc",
                "internetMessageId",
                "internetMessageId desc",
                "isDeliveryReceiptRequested",
                "isDeliveryReceiptRequested desc",
                "isDraft",
                "isDraft desc",
                "isRead",
                "isRead desc",
                "isReadReceiptRequested",
                "isReadReceiptRequested desc",
                "parentFolderId",
                "parentFolderId desc",
                "receivedDateTime",
                "receivedDateTime desc",
                "replyTo",
                "replyTo desc",
                "sender",
                "sender desc",
                "sentDateTime",
                "sentDateTime desc",
                "subject",
                "subject desc",
                "toRecipients",
                "toRecipients desc",
                "uniqueBody",
                "uniqueBody desc",
                "webLink",
                "webLink desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "bccRecipients",
                "body",
                "bodyPreview",
                "ccRecipients",
                "conversationId",
                "flag",
                "from",
                "hasAttachments",
                "importance",
                "inferenceClassification",
                "internetMessageHeaders",
                "internetMessageId",
                "isDeliveryReceiptRequested",
                "isDraft",
                "isRead",
                "isReadReceiptRequested",
                "parentFolderId",
                "receivedDateTime",
                "replyTo",
                "sender",
                "sentDateTime",
                "subject",
                "toRecipients",
                "uniqueBody",
                "webLink",
                "attachments",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.message"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/messages/{message-id}": {
      "get": {
        "tags": [
          "users.message"
        ],
        "summary": "Get messages from users",
        "operationId": "users.GetMessages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "categories",
                "changeKey",
                "createdDateTime",
                "lastModifiedDateTime",
                "bccRecipients",
                "body",
                "bodyPreview",
                "ccRecipients",
                "conversationId",
                "flag",
                "from",
                "hasAttachments",
                "importance",
                "inferenceClassification",
                "internetMessageHeaders",
                "internetMessageId",
                "isDeliveryReceiptRequested",
                "isDraft",
                "isRead",
                "isReadReceiptRequested",
                "parentFolderId",
                "receivedDateTime",
                "replyTo",
                "sender",
                "sentDateTime",
                "subject",
                "toRecipients",
                "uniqueBody",
                "webLink",
                "attachments",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "attachments",
                "extensions",
                "multiValueExtendedProperties",
                "singleValueExtendedProperties"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.message"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/messages/{message-id}/copy": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.copy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destinationId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/mailFolders/{mailFolder-id}/copy"
      ]
    },
    "/users/{user-id}/messages/{message-id}/createForward": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.createForward",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/createReply": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.createReply",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/createReplyAll": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.createReplyAll",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/forward": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.forward",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "toRecipients": {
                  "type": "array",
                  "items": { }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/move": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.move",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "destinationId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/mailFolders/{mailFolder-id}/move"
      ]
    },
    "/users/{user-id}/messages/{message-id}/reply": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.reply",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/replyAll": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.messages.replyAll",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "Nature of the data in the body of an entity. Required.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/{message-id}/send": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "The following example shows how to call this API.",
        "operationId": "users.messages.send",
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "message-id",
            "description": "key: message-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "message"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Length",
            "description": "* Required.",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/messages/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.messages.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json. Required.",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "description": "odata.maxpagesize={x}. Optional.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          },
          {
            "Application": [
              "Mail.Read",
              "Mail.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/delta()"
      ]
    },
    "/users/{user-id}/assignLicense": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.assignLicense",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addLicenses": {
                  "type": "array",
                  "items": { }
                },
                "removeLicenses": {
                  "type": "array",
                  "items": {
                    "format": "uuid",
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.ReadWrite.All",
              "Directory.ReadWrite.All"
            ]
          },
          {
            "Application": [
              "User.ReadWrite.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/findMeetingTimes": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Notice that the request specifies time in the PST time zone, and the response returns meeting time suggestions in UTC, by default. You can use the `Prefer: outlook.timezone` request \r\nheader to specify PST as well for the time values in the response.",
        "operationId": "users.findMeetingTimes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer: outlook.timezone",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "attendees": {
                  "type": "array",
                  "items": { }
                },
                "locationConstraint": { },
                "timeConstraint": { },
                "meetingDuration": {
                  "format": "duration",
                  "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                  "type": "string"
                },
                "returnSuggestionReasons": {
                  "default": false,
                  "type": "boolean"
                },
                "minimumAttendeePercentage": {
                  "format": "double"
                },
                "isOrganizerOptional": {
                  "default": false,
                  "type": "boolean"
                },
                "maxCandidates": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read.Shared",
              "Calendars.ReadWrite.Shared"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/getMailTips": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Invoke action getMailTips",
        "operationId": "users.getMailTips",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "EmailAddresses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "MailTipsOptions": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Read",
              "Mail.Read.Shared"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Read"
            ]
          },
          {
            "Application": [
              "Mail.Read"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/reminderView(endDateTime={endDateTime},startDateTime={startDateTime})": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.reminderView.d02b",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Prefer",
            "type": "string"
          },
          {
            "in": "path",
            "name": "endDateTime",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "startDateTime",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          },
          {
            "Application": [
              "Calendars.Read",
              "Calendars.ReadWrite"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/users/{user-id}/sendMail": {
      "post": {
        "tags": [
          "users.Actions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.sendMail",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "header",
            "name": "Authorization",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Action parameters",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "message": { },
                "saveToSentItems": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "Mail.Send"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "Mail.Send"
            ]
          },
          {
            "Application": [
              "Mail.Send"
            ]
          }
        ],
        "x-ms-docs-operation-type": "action"
      }
    },
    "/users/{user-id}/onenote": {
      "get": {
        "tags": [
          "users.onenote"
        ],
        "summary": "Get onenote from users",
        "operationId": "users.GetOnenote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "notebooks",
                "operations",
                "pages",
                "resources",
                "sectionGroups",
                "sections"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "notebooks",
                "operations",
                "pages",
                "resources",
                "sectionGroups",
                "sections"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.onenote"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/outlook": {
      "get": {
        "tags": [
          "users.outlookUser"
        ],
        "summary": "Get outlook from users",
        "operationId": "users.GetOutlook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "masterCategories"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "masterCategories"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.outlookUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/outlook/supportedLanguages()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Here is an example of how to call this API.",
        "operationId": "users.outlook.supportedLanguages.7d99",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      }
    },
    "/users/{user-id}/outlook/supportedTimeZones()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function supportedTimeZones",
        "operationId": "users.outlook.supportedTimeZones.4c5b",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/outlook/supportedTimeZones(TimeZoneStandard={TimeZoneStandard})"
      ]
    },
    "/users/{user-id}/outlook/supportedTimeZones(TimeZoneStandard={TimeZoneStandard})": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function supportedTimeZones",
        "operationId": "users.outlook.supportedTimeZones.cfd8",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer {token}. Required.",
            "type": "string"
          },
          {
            "in": "path",
            "name": "TimeZoneStandard",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadBasic.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read"
            ]
          },
          {
            "Application": [
              "User.Read.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/outlook/supportedTimeZones()"
      ]
    },
    "/users/{user-id}/ownedDevices": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get ownedDevices from users",
        "operationId": "users.ListOwnedDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/ownedDevices/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get ownedDevices from users",
        "operationId": "users.GetOwnedDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/ownedObjects": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get ownedObjects from users",
        "operationId": "users.ListOwnedObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/ownedObjects/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get ownedObjects from users",
        "operationId": "users.GetOwnedObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/people": {
      "get": {
        "tags": [
          "users.person"
        ],
        "summary": "Get people from users",
        "operationId": "users.ListPeople",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "birthday",
                "birthday desc",
                "companyName",
                "companyName desc",
                "department",
                "department desc",
                "displayName",
                "displayName desc",
                "scoredEmailAddresses",
                "scoredEmailAddresses desc",
                "givenName",
                "givenName desc",
                "imAddress",
                "imAddress desc",
                "isFavorite",
                "isFavorite desc",
                "jobTitle",
                "jobTitle desc",
                "officeLocation",
                "officeLocation desc",
                "personNotes",
                "personNotes desc",
                "personType",
                "personType desc",
                "phones",
                "phones desc",
                "postalAddresses",
                "postalAddresses desc",
                "profession",
                "profession desc",
                "surname",
                "surname desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "websites",
                "websites desc",
                "yomiCompany",
                "yomiCompany desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "birthday",
                "companyName",
                "department",
                "displayName",
                "scoredEmailAddresses",
                "givenName",
                "imAddress",
                "isFavorite",
                "jobTitle",
                "officeLocation",
                "personNotes",
                "personType",
                "phones",
                "postalAddresses",
                "profession",
                "surname",
                "userPrincipalName",
                "websites",
                "yomiCompany"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.person"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/people/{person-id}": {
      "get": {
        "tags": [
          "users.person"
        ],
        "summary": "Get people from users",
        "operationId": "users.GetPeople",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "person-id",
            "description": "key: person-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "person"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "birthday",
                "companyName",
                "department",
                "displayName",
                "scoredEmailAddresses",
                "givenName",
                "imAddress",
                "isFavorite",
                "jobTitle",
                "officeLocation",
                "personNotes",
                "personType",
                "phones",
                "postalAddresses",
                "profession",
                "surname",
                "userPrincipalName",
                "websites",
                "yomiCompany"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.person"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/photo": {
      "get": {
        "tags": [
          "users.profilePhoto"
        ],
        "summary": "Get photo from users",
        "operationId": "users.GetPhoto",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "height",
                "width"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.profilePhoto"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/planner": {
      "get": {
        "tags": [
          "users.plannerUser"
        ],
        "summary": "Get planner from users",
        "operationId": "users.GetPlanner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "plans",
                "tasks"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "plans",
                "tasks"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.plannerUser"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/registeredDevices": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get registeredDevices from users",
        "operationId": "users.ListRegisteredDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "in": "query",
            "name": "$orderby",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/{user-id}/registeredDevices/{directoryObject-id}": {
      "get": {
        "tags": [
          "users.directoryObject"
        ],
        "summary": "Get registeredDevices from users",
        "operationId": "users.GetRegisteredDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user-id",
            "description": "key: user-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "user"
          },
          {
            "in": "path",
            "name": "directoryObject-id",
            "description": "key: directoryObject-id",
            "required": true,
            "type": "string",
            "x-ms-docs-key-type": "directoryObject"
          },
          {
            "in": "query",
            "name": "$select",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved navigation property",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "x-ms-docs-operation-type": "operation"
      }
    },
    "/users/delta()": {
      "get": {
        "tags": [
          "users.Functions"
        ],
        "summary": "Invoke function delta",
        "operationId": "users.delta.2209",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "$deltatoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "query",
            "name": "$skiptoken",
            "description": "String",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token",
            "type": "string"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "description": "application/json",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        },
        "security": [
          {
            "Delegated (work or school account)": [
              "User.Read",
              "User.ReadWrite",
              "User.ReadBasic.All",
              "User.Read.All",
              "User.ReadWrite.All",
              "Directory.Read.All",
              "Directory.ReadWrite.All",
              "Directory.AccessAsUser.All"
            ]
          },
          {
            "Delegated (personal Microsoft account)": [
              "User.Read",
              "User.ReadWrite"
            ]
          },
          {
            "Application": [
              "User.Read.All",
              "User.ReadWrite.All",
              "Directory.Read.All",
              "Directory.ReadWrite.All"
            ]
          }
        ],
        "x-ms-docs-operation-type": "function"
      },
      "x-ms-docs-grouped-path": [
        "/users/{user-id}/calendarView/delta()",
        "/users/{user-id}/contactFolders/delta()",
        "/users/{user-id}/contacts/delta()",
        "/users/{user-id}/events/delta()",
        "/users/{user-id}/mailFolders/delta()",
        "/users/{user-id}/messages/delta()"
      ]
    }
  },
  "definitions": {
    "microsoft.graph.entity": {
      "title": "entity",
      "type": "object",
      "properties": {
        "id": {
          "description": "Read-only.",
          "type": "string"
        }
      },
      "example": {
        "id": "string (identifier)"
      }
    },
    "microsoft.graph.attachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "attachment",
          "type": "object",
          "properties": {
            "contentType": {
              "description": "The MIME type.",
              "type": "string"
            },
            "isInline": {
              "description": "true if the attachment is an inline attachment; otherwise, false.",
              "type": "boolean"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "name": {
              "description": "The attachment's file name.",
              "type": "string"
            },
            "size": {
              "format": "int32",
              "description": "The length of the attachment in bytes.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "contentType": "string",
        "isInline": true,
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "size": "integer"
      }
    },
    "microsoft.graph.baseItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "baseItem",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "Identity of the user, device, or application which created the item. Read-only."
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Date and time of item creation. Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "Provides a user-visible description of the item. Optional.",
              "type": "string"
            },
            "eTag": {
              "description": "ETag for the item. Read-only.",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "Identity of the user, device, and application which last modified the item. Read-only."
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Date and time the item was last modified. Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "name": {
              "description": "The name of the item. Read-write.",
              "type": "string"
            },
            "parentReference": {
              "description": "Parent information, if the item has a parent. Read-write."
            },
            "webUrl": {
              "description": "URL that displays the resource in the browser. Read-only.",
              "type": "string"
            },
            "createdByUser": { },
            "lastModifiedByUser": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "eTag": "string",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "parentReference": {
          "@odata.type": "microsoft.graph.itemReference"
        },
        "webUrl": "string",
        "createdByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "lastModifiedByUser": {
          "@odata.type": "microsoft.graph.user"
        }
      }
    },
    "microsoft.graph.baseItemVersion": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "baseItemVersion",
          "type": "object",
          "properties": {
            "lastModifiedBy": {
              "description": "Identity of the user which last modified the version. Read-only."
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Date and time the version was last modified. Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "publication": {
              "description": "Indicates the publication status of this particular version. Read-only."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "publication": {
          "@odata.type": "microsoft.graph.publicationFacet"
        }
      }
    },
    "microsoft.graph.calendar": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "calendar",
          "type": "object",
          "properties": {
            "canEdit": {
              "description": "True if the user can write to the calendar, false otherwise. This property is true for the user who created the calendar. This property is also true for a user who has been shared a calendar and granted write access.",
              "type": "boolean"
            },
            "canShare": {
              "description": "True if the user has the permission to share the calendar, false otherwise. Only the user who created the calendar can share it.",
              "type": "boolean"
            },
            "canViewPrivateItems": {
              "description": "True if the user can read calendar items that have been marked private, false otherwise.",
              "type": "boolean"
            },
            "changeKey": {
              "description": "Identifies the version of the calendar object. Every time the calendar is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
              "type": "string"
            },
            "color": {
              "description": "Specifies the color theme to distinguish the calendar from other calendars in a UI. The property values are: LightBlue=0, LightGreen=1, LightOrange=2, LightGray=3, LightYellow=4, LightTeal=5, LightPink=6, LightBrown=7, LightRed=8, MaxColor=9, Auto=-1"
            },
            "name": {
              "description": "The calendar name.",
              "type": "string"
            },
            "owner": {
              "description": "If set, this represents the user who created or added the calendar. For a calendar that the user created or added, the owner property is set to the user. For a calendar shared with the user, the owner property is set to the person who shared that calendar with the user."
            },
            "calendarView": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "canEdit": true,
        "canShare": true,
        "canViewPrivateItems": true,
        "changeKey": "string",
        "color": {
          "@odata.type": "microsoft.graph.calendarColor"
        },
        "name": "string",
        "owner": {
          "@odata.type": "microsoft.graph.emailAddress"
        },
        "calendarView": [
          {
            "@odata.type": "microsoft.graph.event"
          }
        ],
        "events": [
          {
            "@odata.type": "microsoft.graph.event"
          }
        ],
        "multiValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
          }
        ],
        "singleValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
          }
        ]
      }
    },
    "microsoft.graph.calendarGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "calendarGroup",
          "type": "object",
          "properties": {
            "changeKey": {
              "description": "Identifies the version of the calendar group. Every time the calendar group is changed, ChangeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
              "type": "string"
            },
            "classId": {
              "format": "uuid",
              "description": "The class identifier. Read-only.",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "name": {
              "description": "The group name.",
              "type": "string"
            },
            "calendars": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.calendar"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "changeKey": "string",
        "classId": "string",
        "name": "string",
        "calendars": [
          {
            "@odata.type": "microsoft.graph.calendar"
          }
        ]
      }
    },
    "microsoft.graph.workbookChart": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChart",
          "type": "object",
          "properties": {
            "height": {
              "format": "double",
              "description": "Represents the height, in points, of the chart object."
            },
            "left": {
              "format": "double",
              "description": "The distance, in points, from the left side of the chart to the worksheet origin."
            },
            "name": {
              "description": "Represents the name of a chart object.",
              "type": "string"
            },
            "top": {
              "format": "double",
              "description": "Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart)."
            },
            "width": {
              "format": "double",
              "description": "Represents the width, in points, of the chart object."
            },
            "axes": { },
            "dataLabels": { },
            "format": { },
            "legend": { },
            "series": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookChartSeries"
              }
            },
            "title": { },
            "worksheet": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "height": "double",
        "left": "double",
        "name": "string",
        "top": "double",
        "width": "double",
        "axes": {
          "@odata.type": "microsoft.graph.workbookChartAxes"
        },
        "dataLabels": {
          "@odata.type": "microsoft.graph.workbookChartDataLabels"
        },
        "format": {
          "@odata.type": "microsoft.graph.workbookChartAreaFormat"
        },
        "legend": {
          "@odata.type": "microsoft.graph.workbookChartLegend"
        },
        "series": [
          {
            "@odata.type": "microsoft.graph.workbookChartSeries"
          }
        ],
        "title": {
          "@odata.type": "microsoft.graph.workbookChartTitle"
        },
        "worksheet": {
          "@odata.type": "microsoft.graph.workbookWorksheet"
        }
      }
    },
    "microsoft.graph.workbookChartAreaFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAreaFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "fill": {
          "@odata.type": "microsoft.graph.workbookChartFill"
        },
        "font": {
          "@odata.type": "microsoft.graph.workbookChartFont"
        }
      }
    },
    "microsoft.graph.workbookChartAxes": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxes",
          "type": "object",
          "properties": {
            "categoryAxis": { },
            "seriesAxis": { },
            "valueAxis": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "categoryAxis": {
          "@odata.type": "microsoft.graph.workbookChartAxis"
        },
        "seriesAxis": {
          "@odata.type": "microsoft.graph.workbookChartAxis"
        },
        "valueAxis": {
          "@odata.type": "microsoft.graph.workbookChartAxis"
        }
      }
    },
    "microsoft.graph.workbookChartAxis": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxis",
          "type": "object",
          "properties": {
            "majorUnit": {
              "description": "Represents the interval between two major tick marks. Can be set to a numeric value or an empty string.  The returned value is always a number."
            },
            "maximum": {
              "description": "Represents the maximum value on the value axis.  Can be set to a numeric value or an empty string (for automatic axis values).  The returned value is always a number."
            },
            "minimum": {
              "description": "Represents the minimum value on the value axis. Can be set to a numeric value or an empty string (for automatic axis values).  The returned value is always a number."
            },
            "minorUnit": {
              "description": "Represents the interval between two minor tick marks. 'Can be set to a numeric value or an empty string (for automatic axis values). The returned value is always a number."
            },
            "format": { },
            "majorGridlines": { },
            "minorGridlines": { },
            "title": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "majorUnit": {
          "@odata.type": "microsoft.graph.Json"
        },
        "maximum": {
          "@odata.type": "microsoft.graph.Json"
        },
        "minimum": {
          "@odata.type": "microsoft.graph.Json"
        },
        "minorUnit": {
          "@odata.type": "microsoft.graph.Json"
        },
        "format": {
          "@odata.type": "microsoft.graph.workbookChartAxisFormat"
        },
        "majorGridlines": {
          "@odata.type": "microsoft.graph.workbookChartGridlines"
        },
        "minorGridlines": {
          "@odata.type": "microsoft.graph.workbookChartGridlines"
        },
        "title": {
          "@odata.type": "microsoft.graph.workbookChartAxisTitle"
        }
      }
    },
    "microsoft.graph.workbookChartAxisFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxisFormat",
          "type": "object",
          "properties": {
            "font": { },
            "line": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "font": {
          "@odata.type": "microsoft.graph.workbookChartFont"
        },
        "line": {
          "@odata.type": "microsoft.graph.workbookChartLineFormat"
        }
      }
    },
    "microsoft.graph.workbookChartAxisTitle": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxisTitle",
          "type": "object",
          "properties": {
            "text": {
              "description": "Represents the axis title.",
              "type": "string"
            },
            "visible": {
              "description": "A boolean that specifies the visibility of an axis title.",
              "type": "boolean"
            },
            "format": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "text": "string",
        "visible": true,
        "format": {
          "@odata.type": "microsoft.graph.workbookChartAxisTitleFormat"
        }
      }
    },
    "microsoft.graph.workbookChartAxisTitleFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxisTitleFormat",
          "type": "object",
          "properties": {
            "font": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "font": {
          "@odata.type": "microsoft.graph.workbookChartFont"
        }
      }
    },
    "microsoft.graph.workbookChartDataLabelFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartDataLabelFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "fill": {
          "@odata.type": "microsoft.graph.workbookChartFill"
        },
        "font": {
          "@odata.type": "microsoft.graph.workbookChartFont"
        }
      }
    },
    "microsoft.graph.workbookChartDataLabels": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartDataLabels",
          "type": "object",
          "properties": {
            "position": {
              "description": "DataLabelPosition value that represents the position of the data label. The possible values are: None, Center, InsideEnd, InsideBase, OutsideEnd, Left, Right, Top, Bottom, BestFit, Callout.",
              "type": "string"
            },
            "separator": {
              "description": "String representing the separator used for the data labels on a chart.",
              "type": "string"
            },
            "showBubbleSize": {
              "description": "Boolean value representing if the data label bubble size is visible or not.",
              "type": "boolean"
            },
            "showCategoryName": {
              "description": "Boolean value representing if the data label category name is visible or not.",
              "type": "boolean"
            },
            "showLegendKey": {
              "description": "Boolean value representing if the data label legend key is visible or not.",
              "type": "boolean"
            },
            "showPercentage": {
              "description": "Boolean value representing if the data label percentage is visible or not.",
              "type": "boolean"
            },
            "showSeriesName": {
              "description": "Boolean value representing if the data label series name is visible or not.",
              "type": "boolean"
            },
            "showValue": {
              "description": "Boolean value representing if the data label value is visible or not.",
              "type": "boolean"
            },
            "format": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "position": "string",
        "separator": "string",
        "showBubbleSize": true,
        "showCategoryName": true,
        "showLegendKey": true,
        "showPercentage": true,
        "showSeriesName": true,
        "showValue": true,
        "format": {
          "@odata.type": "microsoft.graph.workbookChartDataLabelFormat"
        }
      }
    },
    "microsoft.graph.workbookChartFill": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartFill",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)"
      }
    },
    "microsoft.graph.workbookChartFont": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartFont",
          "type": "object",
          "properties": {
            "bold": {
              "description": "Represents the bold status of font.",
              "type": "boolean"
            },
            "color": {
              "description": "HTML color code representation of the text color. E.g. #FF0000 represents Red.",
              "type": "string"
            },
            "italic": {
              "description": "Represents the italic status of the font.",
              "type": "boolean"
            },
            "name": {
              "description": "Font name (e.g. 'Calibri')",
              "type": "string"
            },
            "size": {
              "format": "double",
              "description": "Size of the font (e.g. 11)"
            },
            "underline": {
              "description": "Type of underline applied to the font. The possible values are: None, Single.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "bold": true,
        "color": "string",
        "italic": true,
        "name": "string",
        "size": "double",
        "underline": "string"
      }
    },
    "microsoft.graph.workbookChartGridlines": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartGridlines",
          "type": "object",
          "properties": {
            "visible": {
              "description": "Boolean value representing if the axis gridlines are visible or not.",
              "type": "boolean"
            },
            "format": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "visible": true,
        "format": {
          "@odata.type": "microsoft.graph.workbookChartGridlinesFormat"
        }
      }
    },
    "microsoft.graph.workbookChartGridlinesFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartGridlinesFormat",
          "type": "object",
          "properties": {
            "line": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "line": {
          "@odata.type": "microsoft.graph.workbookChartLineFormat"
        }
      }
    },
    "microsoft.graph.workbookChartLegend": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartLegend",
          "type": "object",
          "properties": {
            "overlay": {
              "description": "Boolean value for whether the chart legend should overlap with the main body of the chart.",
              "type": "boolean"
            },
            "position": {
              "description": "Represents the position of the legend on the chart. The possible values are: Top, Bottom, Left, Right, Corner, Custom.",
              "type": "string"
            },
            "visible": {
              "description": "A boolean value the represents the visibility of a ChartLegend object.",
              "type": "boolean"
            },
            "format": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "overlay": true,
        "position": "string",
        "visible": true,
        "format": {
          "@odata.type": "microsoft.graph.workbookChartLegendFormat"
        }
      }
    },
    "microsoft.graph.workbookChartLegendFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartLegendFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "fill": {
          "@odata.type": "microsoft.graph.workbookChartFill"
        },
        "font": {
          "@odata.type": "microsoft.graph.workbookChartFont"
        }
      }
    },
    "microsoft.graph.workbookChartLineFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartLineFormat",
          "type": "object",
          "properties": {
            "color": {
              "description": "HTML color code representing the color of lines in the chart.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "color": "string"
      }
    },
    "microsoft.graph.workbookChartPoint": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartPoint",
          "type": "object",
          "properties": {
            "value": {
              "description": "Returns the value of a chart point. Read-only."
            },
            "format": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "value": {
          "@odata.type": "microsoft.graph.Json"
        },
        "format": {
          "@odata.type": "microsoft.graph.workbookChartPointFormat"
        }
      }
    },
    "microsoft.graph.workbookChartPointFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartPointFormat",
          "type": "object",
          "properties": {
            "fill": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "fill": {
          "@odata.type": "microsoft.graph.workbookChartFill"
        }
      }
    },
    "microsoft.graph.workbookChartSeries": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartSeries",
          "type": "object",
          "properties": {
            "name": {
              "description": "Represents the name of a series in a chart.",
              "type": "string"
            },
            "format": { },
            "points": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookChartPoint"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "name": "string",
        "format": {
          "@odata.type": "microsoft.graph.workbookChartSeriesFormat"
        },
        "points": [
          {
            "@odata.type": "microsoft.graph.workbookChartPoint"
          }
        ]
      }
    },
    "microsoft.graph.workbookChartSeriesFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartSeriesFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "line": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "fill": {
          "@odata.type": "microsoft.graph.workbookChartFill"
        },
        "line": {
          "@odata.type": "microsoft.graph.workbookChartLineFormat"
        }
      }
    },
    "microsoft.graph.workbookChartTitle": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartTitle",
          "type": "object",
          "properties": {
            "overlay": {
              "description": "Boolean value representing if the chart title will overlay the chart or not.",
              "type": "boolean"
            },
            "text": {
              "description": "Represents the title text of a chart.",
              "type": "string"
            },
            "visible": {
              "description": "A boolean value the represents the visibility of a chart title object.",
              "type": "boolean"
            },
            "format": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "overlay": true,
        "text": "string",
        "visible": true,
        "format": {
          "@odata.type": "microsoft.graph.workbookChartTitleFormat"
        }
      }
    },
    "microsoft.graph.workbookChartTitleFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartTitleFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "fill": {
          "@odata.type": "microsoft.graph.workbookChartFill"
        },
        "font": {
          "@odata.type": "microsoft.graph.workbookChartFont"
        }
      }
    },
    "microsoft.graph.columnDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "columnDefinition",
          "type": "object",
          "properties": {
            "columnGroup": {
              "description": "For site columns, the name of the group this column belongs to. Helps organize related columns.",
              "type": "string"
            },
            "description": {
              "description": "The user-facing description of the column.",
              "type": "string"
            },
            "displayName": {
              "description": "The user-facing name of the column.",
              "type": "string"
            },
            "enforceUniqueValues": {
              "description": "If true, no two list items may have the same value for this column.",
              "type": "boolean"
            },
            "hidden": {
              "description": "Specifies whether the column is displayed in the user interface.",
              "type": "boolean"
            },
            "indexed": {
              "description": "Specifies whether the column values can used for sorting and searching.",
              "type": "boolean"
            },
            "name": {
              "description": "The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.",
              "type": "string"
            },
            "readOnly": {
              "description": "Specifies whether the column values can be modified.",
              "type": "boolean"
            },
            "required": {
              "description": "Specifies whether the column value is not optional.",
              "type": "boolean"
            },
            "boolean": {
              "description": "This column stores boolean values."
            },
            "calculated": {
              "description": "This column's data is calculated based on other columns."
            },
            "choice": {
              "description": "This column stores data from a list of choices."
            },
            "currency": {
              "description": "This column stores currency values."
            },
            "dateTime": {
              "description": "This column stores DateTime values."
            },
            "defaultValue": {
              "description": "The default value for this column."
            },
            "lookup": {
              "description": "This column's data is looked up from another source in the site."
            },
            "number": {
              "description": "This column stores number values."
            },
            "personOrGroup": {
              "description": "This column stores Person or Group values."
            },
            "text": {
              "description": "This column stores text values."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "columnGroup": "string",
        "description": "string",
        "displayName": "string",
        "enforceUniqueValues": true,
        "hidden": true,
        "indexed": true,
        "name": "string",
        "readOnly": true,
        "required": true,
        "boolean": {
          "@odata.type": "microsoft.graph.booleanColumn"
        },
        "calculated": {
          "@odata.type": "microsoft.graph.calculatedColumn"
        },
        "choice": {
          "@odata.type": "microsoft.graph.choiceColumn"
        },
        "currency": {
          "@odata.type": "microsoft.graph.currencyColumn"
        },
        "dateTime": {
          "@odata.type": "microsoft.graph.dateTimeColumn"
        },
        "defaultValue": {
          "@odata.type": "microsoft.graph.defaultColumnValue"
        },
        "lookup": {
          "@odata.type": "microsoft.graph.lookupColumn"
        },
        "number": {
          "@odata.type": "microsoft.graph.numberColumn"
        },
        "personOrGroup": {
          "@odata.type": "microsoft.graph.personOrGroupColumn"
        },
        "text": {
          "@odata.type": "microsoft.graph.textColumn"
        }
      }
    },
    "microsoft.graph.columnLink": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "columnLink",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the column  in this content type.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "name": "string"
      }
    },
    "microsoft.graph.outlookItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "outlookItem",
          "type": "object",
          "properties": {
            "categories": {
              "description": "The categories associated with the item",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "changeKey": {
              "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "categories": [
          "string"
        ],
        "changeKey": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.contact": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "contact",
          "type": "object",
          "properties": {
            "assistantName": {
              "description": "The name of the contact's assistant.",
              "type": "string"
            },
            "birthday": {
              "format": "date-time",
              "description": "The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "businessAddress": {
              "description": "The contact's business address."
            },
            "businessHomePage": {
              "description": "The business home page of the contact.",
              "type": "string"
            },
            "businessPhones": {
              "description": "The contact's business phone numbers.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "children": {
              "description": "The names of the contact's children.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "companyName": {
              "description": "The name of the contact's company.",
              "type": "string"
            },
            "department": {
              "description": "The contact's department.",
              "type": "string"
            },
            "displayName": {
              "description": "The contact's display name.",
              "type": "string"
            },
            "emailAddresses": {
              "description": "The contact's email addresses.",
              "type": "array",
              "items": { }
            },
            "flag": {
              "description": "The flag value that indicates the status, start date, due date, or completion date for the message."
            },
            "fileAs": {
              "description": "The name the contact is filed under.",
              "type": "string"
            },
            "generation": {
              "description": "The contact's generation.",
              "type": "string"
            },
            "givenName": {
              "description": "The contact's given name.",
              "type": "string"
            },
            "homeAddress": {
              "description": "The contact's home address."
            },
            "homePhones": {
              "description": "The contact's home phone numbers.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "imAddresses": {
              "description": "The contact's instant messaging (IM) addresses.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "initials": {
              "description": "The contact's initials.",
              "type": "string"
            },
            "jobTitle": {
              "description": "The contact’s job title.",
              "type": "string"
            },
            "manager": {
              "description": "The name of the contact's manager.",
              "type": "string"
            },
            "middleName": {
              "description": "The contact's middle name.",
              "type": "string"
            },
            "mobilePhone": {
              "description": "The contact's mobile phone number.",
              "type": "string"
            },
            "nickName": {
              "description": "The contact's nickname.",
              "type": "string"
            },
            "officeLocation": {
              "description": "The location of the contact's office.",
              "type": "string"
            },
            "otherAddress": {
              "description": "Other addresses for the contact."
            },
            "parentFolderId": {
              "description": "The ID of the contact's parent folder.",
              "type": "string"
            },
            "personalNotes": {
              "description": "The user's notes about the contact.",
              "type": "string"
            },
            "profession": {
              "description": "The contact's profession.",
              "type": "string"
            },
            "spouseName": {
              "description": "The name of the contact's spouse/partner.",
              "type": "string"
            },
            "surname": {
              "description": "The contact's surname.",
              "type": "string"
            },
            "title": {
              "description": "The contact's title.",
              "type": "string"
            },
            "yomiCompanyName": {
              "description": "The phonetic Japanese company name of the contact.",
              "type": "string"
            },
            "yomiGivenName": {
              "description": "The phonetic Japanese given name (first name) of the contact.",
              "type": "string"
            },
            "yomiSurname": {
              "description": "The phonetic Japanese surname (last name)  of the contact.",
              "type": "string"
            },
            "photo": { },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "categories": [
          "string"
        ],
        "changeKey": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "assistantName": "string",
        "birthday": "string (timestamp)",
        "businessAddress": {
          "@odata.type": "microsoft.graph.physicalAddress"
        },
        "businessHomePage": "string",
        "businessPhones": [
          "string"
        ],
        "children": [
          "string"
        ],
        "companyName": "string",
        "department": "string",
        "displayName": "string",
        "emailAddresses": [
          {
            "@odata.type": "microsoft.graph.emailAddress"
          }
        ],
        "flag": {
          "@odata.type": "microsoft.graph.followupFlag"
        },
        "fileAs": "string",
        "generation": "string",
        "givenName": "string",
        "homeAddress": {
          "@odata.type": "microsoft.graph.physicalAddress"
        },
        "homePhones": [
          "string"
        ],
        "imAddresses": [
          "string"
        ],
        "initials": "string",
        "jobTitle": "string",
        "manager": "string",
        "middleName": "string",
        "mobilePhone": "string",
        "nickName": "string",
        "officeLocation": "string",
        "otherAddress": {
          "@odata.type": "microsoft.graph.physicalAddress"
        },
        "parentFolderId": "string",
        "personalNotes": "string",
        "profession": "string",
        "spouseName": "string",
        "surname": "string",
        "title": "string",
        "yomiCompanyName": "string",
        "yomiGivenName": "string",
        "yomiSurname": "string",
        "photo": {
          "@odata.type": "microsoft.graph.profilePhoto"
        },
        "extensions": [
          {
            "@odata.type": "microsoft.graph.extension"
          }
        ],
        "multiValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
          }
        ],
        "singleValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
          }
        ]
      }
    },
    "microsoft.graph.contactFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "contactFolder",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The folder's display name.",
              "type": "string"
            },
            "parentFolderId": {
              "description": "The ID of the folder's parent folder.",
              "type": "string"
            },
            "childFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contactFolder"
              }
            },
            "contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contact"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "parentFolderId": "string",
        "childFolders": [
          {
            "@odata.type": "microsoft.graph.contactFolder"
          }
        ],
        "contacts": [
          {
            "@odata.type": "microsoft.graph.contact"
          }
        ],
        "multiValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
          }
        ],
        "singleValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
          }
        ]
      }
    },
    "microsoft.graph.contentType": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "contentType",
          "type": "object",
          "properties": {
            "description": {
              "description": "The descriptive text for the item.",
              "type": "string"
            },
            "group": {
              "description": "The name of the group this content type belongs to. Helps organize related content types.",
              "type": "string"
            },
            "hidden": {
              "description": "Indicates whether the content type is hidden in the list's 'New' menu.",
              "type": "boolean"
            },
            "inheritedFrom": {
              "description": "If this content type is inherited from another scope (like a site), provides a reference to the item where the content type is defined."
            },
            "name": {
              "description": "The name of the content type.",
              "type": "string"
            },
            "order": {
              "description": "Specifies the order in which the content type appears in the selection UI."
            },
            "parentId": {
              "description": "The unique identifier of the content type.",
              "type": "string"
            },
            "readOnly": {
              "description": "If true, the content type cannot be modified unless this value is first set to false.",
              "type": "boolean"
            },
            "sealed": {
              "description": "If true, the content type cannot be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types.",
              "type": "boolean"
            },
            "columnLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.columnLink"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "description": "string",
        "group": "string",
        "hidden": true,
        "inheritedFrom": {
          "@odata.type": "microsoft.graph.itemReference"
        },
        "name": "string",
        "order": {
          "@odata.type": "microsoft.graph.contentTypeOrder"
        },
        "parentId": "string",
        "readOnly": true,
        "sealed": true,
        "columnLinks": [
          {
            "@odata.type": "microsoft.graph.columnLink"
          }
        ]
      }
    },
    "microsoft.graph.directoryObject": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "directoryObject",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)"
      }
    },
    "microsoft.graph.contract": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "contract",
          "type": "object",
          "properties": {
            "contractType": {
              "description": "Type of contract.Possible values are: SyndicationPartner - Partner that exclusively resells and manages O365 and Intune for this customer. They resell and support their customers. BreadthPartner - Partner has the ability to provide administrative support for this customer. However, the partner is not allowed to resell to the customer.ResellerPartner - Partner that is similar to a syndication partner, except that the partner doesn’t have exclusive access to a tenant. In the syndication case, the customer cannot buy additional direct subscriptions from Microsoft or from other partners.",
              "type": "string"
            },
            "customerId": {
              "format": "uuid",
              "description": "The unique identifier for the customer tenant referenced by this partnership. Corresponds to the id property of the customer tenant's organization resource.",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "defaultDomainName": {
              "description": "A copy of the customer tenant's default domain name. The copy is made when the partnership with the customer is established. It is not automatically updated if the customer tenant's default domain name changes.",
              "type": "string"
            },
            "displayName": {
              "description": "A copy of the customer tenant's display name. The copy is made when the partnership with the customer is established. It is not automatically updated if the customer tenant's display name changes.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "contractType": "string",
        "customerId": "string",
        "defaultDomainName": "string",
        "displayName": "string"
      }
    },
    "microsoft.graph.conversation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "conversation",
          "type": "object",
          "properties": {
            "hasAttachments": {
              "description": "Indicates whether any of the posts within this Conversation has at least one attachment.",
              "type": "boolean"
            },
            "lastDeliveredDateTime": {
              "format": "date-time",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "preview": {
              "description": "A short summary from the body of the latest post in this converstaion.",
              "type": "string"
            },
            "topic": {
              "description": "The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated.",
              "type": "string"
            },
            "uniqueSenders": {
              "description": "All the users that sent a message to this Conversation.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "threads": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.conversationThread"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "hasAttachments": true,
        "lastDeliveredDateTime": "string (timestamp)",
        "preview": "string",
        "topic": "string",
        "uniqueSenders": [
          "string"
        ],
        "threads": [
          {
            "@odata.type": "microsoft.graph.conversationThread"
          }
        ]
      }
    },
    "microsoft.graph.conversationThread": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "conversationThread",
          "type": "object",
          "properties": {
            "ccRecipients": {
              "description": "The Cc: recipients for the thread.",
              "type": "array",
              "items": { }
            },
            "hasAttachments": {
              "description": "Indicates whether any of the posts within this thread has at least one attachment.",
              "type": "boolean"
            },
            "isLocked": {
              "description": "Indicates if the thread is locked.",
              "type": "boolean"
            },
            "lastDeliveredDateTime": {
              "format": "date-time",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "preview": {
              "description": "A short summary from the body of the latest post in this converstaion.",
              "type": "string"
            },
            "toRecipients": {
              "description": "The To: recipients for the thread.",
              "type": "array",
              "items": { }
            },
            "topic": {
              "description": "The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated.",
              "type": "string"
            },
            "uniqueSenders": {
              "description": "All the users that sent a message to this thread.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "posts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.post"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "ccRecipients": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "hasAttachments": true,
        "isLocked": true,
        "lastDeliveredDateTime": "string (timestamp)",
        "preview": "string",
        "toRecipients": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "topic": "string",
        "uniqueSenders": [
          "string"
        ],
        "posts": [
          {
            "@odata.type": "microsoft.graph.post"
          }
        ]
      }
    },
    "microsoft.graph.device": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "device",
          "type": "object",
          "properties": {
            "accountEnabled": {
              "description": "true if the account is enabled; otherwise, false. Required.",
              "type": "boolean"
            },
            "alternativeSecurityIds": {
              "description": "For internal use only. Not nullable.",
              "type": "array",
              "items": { }
            },
            "approximateLastSignInDateTime": {
              "format": "date-time",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z' Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "deviceId": {
              "description": "Unique identifier set by Azure Device Registration Service at the time of registration.",
              "type": "string"
            },
            "deviceMetadata": {
              "description": "For interal use only. Set to null.",
              "type": "string"
            },
            "deviceVersion": {
              "format": "int32",
              "description": "For interal use only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "displayName": {
              "description": "The display name for the device. Required.",
              "type": "string"
            },
            "isCompliant": {
              "description": "true if the device complies with Mobile Device Management (MDM) policies; otherwise, false. Read-only. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices.",
              "type": "boolean"
            },
            "isManaged": {
              "description": "true if the device is managed by a Mobile Device Management (MDM) app; otherwise, false. This can only be updated by Intune for any device OS type or by an approved MDM app for Windows OS devices.",
              "type": "boolean"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "description": "The last time at which the object was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z' Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "description": "true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only.",
              "type": "boolean"
            },
            "operatingSystem": {
              "description": "The type of operating system on the device. Required.",
              "type": "string"
            },
            "operatingSystemVersion": {
              "description": "The version of the operating system on the device. Required.",
              "type": "string"
            },
            "physicalIds": {
              "description": "For interal use only. Not nullable.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "trustType": {
              "description": "Type of trust for the joined device. Read-only. Possible values: Workplace - indicates bring your own personal devicesAzureAd - Cloud only joined devicesServerAd - on-premises domain joined devices joined to Azure AD. For more details, see Introduction to device management in Azure Active Directory",
              "type": "string"
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "registeredOwners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "registeredUsers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "accountEnabled": true,
        "alternativeSecurityIds": [
          {
            "@odata.type": "microsoft.graph.alternativeSecurityId"
          }
        ],
        "approximateLastSignInDateTime": "string (timestamp)",
        "deviceId": "string",
        "deviceMetadata": "string",
        "deviceVersion": "integer",
        "displayName": "string",
        "isCompliant": true,
        "isManaged": true,
        "onPremisesLastSyncDateTime": "string (timestamp)",
        "onPremisesSyncEnabled": true,
        "operatingSystem": "string",
        "operatingSystemVersion": "string",
        "physicalIds": [
          "string"
        ],
        "trustType": "string",
        "extensions": [
          {
            "@odata.type": "microsoft.graph.extension"
          }
        ],
        "registeredOwners": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "registeredUsers": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ]
      }
    },
    "microsoft.graph.directory": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "directory",
          "type": "object",
          "properties": {
            "deletedItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "deletedItems": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ]
      }
    },
    "microsoft.graph.directoryRole": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "directoryRole",
          "type": "object",
          "properties": {
            "description": {
              "description": "The description for the directory role. Read-only.",
              "type": "string"
            },
            "displayName": {
              "description": "The display name for the directory role. Read-only.",
              "type": "string"
            },
            "roleTemplateId": {
              "description": "The id of the directoryRoleTemplate that this role is based on. The property must be specified when activating a directory role in a tenant with a POST operation. After the directory role has been activated, the property is read only.",
              "type": "string"
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "description": "string",
        "displayName": "string",
        "roleTemplateId": "string",
        "members": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ]
      }
    },
    "microsoft.graph.directoryRoleTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "directoryRoleTemplate",
          "type": "object",
          "properties": {
            "description": {
              "description": "The description to set for the directory role. Read-only.",
              "type": "string"
            },
            "displayName": {
              "description": "The display name to set for the directory role. Read-only.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "description": "string",
        "displayName": "string"
      }
    },
    "microsoft.graph.domain": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "domain",
          "type": "object",
          "properties": {
            "authenticationType": {
              "description": "Indicates the configured authentication type for the domain. The value is either Managed or Federated. Managed indicates a cloud managed domain where Azure AD performs user authentication.Federated indicates authentication is federated with an identity provider such as the tenant's on-premises Active Directory via Active Directory Federation Services. Not nullable",
              "type": "string"
            },
            "availabilityStatus": {
              "description": "This property is always null except when the verify action is used. When the verify action is used, a domain entity is returned in the response. The availabilityStatus property of the domain entity in the response is either AvailableImmediately or EmailVerifiedDomainTakeoverScheduled.",
              "type": "string"
            },
            "isAdminManaged": {
              "description": "The value of the property is false if the DNS record management of the domain has been delegated to Office 365. Otherwise, the value is true. Not nullable",
              "type": "boolean"
            },
            "isDefault": {
              "description": "True if this is the default domain that is used for user creation. There is only one default domain per company. Not nullable",
              "type": "boolean"
            },
            "isInitial": {
              "description": "True if this is the initial domain created by Microsoft Online Services (companyname.onmicrosoft.com). There is only one initial domain per company. Not nullable",
              "type": "boolean"
            },
            "isRoot": {
              "description": "True if the domain is a verified root domain. Otherwise, false if the domain is a subdomain or unverified. Not nullable",
              "type": "boolean"
            },
            "isVerified": {
              "description": "True if the domain has completed domain ownership verification. Not nullable",
              "type": "boolean"
            },
            "state": {
              "description": "Status of asynchronous operations scheduled for the domain."
            },
            "supportedServices": {
              "description": "The capabilities assigned to the domain.Can include 0, 1 or more of following values: Email, Sharepoint, EmailInternalRelayOnly, OfficeCommunicationsOnline, SharePointDefaultDomain, FullRedelegation, SharePointPublic, OrgIdAuthentication, Yammer, Intune The values which you can add/remove using Graph API include: Email, OfficeCommunicationsOnline, YammerNot nullable",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "domainNameReferences": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "serviceConfigurationRecords": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
              }
            },
            "verificationDnsRecords": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "authenticationType": "string",
        "availabilityStatus": "string",
        "isAdminManaged": true,
        "isDefault": true,
        "isInitial": true,
        "isRoot": true,
        "isVerified": true,
        "state": {
          "@odata.type": "microsoft.graph.domainState"
        },
        "supportedServices": [
          "string"
        ],
        "domainNameReferences": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "serviceConfigurationRecords": [
          {
            "@odata.type": "microsoft.graph.domainDnsRecord"
          }
        ],
        "verificationDnsRecords": [
          {
            "@odata.type": "microsoft.graph.domainDnsRecord"
          }
        ]
      }
    },
    "microsoft.graph.domainDnsRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "domainDnsRecord",
          "type": "object",
          "properties": {
            "isOptional": {
              "description": "If false, this record must be configured by the customer at the DNS host for Microsoft Online Services to operate correctly with the domain.",
              "type": "boolean"
            },
            "label": {
              "description": "Value used when configuring the name of the DNS record at the DNS host.",
              "type": "string"
            },
            "recordType": {
              "description": "Indicates what type of DNS record this entity represents.The value can be one of the following: CName, Mx, Srv, TxtKey",
              "type": "string"
            },
            "supportedService": {
              "description": "Microsoft Online Service or feature that has a dependency on this DNS record.Can be one of the following values: null, Email, Sharepoint, EmailInternalRelayOnly, OfficeCommunicationsOnline, SharePointDefaultDomain, FullRedelegation, SharePointPublic, OrgIdAuthentication, Yammer, Intune",
              "type": "string"
            },
            "ttl": {
              "format": "int32",
              "description": "Value to use when configuring the time-to-live (ttl) property of the DNS record at the DNS host. Not nullable",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "isOptional": true,
        "label": "string",
        "recordType": "string",
        "supportedService": "string",
        "ttl": "integer"
      }
    },
    "microsoft.graph.domainDnsCnameRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsCnameRecord",
          "type": "object",
          "properties": {
            "canonicalName": {
              "description": "The canonical name of the CNAME record. Used to configure the CNAME record at the DNS host.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "isOptional": true,
        "label": "string",
        "recordType": "string",
        "supportedService": "string",
        "ttl": "integer",
        "canonicalName": "string"
      }
    },
    "microsoft.graph.domainDnsMxRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsMxRecord",
          "type": "object",
          "properties": {
            "mailExchange": {
              "description": "Value used when configuring the answer/destination/value of the MX record at the DNS host.",
              "type": "string"
            },
            "preference": {
              "format": "int32",
              "description": "Value used when configuring the Preference/Priority property of the MX record at the DNS host.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "isOptional": true,
        "label": "string",
        "recordType": "string",
        "supportedService": "string",
        "ttl": "integer",
        "mailExchange": "string",
        "preference": "integer"
      }
    },
    "microsoft.graph.domainDnsSrvRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsSrvRecord",
          "type": "object",
          "properties": {
            "nameTarget": {
              "description": "Value to use when configuring the Target property of the SRV record at the DNS host.",
              "type": "string"
            },
            "port": {
              "format": "int32",
              "description": "Value to use when configuring the port property of the SRV record at the DNS host.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "priority": {
              "format": "int32",
              "description": "Value to use when configuring the priority property of the SRV record at the DNS host.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "protocol": {
              "description": "Value to use when configuring the protocol property of the SRV record at the DNS host.",
              "type": "string"
            },
            "service": {
              "description": "Value to use when configuring the service property of the SRV record at the DNS host.",
              "type": "string"
            },
            "weight": {
              "format": "int32",
              "description": "Value to use when configuring the weight property of the SRV record at the DNS host.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "isOptional": true,
        "label": "string",
        "recordType": "string",
        "supportedService": "string",
        "ttl": "integer",
        "nameTarget": "string",
        "port": "integer",
        "priority": "integer",
        "protocol": "string",
        "service": "string",
        "weight": "integer"
      }
    },
    "microsoft.graph.domainDnsTxtRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsTxtRecord",
          "type": "object",
          "properties": {
            "text": {
              "description": "Value used when configuring the text property at the DNS host.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "isOptional": true,
        "label": "string",
        "recordType": "string",
        "supportedService": "string",
        "ttl": "integer",
        "text": "string"
      }
    },
    "microsoft.graph.domainDnsUnavailableRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsUnavailableRecord",
          "type": "object",
          "properties": {
            "description": {
              "description": "Provides the reason why the DomainDnsUnavailableRecord entity is returned.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "isOptional": true,
        "label": "string",
        "recordType": "string",
        "supportedService": "string",
        "ttl": "integer",
        "description": "string"
      }
    },
    "microsoft.graph.drive": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "drive",
          "type": "object",
          "properties": {
            "driveType": {
              "description": "Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only.",
              "type": "string"
            },
            "owner": {
              "description": "Optional. The user account that owns the drive. Read-only."
            },
            "quota": {
              "description": "Optional. Information about the drive's storage space quota. Read-only."
            },
            "sharepointIds": {
              "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only."
            },
            "system": {
              "description": "If present, indicates that this is a system-managed drive. Read-only."
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            },
            "root": { },
            "special": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            },
            "list": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "eTag": "string",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "parentReference": {
          "@odata.type": "microsoft.graph.itemReference"
        },
        "webUrl": "string",
        "createdByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "lastModifiedByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "driveType": "string",
        "owner": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "quota": {
          "@odata.type": "microsoft.graph.quota"
        },
        "sharepointIds": {
          "@odata.type": "microsoft.graph.sharepointIds"
        },
        "system": {
          "@odata.type": "microsoft.graph.systemFacet"
        },
        "items": [
          {
            "@odata.type": "microsoft.graph.driveItem"
          }
        ],
        "root": {
          "@odata.type": "microsoft.graph.driveItem"
        },
        "special": [
          {
            "@odata.type": "microsoft.graph.driveItem"
          }
        ],
        "list": {
          "@odata.type": "microsoft.graph.list"
        }
      }
    },
    "microsoft.graph.driveItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "driveItem",
          "type": "object",
          "properties": {
            "audio": {
              "description": "Audio metadata, if the item is an audio file. Read-only."
            },
            "content": {
              "format": "base64url",
              "description": "The content stream, if the item represents a file.",
              "type": "string"
            },
            "cTag": {
              "description": "An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.",
              "type": "string"
            },
            "deleted": {
              "description": "Information about the deleted state of the item. Read-only."
            },
            "file": {
              "description": "File metadata, if the item is a file. Read-only."
            },
            "fileSystemInfo": {
              "description": "File system information on client. Read-write."
            },
            "folder": {
              "description": "Folder metadata, if the item is a folder. Read-only."
            },
            "image": {
              "description": "Image metadata, if the item is an image. Read-only."
            },
            "location": {
              "description": "Location metadata, if the item has location data. Read-only."
            },
            "package": {
              "description": "If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only."
            },
            "photo": {
              "description": "Photo metadata, if the item is a photo. Read-only."
            },
            "publication": {
              "description": "Provides information about the published or checked-out state of an item, in locations that support such actions. This property is not returned by default. Read-only."
            },
            "remoteItem": {
              "description": "Remote item data, if the item is shared from a drive other than the one being accessed. Read-only."
            },
            "root": {
              "description": "If this property is non-null, it indicates that the driveItem is the top-most driveItem in the drive."
            },
            "searchResult": {
              "description": "Search metadata, if the item is from a search result. Read-only."
            },
            "shared": {
              "description": "Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only."
            },
            "sharepointIds": {
              "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only."
            },
            "size": {
              "format": "int64",
              "description": "Size of the item in bytes. Read-only.",
              "type": "integer"
            },
            "specialFolder": {
              "description": "If the current item is also available as a special folder, this facet is returned. Read-only."
            },
            "video": {
              "description": "Video metadata, if the item is a video. Read-only."
            },
            "webDavUrl": {
              "description": "WebDAV compatible URL for the item.",
              "type": "string"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            },
            "permissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.permission"
              }
            },
            "thumbnails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.thumbnailSet"
              }
            },
            "versions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItemVersion"
              }
            },
            "listItem": { },
            "workbook": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "eTag": "string",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "parentReference": {
          "@odata.type": "microsoft.graph.itemReference"
        },
        "webUrl": "string",
        "createdByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "lastModifiedByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "audio": {
          "@odata.type": "microsoft.graph.audio"
        },
        "content": "string",
        "cTag": "string",
        "deleted": {
          "@odata.type": "microsoft.graph.deleted"
        },
        "file": {
          "@odata.type": "microsoft.graph.file"
        },
        "fileSystemInfo": {
          "@odata.type": "microsoft.graph.fileSystemInfo"
        },
        "folder": {
          "@odata.type": "microsoft.graph.folder"
        },
        "image": {
          "@odata.type": "microsoft.graph.image"
        },
        "location": {
          "@odata.type": "microsoft.graph.geoCoordinates"
        },
        "package": {
          "@odata.type": "microsoft.graph.package"
        },
        "photo": {
          "@odata.type": "microsoft.graph.photo"
        },
        "publication": {
          "@odata.type": "microsoft.graph.publicationFacet"
        },
        "remoteItem": {
          "@odata.type": "microsoft.graph.remoteItem"
        },
        "root": {
          "@odata.type": "microsoft.graph.root"
        },
        "searchResult": {
          "@odata.type": "microsoft.graph.searchResult"
        },
        "shared": {
          "@odata.type": "microsoft.graph.shared"
        },
        "sharepointIds": {
          "@odata.type": "microsoft.graph.sharepointIds"
        },
        "size": "integer",
        "specialFolder": {
          "@odata.type": "microsoft.graph.specialFolder"
        },
        "video": {
          "@odata.type": "microsoft.graph.video"
        },
        "webDavUrl": "string",
        "children": [
          {
            "@odata.type": "microsoft.graph.driveItem"
          }
        ],
        "permissions": [
          {
            "@odata.type": "microsoft.graph.permission"
          }
        ],
        "thumbnails": [
          {
            "@odata.type": "microsoft.graph.thumbnailSet"
          }
        ],
        "versions": [
          {
            "@odata.type": "microsoft.graph.driveItemVersion"
          }
        ],
        "listItem": {
          "@odata.type": "microsoft.graph.listItem"
        },
        "workbook": {
          "@odata.type": "microsoft.graph.workbook"
        }
      }
    },
    "microsoft.graph.driveItemVersion": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItemVersion"
        },
        {
          "title": "driveItemVersion",
          "type": "object",
          "properties": {
            "content": {
              "format": "base64url",
              "description": "The content stream for this version of the item.",
              "type": "string"
            },
            "size": {
              "format": "int64",
              "description": "Indicates the size of the content stream for this version of the item.",
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "publication": {
          "@odata.type": "microsoft.graph.publicationFacet"
        },
        "content": "string",
        "size": "integer"
      }
    },
    "microsoft.graph.educationClass": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationClass",
          "type": "object",
          "properties": {
            "description": {
              "description": "Description of the class.",
              "type": "string"
            },
            "classCode": {
              "description": "Class code used by the school to identify the class.",
              "type": "string"
            },
            "createdBy": {
              "description": "Entity who created the class"
            },
            "displayName": {
              "description": "Name of the class.",
              "type": "string"
            },
            "externalId": {
              "description": "ID of the class from the syncing system.",
              "type": "string"
            },
            "externalName": {
              "description": "Name of the class in the syncing system.",
              "type": "string"
            },
            "externalSource": {
              "description": "How this class was created. The possible values are: sis, manual, unknownFutureValue."
            },
            "mailNickname": {
              "description": "Mail name for sending email to all members, if this is enabled.",
              "type": "string"
            },
            "term": {
              "description": "Term for this class."
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationUser"
              }
            },
            "schools": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSchool"
              }
            },
            "teachers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationUser"
              }
            },
            "group": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "description": "string",
        "classCode": "string",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "displayName": "string",
        "externalId": "string",
        "externalName": "string",
        "externalSource": {
          "@odata.type": "microsoft.graph.educationExternalSource"
        },
        "mailNickname": "string",
        "term": {
          "@odata.type": "microsoft.graph.educationTerm"
        },
        "members": [
          {
            "@odata.type": "microsoft.graph.educationUser"
          }
        ],
        "schools": [
          {
            "@odata.type": "microsoft.graph.educationSchool"
          }
        ],
        "teachers": [
          {
            "@odata.type": "microsoft.graph.educationUser"
          }
        ],
        "group": {
          "@odata.type": "microsoft.graph.group"
        }
      }
    },
    "microsoft.graph.educationOrganization": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationOrganization",
          "type": "object",
          "properties": {
            "description": {
              "description": "Organization description.",
              "type": "string"
            },
            "displayName": {
              "description": "Organization display name.",
              "type": "string"
            },
            "externalSource": {
              "description": "Source where this organization was created from. The possible values are: sis, manual, unknownFutureValue."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "description": "string",
        "displayName": "string",
        "externalSource": {
          "@odata.type": "microsoft.graph.educationExternalSource"
        }
      }
    },
    "microsoft.graph.educationRoot": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationRoot",
          "type": "object",
          "properties": {
            "classes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationClass"
              }
            },
            "me": { },
            "schools": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSchool"
              }
            },
            "users": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationUser"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "classes": [
          {
            "@odata.type": "microsoft.graph.educationClass"
          }
        ],
        "me": {
          "@odata.type": "microsoft.graph.educationUser"
        },
        "schools": [
          {
            "@odata.type": "microsoft.graph.educationSchool"
          }
        ],
        "users": [
          {
            "@odata.type": "microsoft.graph.educationUser"
          }
        ]
      }
    },
    "microsoft.graph.educationSchool": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.educationOrganization"
        },
        {
          "title": "educationSchool",
          "type": "object",
          "properties": {
            "status": {
              "description": "Read-Only. The possible values are: inactive, active, expired, deleteable.",
              "type": "string"
            },
            "principalEmail": {
              "description": "Email address of the principal.",
              "type": "string"
            },
            "principalName": {
              "description": "Name of the principal.",
              "type": "string"
            },
            "externalPrincipalId": {
              "description": "ID of principal in syncing system.",
              "type": "string"
            },
            "highestGrade": {
              "description": "Highest grade taught.",
              "type": "string"
            },
            "lowestGrade": {
              "description": "Lowest grade taught.",
              "type": "string"
            },
            "schoolNumber": {
              "description": "School Number.",
              "type": "string"
            },
            "address": {
              "description": "Address of the school."
            },
            "createdBy": {
              "description": "Entity who created the school."
            },
            "externalId": {
              "description": "ID of school in syncing system.",
              "type": "string"
            },
            "fax": {
              "description": "Fax number of school.",
              "type": "string"
            },
            "phone": {
              "description": "Phone number of school.",
              "type": "string"
            },
            "classes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationClass"
              }
            },
            "users": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationUser"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "description": "string",
        "displayName": "string",
        "externalSource": {
          "@odata.type": "microsoft.graph.educationExternalSource"
        },
        "status": "string",
        "principalEmail": "string",
        "principalName": "string",
        "externalPrincipalId": "string",
        "highestGrade": "string",
        "lowestGrade": "string",
        "schoolNumber": "string",
        "address": {
          "@odata.type": "microsoft.graph.physicalAddress"
        },
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "externalId": "string",
        "fax": "string",
        "phone": "string",
        "classes": [
          {
            "@odata.type": "microsoft.graph.educationClass"
          }
        ],
        "users": [
          {
            "@odata.type": "microsoft.graph.educationUser"
          }
        ]
      }
    },
    "microsoft.graph.educationUser": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "educationUser",
          "type": "object",
          "properties": {
            "accountEnabled": {
              "description": "True if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter.",
              "type": "boolean"
            },
            "assignedLicenses": {
              "description": "The licenses that are assigned to the user. Not nullable.",
              "type": "array",
              "items": { }
            },
            "assignedPlans": {
              "description": "The plans that are assigned to the user. Read-only. Not nullable.",
              "type": "array",
              "items": { }
            },
            "businessPhones": {
              "description": "The telephone numbers for the user. Note: Although this is a string collection, only one number can be set for this property.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "department": {
              "description": "The name for the department in which the user works. Supports $filter.",
              "type": "string"
            },
            "displayName": {
              "description": "The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial, and last name. This property is required when a user is created and it cannot be cleared during updates. Supports $filter and $orderby.",
              "type": "string"
            },
            "givenName": {
              "description": "The given name (first name) of the user. Supports $filter.",
              "type": "string"
            },
            "middleName": {
              "description": "The middle name of user.",
              "type": "string"
            },
            "surname": {
              "description": "The user's surname (family name or last name). Supports $filter.",
              "type": "string"
            },
            "mail": {
              "description": "The SMTP address for the user; for example, 'jeff@contoso.onmicrosoft.com'. Read-Only. Supports $filter.",
              "type": "string"
            },
            "mailNickname": {
              "description": "The mail alias for the user. This property must be specified when a user is created. Supports $filter.",
              "type": "string"
            },
            "mobilePhone": {
              "description": "The primary cellular telephone number for the user.",
              "type": "string"
            },
            "createdBy": {
              "description": "Entity who created the user."
            },
            "externalSource": {
              "description": "Where this user was created from. The possible values are: sis, manual, unkownFutureValue."
            },
            "mailingAddress": {
              "description": "Mail address of user."
            },
            "passwordPolicies": {
              "description": "Specifies password policies for the user. This value is an enumeration with one possible value being 'DisableStrongPassword', which allows weaker passwords than the default policy to be specified. 'DisablePasswordExpiration' can also be specified. The two can be specified together; for example: 'DisablePasswordExpiration, DisableStrongPassword'.",
              "type": "string"
            },
            "passwordProfile": {
              "description": "Specifies the password profile for the user. The profile contains the user’s password. This property is required when a user is created. The password in the profile must satisfy minimum requirements as specified by the passwordPolicies property. By default, a strong password is required."
            },
            "preferredLanguage": {
              "description": "The preferred language for the user. Should follow ISO 639-1 Code; for example, 'en-US'.",
              "type": "string"
            },
            "primaryRole": {
              "description": "Default role for a user. The user's role might be different in an individual class. The possible values are: student, teacher, unknownFutureValue. Supports $filter."
            },
            "provisionedPlans": {
              "description": "The plans that are provisioned for the user. Read-only. Not nullable.",
              "type": "array",
              "items": { }
            },
            "residenceAddress": {
              "description": "Address where user lives."
            },
            "student": {
              "description": "If the primary role is student, this block will contain student specific data."
            },
            "teacher": {
              "description": "If the primary role is teacher, this block will conatin teacher specific data."
            },
            "usageLocation": {
              "description": "A two-letter country code (ISO standard 3166). Required for users who will be assigned licenses due to a legal requirement to check for availability of services in countries or regions. Examples include: 'US', 'JP', and 'GB'. Not nullable. Supports $filter.",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant’s collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization. Supports $filter and $orderby.",
              "type": "string"
            },
            "userType": {
              "description": "A string value that can be used to classify user types in your directory, such as 'Member' and 'Guest'. Supports $filter.",
              "type": "string"
            },
            "classes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationClass"
              }
            },
            "schools": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.educationSchool"
              }
            },
            "assignments": { },
            "user": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "accountEnabled": true,
        "assignedLicenses": [
          {
            "@odata.type": "microsoft.graph.assignedLicense"
          }
        ],
        "assignedPlans": [
          {
            "@odata.type": "microsoft.graph.assignedPlan"
          }
        ],
        "businessPhones": [
          "string"
        ],
        "department": "string",
        "displayName": "string",
        "givenName": "string",
        "middleName": "string",
        "surname": "string",
        "mail": "string",
        "mailNickname": "string",
        "mobilePhone": "string",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "externalSource": {
          "@odata.type": "microsoft.graph.educationExternalSource"
        },
        "mailingAddress": {
          "@odata.type": "microsoft.graph.physicalAddress"
        },
        "passwordPolicies": "string",
        "passwordProfile": {
          "@odata.type": "microsoft.graph.passwordProfile"
        },
        "preferredLanguage": "string",
        "primaryRole": {
          "@odata.type": "microsoft.graph.educationUserRole"
        },
        "provisionedPlans": [
          {
            "@odata.type": "microsoft.graph.provisionedPlan"
          }
        ],
        "residenceAddress": {
          "@odata.type": "microsoft.graph.physicalAddress"
        },
        "student": {
          "@odata.type": "microsoft.graph.educationStudent"
        },
        "teacher": {
          "@odata.type": "microsoft.graph.educationTeacher"
        },
        "usageLocation": "string",
        "userPrincipalName": "string",
        "userType": "string",
        "classes": [
          {
            "@odata.type": "microsoft.graph.educationClass"
          }
        ],
        "schools": [
          {
            "@odata.type": "microsoft.graph.educationSchool"
          }
        ],
        "assignments": {
          "@odata.type": "microsoft.graph.educationAssignment"
        },
        "user": {
          "@odata.type": "microsoft.graph.user"
        }
      }
    },
    "microsoft.graph.event": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "event",
          "type": "object",
          "properties": {
            "attendees": {
              "description": "The collection of attendees for the event.",
              "type": "array",
              "items": { }
            },
            "body": {
              "description": "The body of the message associated with the event. It can be in HTML or text format."
            },
            "bodyPreview": {
              "description": "The preview of the message associated with the event. It is in text format.",
              "type": "string"
            },
            "end": {
              "description": "The date, time, and time zone that the event ends."
            },
            "hasAttachments": {
              "description": "Set to true if the event has attachments.",
              "type": "boolean"
            },
            "iCalUId": {
              "description": "A unique identifier that is shared by all instances of an event across different calendars.",
              "type": "string"
            },
            "importance": {
              "description": "The importance of the event. The possible values are: low, normal, high."
            },
            "isAllDay": {
              "description": "Set to true if the event lasts all day.",
              "type": "boolean"
            },
            "isCancelled": {
              "description": "Set to true if the event has been canceled.",
              "type": "boolean"
            },
            "isOrganizer": {
              "description": "Set to true if the message sender is also the organizer.",
              "type": "boolean"
            },
            "isReminderOn": {
              "description": "Set to true if an alert is set to remind the user of the event.",
              "type": "boolean"
            },
            "location": {
              "description": "The location of the event."
            },
            "locations": {
              "description": "The locations where the event is held or attended from. The location and locations properties always correspond with each other. If you update the location property, any prior locations in the locations collection would be removed and replaced by the new location value.",
              "type": "array",
              "items": { }
            },
            "onlineMeetingUrl": {
              "description": "A URL for an online meeting. The property is set only when an organizer specifies an event as an online meeting such as a Skype meeting. Read-only.",
              "type": "string"
            },
            "organizer": {
              "description": "The organizer of the event."
            },
            "originalEndTimeZone": {
              "description": "The end time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook.",
              "type": "string"
            },
            "originalStart": {
              "format": "date-time",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "originalStartTimeZone": {
              "description": "The start time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook.",
              "type": "string"
            },
            "recurrence": {
              "description": "The recurrence pattern for the event."
            },
            "reminderMinutesBeforeStart": {
              "format": "int32",
              "description": "The number of minutes before the event start time that the reminder alert occurs.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "responseRequested": {
              "description": "Set to true if the sender would like a response when the event is accepted or declined.",
              "type": "boolean"
            },
            "responseStatus": {
              "description": "Indicates the type of response sent in response to an event message."
            },
            "sensitivity": {
              "description": "The possible values are: normal, personal, private, confidential."
            },
            "seriesMasterId": {
              "description": "The ID for the recurring series master item, if this event is part of a recurring series.",
              "type": "string"
            },
            "showAs": {
              "description": "The status to show. The possible values are: free, tentative, busy, oof, workingElsewhere, unknown."
            },
            "start": {
              "description": "The date, time, and time zone that the event starts."
            },
            "subject": {
              "description": "The text of the event's subject line.",
              "type": "string"
            },
            "type": {
              "description": "The event type. The possible values are: singleInstance, occurrence, exception, seriesMaster. Read-only."
            },
            "webLink": {
              "description": "The URL to open the event in Outlook Web App.The event will open in the browser if you are logged in to your mailbox via Outlook Web App. You will be prompted to login if you are not already logged in with the browser.This URL can be accessed from within an iFrame.",
              "type": "string"
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.attachment"
              }
            },
            "calendar": { },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "instances": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "categories": [
          "string"
        ],
        "changeKey": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "attendees": [
          {
            "@odata.type": "microsoft.graph.attendee"
          }
        ],
        "body": {
          "@odata.type": "microsoft.graph.itemBody"
        },
        "bodyPreview": "string",
        "end": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        },
        "hasAttachments": true,
        "iCalUId": "string",
        "importance": {
          "@odata.type": "microsoft.graph.importance"
        },
        "isAllDay": true,
        "isCancelled": true,
        "isOrganizer": true,
        "isReminderOn": true,
        "location": {
          "@odata.type": "microsoft.graph.location"
        },
        "locations": [
          {
            "@odata.type": "microsoft.graph.location"
          }
        ],
        "onlineMeetingUrl": "string",
        "organizer": {
          "@odata.type": "microsoft.graph.recipient"
        },
        "originalEndTimeZone": "string",
        "originalStart": "string (timestamp)",
        "originalStartTimeZone": "string",
        "recurrence": {
          "@odata.type": "microsoft.graph.patternedRecurrence"
        },
        "reminderMinutesBeforeStart": "integer",
        "responseRequested": true,
        "responseStatus": {
          "@odata.type": "microsoft.graph.responseStatus"
        },
        "sensitivity": {
          "@odata.type": "microsoft.graph.sensitivity"
        },
        "seriesMasterId": "string",
        "showAs": {
          "@odata.type": "microsoft.graph.freeBusyStatus"
        },
        "start": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        },
        "subject": "string",
        "type": {
          "@odata.type": "microsoft.graph.eventType"
        },
        "webLink": "string",
        "attachments": [
          {
            "@odata.type": "microsoft.graph.attachment"
          }
        ],
        "calendar": {
          "@odata.type": "microsoft.graph.calendar"
        },
        "extensions": [
          {
            "@odata.type": "microsoft.graph.extension"
          }
        ],
        "instances": [
          {
            "@odata.type": "microsoft.graph.event"
          }
        ],
        "multiValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
          }
        ],
        "singleValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
          }
        ]
      }
    },
    "microsoft.graph.message": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "message",
          "type": "object",
          "properties": {
            "bccRecipients": {
              "description": "The Bcc: recipients for the message.",
              "type": "array",
              "items": { }
            },
            "body": {
              "description": "The body of the message. It can be in HTML or text format."
            },
            "bodyPreview": {
              "description": "The first 255 characters of the message body. It is in text format.",
              "type": "string"
            },
            "ccRecipients": {
              "description": "The Cc: recipients for the message.",
              "type": "array",
              "items": { }
            },
            "conversationId": {
              "description": "The ID of the conversation the email belongs to.",
              "type": "string"
            },
            "flag": {
              "description": "The flag value that indicates the status, start date, due date, or completion date for the message."
            },
            "from": {
              "description": "The mailbox owner and sender of the message. The value must correspond to the actual mailbox used."
            },
            "hasAttachments": {
              "description": "Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>.",
              "type": "boolean"
            },
            "importance": {
              "description": "The importance of the message: Low, Normal, High."
            },
            "inferenceClassification": {
              "description": "The classification of the message for the user, based on inferred relevance or importance, or on an explicit override. The possible values are: focused or other."
            },
            "internetMessageHeaders": {
              "description": "A collection of message headers defined by RFC5322. The set includes message headers indicating the network path taken by a message from the sender to the recipient. It can also contain custom message headers that hold app data for the message.",
              "type": "array",
              "items": { }
            },
            "internetMessageId": {
              "description": "The message ID in the format specified by RFC2822.",
              "type": "string"
            },
            "isDeliveryReceiptRequested": {
              "description": "Indicates whether a read receipt is requested for the message.",
              "type": "boolean"
            },
            "isDraft": {
              "description": "Indicates whether the message is a draft. A message is a draft if it hasn't been sent yet.",
              "type": "boolean"
            },
            "isRead": {
              "description": "Indicates whether the message has been read.",
              "type": "boolean"
            },
            "isReadReceiptRequested": {
              "description": "Indicates whether a read receipt is requested for the message.",
              "type": "boolean"
            },
            "parentFolderId": {
              "description": "The unique identifier for the message's parent mailFolder.",
              "type": "string"
            },
            "receivedDateTime": {
              "format": "date-time",
              "description": "The date and time the message was received.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "replyTo": {
              "description": "The email addresses to use when replying.",
              "type": "array",
              "items": { }
            },
            "sender": {
              "description": "The account that is actually used to generate the message. In most cases, this value is the same as the from property. You can set this property to a different value when sending a message from a shared mailbox, or sending a message as a delegate. In any case, the value must correspond to the actual mailbox used."
            },
            "sentDateTime": {
              "format": "date-time",
              "description": "The date and time the message was sent.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "subject": {
              "description": "The subject of the message.",
              "type": "string"
            },
            "toRecipients": {
              "description": "The To: recipients for the message.",
              "type": "array",
              "items": { }
            },
            "uniqueBody": {
              "description": "The part of the body of the message that is unique to the current message. uniqueBody is not returned by default but can be retrieved for a given message by use of the ?$select=uniqueBody query. It can be in HTML or text format."
            },
            "webLink": {
              "description": "The URL to open the message in Outlook Web App.You can append an ispopout argument to the end of the URL to change how the message is displayed. If ispopout is not present or if it is set to 1, then the message is shown in a popout window. If ispopout is set to 0, then the browser will show the message in the Outlook Web App review pane.The message will open in the browser if you are logged in to your mailbox via Outlook Web App. You will be prompted to login if you are not already logged in with the browser.This URL can be accessed from within an iFrame.",
              "type": "string"
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.attachment"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "categories": [
          "string"
        ],
        "changeKey": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "bccRecipients": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "body": {
          "@odata.type": "microsoft.graph.itemBody"
        },
        "bodyPreview": "string",
        "ccRecipients": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "conversationId": "string",
        "flag": {
          "@odata.type": "microsoft.graph.followupFlag"
        },
        "from": {
          "@odata.type": "microsoft.graph.recipient"
        },
        "hasAttachments": true,
        "importance": {
          "@odata.type": "microsoft.graph.importance"
        },
        "inferenceClassification": {
          "@odata.type": "microsoft.graph.inferenceClassificationType"
        },
        "internetMessageHeaders": [
          {
            "@odata.type": "microsoft.graph.internetMessageHeader"
          }
        ],
        "internetMessageId": "string",
        "isDeliveryReceiptRequested": true,
        "isDraft": true,
        "isRead": true,
        "isReadReceiptRequested": true,
        "parentFolderId": "string",
        "receivedDateTime": "string (timestamp)",
        "replyTo": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "sender": {
          "@odata.type": "microsoft.graph.recipient"
        },
        "sentDateTime": "string (timestamp)",
        "subject": "string",
        "toRecipients": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "uniqueBody": {
          "@odata.type": "microsoft.graph.itemBody"
        },
        "webLink": "string",
        "attachments": [
          {
            "@odata.type": "microsoft.graph.attachment"
          }
        ],
        "extensions": [
          {
            "@odata.type": "microsoft.graph.extension"
          }
        ],
        "multiValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
          }
        ],
        "singleValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
          }
        ]
      }
    },
    "microsoft.graph.eventMessage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.message"
        },
        {
          "title": "eventMessage",
          "type": "object",
          "properties": {
            "meetingMessageType": {
              "description": "The type of event message: none, meetingRequest, meetingCancelled, meetingAccepted, meetingTenativelyAccepted, meetingDeclined."
            },
            "event": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "categories": [
          "string"
        ],
        "changeKey": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "bccRecipients": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "body": {
          "@odata.type": "microsoft.graph.itemBody"
        },
        "bodyPreview": "string",
        "ccRecipients": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "conversationId": "string",
        "flag": {
          "@odata.type": "microsoft.graph.followupFlag"
        },
        "from": {
          "@odata.type": "microsoft.graph.recipient"
        },
        "hasAttachments": true,
        "importance": {
          "@odata.type": "microsoft.graph.importance"
        },
        "inferenceClassification": {
          "@odata.type": "microsoft.graph.inferenceClassificationType"
        },
        "internetMessageHeaders": [
          {
            "@odata.type": "microsoft.graph.internetMessageHeader"
          }
        ],
        "internetMessageId": "string",
        "isDeliveryReceiptRequested": true,
        "isDraft": true,
        "isRead": true,
        "isReadReceiptRequested": true,
        "parentFolderId": "string",
        "receivedDateTime": "string (timestamp)",
        "replyTo": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "sender": {
          "@odata.type": "microsoft.graph.recipient"
        },
        "sentDateTime": "string (timestamp)",
        "subject": "string",
        "toRecipients": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "uniqueBody": {
          "@odata.type": "microsoft.graph.itemBody"
        },
        "webLink": "string",
        "attachments": [
          {
            "@odata.type": "microsoft.graph.attachment"
          }
        ],
        "extensions": [
          {
            "@odata.type": "microsoft.graph.extension"
          }
        ],
        "multiValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
          }
        ],
        "singleValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
          }
        ],
        "meetingMessageType": {
          "@odata.type": "microsoft.graph.meetingMessageType"
        },
        "event": {
          "@odata.type": "microsoft.graph.event"
        }
      }
    },
    "microsoft.graph.extension": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "extension",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)"
      }
    },
    "microsoft.graph.fieldValueSet": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "fieldValueSet",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)"
      }
    },
    "microsoft.graph.fileAttachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attachment"
        },
        {
          "title": "fileAttachment",
          "type": "object",
          "properties": {
            "contentBytes": {
              "format": "base64url",
              "description": "The base64-encoded contents of the file.",
              "type": "string"
            },
            "contentId": {
              "description": "The ID of the attachment in the Exchange store.",
              "type": "string"
            },
            "contentLocation": {
              "description": "The Uniform Resource Identifier (URI) that corresponds to the location of the content of the attachment.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "contentType": "string",
        "isInline": true,
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "size": "integer",
        "contentBytes": "string",
        "contentId": "string",
        "contentLocation": "string"
      }
    },
    "microsoft.graph.workbookFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookFilter",
          "type": "object",
          "properties": {
            "criteria": {
              "description": "The currently applied filter on the given column. Read-only."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "criteria": {
          "@odata.type": "microsoft.graph.workbookFilterCriteria"
        }
      }
    },
    "microsoft.graph.workbookFormatProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookFormatProtection",
          "type": "object",
          "properties": {
            "formulaHidden": {
              "description": "Indicates if Excel hides the formula for the cells in the range. A null value indicates that the entire range doesn't have uniform formula hidden setting.",
              "type": "boolean"
            },
            "locked": {
              "description": "Indicates if Excel locks the cells in the object. A null value indicates that the entire range doesn't have uniform lock setting.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "formulaHidden": true,
        "locked": true
      }
    },
    "microsoft.graph.group": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "group",
          "type": "object",
          "properties": {
            "allowExternalSenders": {
              "description": "Default is false. Indicates if people external to the organization can send messages to the group.",
              "type": "boolean"
            },
            "autoSubscribeNewMembers": {
              "description": "Default is false. Indicates if new members added to the group will be auto-subscribed to receive email notifications. You can set this property in a PATCH request for the group; do not set it in the initial POST request that creates the group.",
              "type": "boolean"
            },
            "classification": {
              "description": "Describes a classification for the group (such as low, medium or high business impact). Valid values for this property are defined by creating a ClassificationList setting value, based on the template definition.",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "An optional description for the group.",
              "type": "string"
            },
            "displayName": {
              "description": "The display name for the group. This property is required when a group is created and it cannot be cleared during updates. Supports $filter and $orderby.",
              "type": "string"
            },
            "groupTypes": {
              "description": "Specifies the type of group to create. Possible values are Unified to create an Office 365 group, or DynamicMembership for dynamic groups.  For all other group types, like security-enabled groups and email-enabled security groups, do not set this property. Supports $filter.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "isSubscribedByMail": {
              "description": "Default value is true. Indicates whether the current user is subscribed to receive email conversations.",
              "type": "boolean"
            },
            "mail": {
              "description": "The SMTP address for the group, for example, 'serviceadmins@contoso.onmicrosoft.com'. Read-only. Supports $filter.",
              "type": "string"
            },
            "mailEnabled": {
              "description": "Specifies whether the group is mail-enabled. If the securityEnabled property is also true, the group is a mail-enabled security group; otherwise, the group is a Microsoft Exchange distribution group.",
              "type": "boolean"
            },
            "mailNickname": {
              "description": "The mail alias for the group, unique in the organization. This property must be specified when a group is created. Supports $filter.",
              "type": "string"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "description": "Indicates the last time at which the group was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only. Supports $filter.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesProvisioningErrors": {
              "description": "Errors when using Microsoft synchronization product during provisioning.",
              "type": "array",
              "items": { }
            },
            "onPremisesSecurityIdentifier": {
              "description": "Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud. Read-only.",
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "description": "true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only. Supports $filter.",
              "type": "boolean"
            },
            "proxyAddresses": {
              "description": "The any operator is required for filter expressions on multi-valued properties. Read-only. Not nullable. Supports $filter.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "renewedDateTime": {
              "format": "date-time",
              "description": "Timestamp of when the group was last renewed. This cannot be modified directly and is only updated via the renew service action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "securityEnabled": {
              "description": "Specifies whether the group is a security group. If the mailEnabled property is also true, the group is a mail-enabled security group; otherwise it is a security group. Must be false for Office 365 groups. Supports $filter.",
              "type": "boolean"
            },
            "unseenCount": {
              "format": "int32",
              "description": "Count of posts that the current  user has not seen since his last visit.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "visibility": {
              "description": "Specifies the visibility of an Office 365 group. The possible values are: Private, Public, HiddenMembership, or empty (which is interpreted as Public).",
              "type": "string"
            },
            "acceptedSenders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "calendar": { },
            "calendarView": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "conversations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.conversation"
              }
            },
            "createdOnBehalfOf": { },
            "drive": { },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "memberOf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "owners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "photo": { },
            "rejectedSenders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "sites": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.site"
              }
            },
            "threads": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.conversationThread"
              }
            },
            "drives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.drive"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "groupLifecyclePolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.groupLifecyclePolicy"
              }
            },
            "onenote": { },
            "photos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.profilePhoto"
              }
            },
            "planner": { },
            "settings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.groupSetting"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "allowExternalSenders": true,
        "autoSubscribeNewMembers": true,
        "classification": "string",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "groupTypes": [
          "string"
        ],
        "isSubscribedByMail": true,
        "mail": "string",
        "mailEnabled": true,
        "mailNickname": "string",
        "onPremisesLastSyncDateTime": "string (timestamp)",
        "onPremisesProvisioningErrors": [
          {
            "@odata.type": "microsoft.graph.onPremisesProvisioningError"
          }
        ],
        "onPremisesSecurityIdentifier": "string",
        "onPremisesSyncEnabled": true,
        "proxyAddresses": [
          "string"
        ],
        "renewedDateTime": "string (timestamp)",
        "securityEnabled": true,
        "unseenCount": "integer",
        "visibility": "string",
        "acceptedSenders": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "calendar": {
          "@odata.type": "microsoft.graph.calendar"
        },
        "calendarView": [
          {
            "@odata.type": "microsoft.graph.event"
          }
        ],
        "conversations": [
          {
            "@odata.type": "microsoft.graph.conversation"
          }
        ],
        "createdOnBehalfOf": {
          "@odata.type": "microsoft.graph.directoryObject"
        },
        "drive": {
          "@odata.type": "microsoft.graph.drive"
        },
        "events": [
          {
            "@odata.type": "microsoft.graph.event"
          }
        ],
        "memberOf": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "members": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "owners": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "photo": {
          "@odata.type": "microsoft.graph.profilePhoto"
        },
        "rejectedSenders": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "sites": [
          {
            "@odata.type": "microsoft.graph.site"
          }
        ],
        "threads": [
          {
            "@odata.type": "microsoft.graph.conversationThread"
          }
        ],
        "drives": [
          {
            "@odata.type": "microsoft.graph.drive"
          }
        ],
        "extensions": [
          {
            "@odata.type": "microsoft.graph.extension"
          }
        ],
        "groupLifecyclePolicies": [
          {
            "@odata.type": "microsoft.graph.groupLifecyclePolicy"
          }
        ],
        "onenote": {
          "@odata.type": "microsoft.graph.onenote"
        },
        "photos": [
          {
            "@odata.type": "microsoft.graph.profilePhoto"
          }
        ],
        "planner": {
          "@odata.type": "microsoft.graph.plannerGroup"
        },
        "settings": [
          {
            "@odata.type": "microsoft.graph.groupSetting"
          }
        ]
      }
    },
    "microsoft.graph.groupLifecyclePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "groupLifecyclePolicy",
          "type": "object",
          "properties": {
            "alternateNotificationEmails": {
              "description": "List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon.",
              "type": "string"
            },
            "groupLifetimeInDays": {
              "format": "int32",
              "description": "Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "managedGroupTypes": {
              "description": "The group type for which the expiration policy applies. Possible values are All, Selected or None.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "alternateNotificationEmails": "string",
        "groupLifetimeInDays": "integer",
        "managedGroupTypes": "string"
      }
    },
    "microsoft.graph.groupSetting": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "groupSetting",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display name of this group of settings, which comes from the associated template.",
              "type": "string"
            },
            "templateId": {
              "description": "Unique identifier for the template used to create this group of settings. Read-only.",
              "type": "string"
            },
            "values": {
              "description": "Collection of name value pairs. Must contain and set all the settings defined in the template.",
              "type": "array",
              "items": { }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "templateId": "string",
        "values": [
          {
            "@odata.type": "microsoft.graph.settingValue"
          }
        ]
      }
    },
    "microsoft.graph.groupSettingTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "groupSettingTemplate",
          "type": "object",
          "properties": {
            "description": {
              "description": "Description of the template.",
              "type": "string"
            },
            "displayName": {
              "description": "Display name of the template.",
              "type": "string"
            },
            "values": {
              "description": "Collection of settingTemplateValues that list the set of available settings, defaults and types that make up this template.",
              "type": "array",
              "items": { }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "description": "string",
        "displayName": "string",
        "values": [
          {
            "@odata.type": "microsoft.graph.settingTemplateValue"
          }
        ]
      }
    },
    "microsoft.graph.inferenceClassification": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "inferenceClassification",
          "type": "object",
          "properties": {
            "overrides": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.inferenceClassificationOverride"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "overrides": [
          {
            "@odata.type": "microsoft.graph.inferenceClassificationOverride"
          }
        ]
      }
    },
    "microsoft.graph.inferenceClassificationOverride": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "inferenceClassificationOverride",
          "type": "object",
          "properties": {
            "classifyAs": {
              "description": "Specifies how incoming messages from a specific sender should always be classified as. The possible values are: focused, other."
            },
            "senderEmailAddress": {
              "description": "The email address information of the sender for whom the override is created."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "classifyAs": {
          "@odata.type": "microsoft.graph.inferenceClassificationType"
        },
        "senderEmailAddress": {
          "@odata.type": "microsoft.graph.emailAddress"
        }
      }
    },
    "microsoft.graph.mobileApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileApp",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The admin provided or imported title of the app.",
              "type": "string"
            },
            "description": {
              "description": "The description of the app.",
              "type": "string"
            },
            "publisher": {
              "description": "The publisher of the app.",
              "type": "string"
            },
            "largeIcon": {
              "description": "The large icon, to be displayed in the app details and used for upload of the icon."
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "The date and time the app was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The date and time the app was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "isFeatured": {
              "description": "The value indicating whether the app is marked as featured by the admin.",
              "type": "boolean"
            },
            "privacyInformationUrl": {
              "description": "The privacy statement Url.",
              "type": "string"
            },
            "informationUrl": {
              "description": "The more information Url.",
              "type": "string"
            },
            "owner": {
              "description": "The owner of the app.",
              "type": "string"
            },
            "developer": {
              "description": "The developer of the app.",
              "type": "string"
            },
            "notes": {
              "description": "Notes for the app.",
              "type": "string"
            },
            "publishingState": {
              "description": "The publishing state for the app. The app cannot be assigned unless the app is published. Possible values are: notPublished, processing, published."
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppCategory"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppAssignment"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ]
      }
    },
    "microsoft.graph.mobileLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "mobileLobApp",
          "type": "object",
          "properties": {
            "committedContentVersion": {
              "description": "The internal committed content version.",
              "type": "string"
            },
            "fileName": {
              "description": "The name of the main Lob application file.",
              "type": "string"
            },
            "size": {
              "format": "int64",
              "description": "The total size, including all uploaded files.",
              "type": "integer"
            },
            "contentVersions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppContent"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "committedContentVersion": "string",
        "fileName": "string",
        "size": "integer",
        "contentVersions": [
          {
            "@odata.type": "microsoft.graph.mobileAppContent"
          }
        ]
      }
    },
    "microsoft.graph.androidLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "androidLobApp",
          "type": "object",
          "properties": {
            "packageId": {
              "description": "The package identifier.",
              "type": "string"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            },
            "versionName": {
              "description": "The version name of Android Line of Business (LoB) app.",
              "type": "string"
            },
            "versionCode": {
              "description": "The version code of Android Line of Business (LoB) app.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "committedContentVersion": "string",
        "fileName": "string",
        "size": "integer",
        "contentVersions": [
          {
            "@odata.type": "microsoft.graph.mobileAppContent"
          }
        ],
        "packageId": "string",
        "minimumSupportedOperatingSystem": {
          "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
        },
        "versionName": "string",
        "versionCode": "string"
      }
    },
    "microsoft.graph.androidStoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "androidStoreApp",
          "type": "object",
          "properties": {
            "packageId": {
              "description": "The package identifier.",
              "type": "string"
            },
            "appStoreUrl": {
              "description": "The Android app store URL.",
              "type": "string"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "packageId": "string",
        "appStoreUrl": "string",
        "minimumSupportedOperatingSystem": {
          "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
        }
      }
    },
    "microsoft.graph.iosLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "iosLobApp",
          "type": "object",
          "properties": {
            "bundleId": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "applicableDeviceType": {
              "description": "The iOS architecture for which this app can run on."
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The expiration time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "versionNumber": {
              "description": "The version number of iOS Line of Business (LoB) app.",
              "type": "string"
            },
            "buildNumber": {
              "description": "The build number of iOS Line of Business (LoB) app.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "committedContentVersion": "string",
        "fileName": "string",
        "size": "integer",
        "contentVersions": [
          {
            "@odata.type": "microsoft.graph.mobileAppContent"
          }
        ],
        "bundleId": "string",
        "applicableDeviceType": {
          "@odata.type": "microsoft.graph.iosDeviceType"
        },
        "minimumSupportedOperatingSystem": {
          "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
        },
        "expirationDateTime": "string (timestamp)",
        "versionNumber": "string",
        "buildNumber": "string"
      }
    },
    "microsoft.graph.managedDeviceMobileAppConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfiguration",
          "type": "object",
          "properties": {
            "targetedMobileApps": {
              "description": "the associated app.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "Admin provided description of the Device Configuration.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "displayName": {
              "description": "Admin provided name of the device configuration.",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Version of the device configuration.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
              }
            },
            "deviceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
              }
            },
            "userStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
              }
            },
            "deviceStatusSummary": { },
            "userStatusSummary": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "targetedMobileApps": [
          "string"
        ],
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
          }
        ],
        "deviceStatusSummary": {
          "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary"
        },
        "userStatusSummary": {
          "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary"
        }
      }
    },
    "microsoft.graph.iosMobileAppConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfiguration"
        },
        {
          "title": "iosMobileAppConfiguration",
          "type": "object",
          "properties": {
            "encodedSettingXml": {
              "format": "base64url",
              "description": "mdm app configuration Base64 binary.",
              "type": "string"
            },
            "settings": {
              "description": "app configuration setting items.",
              "type": "array",
              "items": { }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "targetedMobileApps": [
          "string"
        ],
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus"
          }
        ],
        "deviceStatusSummary": {
          "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary"
        },
        "userStatusSummary": {
          "@odata.type": "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary"
        },
        "encodedSettingXml": "string",
        "settings": [
          {
            "@odata.type": "microsoft.graph.appConfigurationSettingItem"
          }
        ]
      }
    },
    "microsoft.graph.iosStoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "iosStoreApp",
          "type": "object",
          "properties": {
            "bundleId": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "appStoreUrl": {
              "description": "The Apple App Store URL",
              "type": "string"
            },
            "applicableDeviceType": {
              "description": "The iOS architecture for which this app can run on."
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "bundleId": "string",
        "appStoreUrl": "string",
        "applicableDeviceType": {
          "@odata.type": "microsoft.graph.iosDeviceType"
        },
        "minimumSupportedOperatingSystem": {
          "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
        }
      }
    },
    "microsoft.graph.iosVppApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "iosVppApp",
          "type": "object",
          "properties": {
            "usedLicenseCount": {
              "format": "int32",
              "description": "The number of VPP licenses in use.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "totalLicenseCount": {
              "format": "int32",
              "description": "The total number of VPP licenses.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "releaseDateTime": {
              "format": "date-time",
              "description": "The VPP application release date and time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "appStoreUrl": {
              "description": "The store URL.",
              "type": "string"
            },
            "licensingType": {
              "description": "The supported License Type."
            },
            "applicableDeviceType": {
              "description": "The applicable iOS Device Type."
            },
            "vppTokenOrganizationName": {
              "description": "The organization associated with the Apple Volume Purchase Program Token",
              "type": "string"
            },
            "vppTokenAccountType": {
              "description": "The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: business, education. Possible values are: business, education."
            },
            "vppTokenAppleId": {
              "description": "The Apple Id associated with the given Apple Volume Purchase Program Token.",
              "type": "string"
            },
            "bundleId": {
              "description": "The Identity Name.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "usedLicenseCount": "integer",
        "totalLicenseCount": "integer",
        "releaseDateTime": "string (timestamp)",
        "appStoreUrl": "string",
        "licensingType": {
          "@odata.type": "microsoft.graph.vppLicensingType"
        },
        "applicableDeviceType": {
          "@odata.type": "microsoft.graph.iosDeviceType"
        },
        "vppTokenOrganizationName": "string",
        "vppTokenAccountType": {
          "@odata.type": "microsoft.graph.vppTokenAccountType"
        },
        "vppTokenAppleId": "string",
        "bundleId": "string"
      }
    },
    "microsoft.graph.macOSOfficeSuiteApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "macOSOfficeSuiteApp",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ]
      }
    },
    "microsoft.graph.managedApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "managedApp",
          "type": "object",
          "properties": {
            "appAvailability": {
              "description": "The Application's availability. Possible values are: global, lineOfBusiness."
            },
            "version": {
              "description": "The Application's version.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "appAvailability": {
          "@odata.type": "microsoft.graph.managedAppAvailability"
        },
        "version": "string"
      }
    },
    "microsoft.graph.managedMobileLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedApp"
        },
        {
          "title": "managedMobileLobApp",
          "type": "object",
          "properties": {
            "committedContentVersion": {
              "description": "The internal committed content version.",
              "type": "string"
            },
            "fileName": {
              "description": "The name of the main Lob application file.",
              "type": "string"
            },
            "size": {
              "format": "int64",
              "description": "The total size, including all uploaded files.",
              "type": "integer"
            },
            "contentVersions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppContent"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "appAvailability": {
          "@odata.type": "microsoft.graph.managedAppAvailability"
        },
        "version": "string",
        "committedContentVersion": "string",
        "fileName": "string",
        "size": "integer",
        "contentVersions": [
          {
            "@odata.type": "microsoft.graph.mobileAppContent"
          }
        ]
      }
    },
    "microsoft.graph.managedAndroidLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedMobileLobApp"
        },
        {
          "title": "managedAndroidLobApp",
          "type": "object",
          "properties": {
            "packageId": {
              "description": "The package identifier.",
              "type": "string"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            },
            "versionName": {
              "description": "The version name of managed Android Line of Business (LoB) app.",
              "type": "string"
            },
            "versionCode": {
              "description": "The version code of managed Android Line of Business (LoB) app.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "appAvailability": {
          "@odata.type": "microsoft.graph.managedAppAvailability"
        },
        "version": "string",
        "committedContentVersion": "string",
        "fileName": "string",
        "size": "integer",
        "contentVersions": [
          {
            "@odata.type": "microsoft.graph.mobileAppContent"
          }
        ],
        "packageId": "string",
        "minimumSupportedOperatingSystem": {
          "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
        },
        "versionName": "string",
        "versionCode": "string"
      }
    },
    "microsoft.graph.managedAndroidStoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedApp"
        },
        {
          "title": "managedAndroidStoreApp",
          "type": "object",
          "properties": {
            "packageId": {
              "description": "The app's package ID.",
              "type": "string"
            },
            "appStoreUrl": {
              "description": "The Android AppStoreUrl.",
              "type": "string"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum supported operating system."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "appAvailability": {
          "@odata.type": "microsoft.graph.managedAppAvailability"
        },
        "version": "string",
        "packageId": "string",
        "appStoreUrl": "string",
        "minimumSupportedOperatingSystem": {
          "@odata.type": "microsoft.graph.androidMinimumOperatingSystem"
        }
      }
    },
    "microsoft.graph.managedDeviceMobileAppConfigurationAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfigurationAssignment",
          "type": "object",
          "properties": {
            "target": {
              "description": "Assignment target that the T&C policy is assigned to."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "target": {
          "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
        }
      }
    },
    "microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfigurationDeviceStatus",
          "type": "object",
          "properties": {
            "deviceDisplayName": {
              "description": "Device name of the DevicePolicyStatus.",
              "type": "string"
            },
            "userName": {
              "description": "The User Name that is being reported",
              "type": "string"
            },
            "deviceModel": {
              "description": "The device model that is being reported",
              "type": "string"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "deviceDisplayName": "string",
        "userName": "string",
        "deviceModel": "string",
        "complianceGracePeriodExpirationDateTime": "string (timestamp)",
        "status": {
          "@odata.type": "microsoft.graph.complianceStatus"
        },
        "lastReportedDateTime": "string (timestamp)",
        "userPrincipalName": "string"
      }
    },
    "microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfigurationDeviceSummary",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "pendingCount": "integer",
        "notApplicableCount": "integer",
        "successCount": "integer",
        "errorCount": "integer",
        "failedCount": "integer",
        "lastUpdateDateTime": "string (timestamp)",
        "configurationVersion": "integer"
      }
    },
    "microsoft.graph.managedDeviceMobileAppConfigurationUserStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfigurationUserStatus",
          "type": "object",
          "properties": {
            "userDisplayName": {
              "description": "User name of the DevicePolicyStatus.",
              "type": "string"
            },
            "devicesCount": {
              "format": "int32",
              "description": "Devices count for that user.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "status": {
              "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "userDisplayName": "string",
        "devicesCount": "integer",
        "status": {
          "@odata.type": "microsoft.graph.complianceStatus"
        },
        "lastReportedDateTime": "string (timestamp)",
        "userPrincipalName": "string"
      }
    },
    "microsoft.graph.managedDeviceMobileAppConfigurationUserSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceMobileAppConfigurationUserSummary",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "pendingCount": "integer",
        "notApplicableCount": "integer",
        "successCount": "integer",
        "errorCount": "integer",
        "failedCount": "integer",
        "lastUpdateDateTime": "string (timestamp)",
        "configurationVersion": "integer"
      }
    },
    "microsoft.graph.managedIOSLobApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedMobileLobApp"
        },
        {
          "title": "managedIOSLobApp",
          "type": "object",
          "properties": {
            "bundleId": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "applicableDeviceType": {
              "description": "The iOS architecture for which this app can run on."
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The expiration time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "versionNumber": {
              "description": "The version number of managed iOS Line of Business (LoB) app.",
              "type": "string"
            },
            "buildNumber": {
              "description": "The build number of managed iOS Line of Business (LoB) app.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "appAvailability": {
          "@odata.type": "microsoft.graph.managedAppAvailability"
        },
        "version": "string",
        "committedContentVersion": "string",
        "fileName": "string",
        "size": "integer",
        "contentVersions": [
          {
            "@odata.type": "microsoft.graph.mobileAppContent"
          }
        ],
        "bundleId": "string",
        "applicableDeviceType": {
          "@odata.type": "microsoft.graph.iosDeviceType"
        },
        "minimumSupportedOperatingSystem": {
          "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
        },
        "expirationDateTime": "string (timestamp)",
        "versionNumber": "string",
        "buildNumber": "string"
      }
    },
    "microsoft.graph.managedIOSStoreApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedApp"
        },
        {
          "title": "managedIOSStoreApp",
          "type": "object",
          "properties": {
            "bundleId": {
              "description": "The app's Bundle ID.",
              "type": "string"
            },
            "appStoreUrl": {
              "description": "The Apple AppStoreUrl.",
              "type": "string"
            },
            "applicableDeviceType": {
              "description": "The iOS architecture for which this app can run on."
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum supported operating system."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "appAvailability": {
          "@odata.type": "microsoft.graph.managedAppAvailability"
        },
        "version": "string",
        "bundleId": "string",
        "appStoreUrl": "string",
        "applicableDeviceType": {
          "@odata.type": "microsoft.graph.iosDeviceType"
        },
        "minimumSupportedOperatingSystem": {
          "@odata.type": "microsoft.graph.iosMinimumOperatingSystem"
        }
      }
    },
    "microsoft.graph.microsoftStoreForBusinessApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "microsoftStoreForBusinessApp",
          "type": "object",
          "properties": {
            "usedLicenseCount": {
              "format": "int32",
              "description": "The number of Microsoft Store for Business licenses in use.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "totalLicenseCount": {
              "format": "int32",
              "description": "The total number of Microsoft Store for Business licenses.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "productKey": {
              "description": "The app product key",
              "type": "string"
            },
            "licenseType": {
              "description": "The app license type. Possible values are: offline, online."
            },
            "packageIdentityName": {
              "description": "The app package identifier",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "usedLicenseCount": "integer",
        "totalLicenseCount": "integer",
        "productKey": "string",
        "licenseType": {
          "@odata.type": "microsoft.graph.microsoftStoreForBusinessLicenseType"
        },
        "packageIdentityName": "string"
      }
    },
    "microsoft.graph.mobileAppAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppAssignment",
          "type": "object",
          "properties": {
            "intent": {
              "description": "The install intent defined by the admin. Possible values are: available, required, uninstall, availableWithoutEnrollment."
            },
            "target": {
              "description": "The target group assignment defined by the admin."
            },
            "settings": {
              "description": "The settings for target assignment defined by the admin."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "intent": {
          "@odata.type": "microsoft.graph.installIntent"
        },
        "target": {
          "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
        },
        "settings": {
          "@odata.type": "microsoft.graph.mobileAppAssignmentSettings"
        }
      }
    },
    "microsoft.graph.mobileAppCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppCategory",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The name of the app category.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The date and time the mobileAppCategory was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "lastModifiedDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.mobileAppContent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppContent",
          "type": "object",
          "properties": {
            "files": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppContentFile"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "files": [
          {
            "@odata.type": "microsoft.graph.mobileAppContentFile"
          }
        ]
      }
    },
    "microsoft.graph.mobileAppContentFile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileAppContentFile",
          "type": "object",
          "properties": {
            "azureStorageUri": {
              "description": "The Azure Storage URI.",
              "type": "string"
            },
            "isCommitted": {
              "description": "A value indicating whether the file is committed.",
              "type": "boolean"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "The time the file was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "name": {
              "description": "the file name.",
              "type": "string"
            },
            "size": {
              "format": "int64",
              "description": "The size of the file prior to encryption.",
              "type": "integer"
            },
            "sizeEncrypted": {
              "format": "int64",
              "description": "The size of the file after encryption.",
              "type": "integer"
            },
            "azureStorageUriExpirationDateTime": {
              "format": "date-time",
              "description": "The time the Azure storage Uri expires.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "manifest": {
              "format": "base64url",
              "description": "The manifest information.",
              "type": "string"
            },
            "uploadState": {
              "description": "The state of the current upload request. Possible values are: success, transientError, error, unknown, azureStorageUriRequestSuccess, azureStorageUriRequestPending, azureStorageUriRequestFailed, azureStorageUriRequestTimedOut, azureStorageUriRenewalSuccess, azureStorageUriRenewalPending, azureStorageUriRenewalFailed, azureStorageUriRenewalTimedOut, commitFileSuccess, commitFilePending, commitFileFailed, commitFileTimedOut."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "azureStorageUri": "string",
        "isCommitted": true,
        "createdDateTime": "string (timestamp)",
        "name": "string",
        "size": "integer",
        "sizeEncrypted": "integer",
        "azureStorageUriExpirationDateTime": "string (timestamp)",
        "manifest": "string",
        "uploadState": {
          "@odata.type": "microsoft.graph.mobileAppContentFileUploadState"
        }
      }
    },
    "microsoft.graph.webApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileApp"
        },
        {
          "title": "webApp",
          "type": "object",
          "properties": {
            "appUrl": {
              "description": "The web app URL.",
              "type": "string"
            },
            "useManagedBrowser": {
              "description": "Whether or not to use managed browser. This property is only applicable for Android and IOS.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "appUrl": "string",
        "useManagedBrowser": true
      }
    },
    "microsoft.graph.windowsMobileMSI": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "windowsMobileMSI",
          "type": "object",
          "properties": {
            "commandLine": {
              "description": "The command line.",
              "type": "string"
            },
            "productCode": {
              "description": "The product code.",
              "type": "string"
            },
            "productVersion": {
              "description": "The product version of Windows Mobile MSI Line of Business (LoB) app.",
              "type": "string"
            },
            "ignoreVersionDetection": {
              "description": "A boolean to control whether the app's version will be used to detect the app after it is installed on a device. Set this to true for Windows Mobile MSI Line of Business (LoB) apps that use a self update feature.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "committedContentVersion": "string",
        "fileName": "string",
        "size": "integer",
        "contentVersions": [
          {
            "@odata.type": "microsoft.graph.mobileAppContent"
          }
        ],
        "commandLine": "string",
        "productCode": "string",
        "productVersion": "string",
        "ignoreVersionDetection": true
      }
    },
    "microsoft.graph.windowsUniversalAppX": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.mobileLobApp"
        },
        {
          "title": "windowsUniversalAppX",
          "type": "object",
          "properties": {
            "applicableArchitectures": {
              "description": "The Windows architecture(s) for which this app can run on. Possible values are: none, x86, x64, arm, neutral."
            },
            "applicableDeviceTypes": {
              "description": "The Windows device type(s) for which this app can run on. Possible values are: none, desktop, mobile, holographic, team."
            },
            "identityName": {
              "description": "The Identity Name.",
              "type": "string"
            },
            "identityPublisherHash": {
              "description": "The Identity Publisher Hash.",
              "type": "string"
            },
            "identityResourceIdentifier": {
              "description": "The Identity Resource Identifier.",
              "type": "string"
            },
            "isBundle": {
              "description": "Whether or not the app is a bundle.",
              "type": "boolean"
            },
            "minimumSupportedOperatingSystem": {
              "description": "The value for the minimum applicable operating system."
            },
            "identityVersion": {
              "description": "The identity version.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "largeIcon": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "isFeatured": true,
        "privacyInformationUrl": "string",
        "informationUrl": "string",
        "owner": "string",
        "developer": "string",
        "notes": "string",
        "publishingState": {
          "@odata.type": "microsoft.graph.mobileAppPublishingState"
        },
        "categories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.mobileAppAssignment"
          }
        ],
        "committedContentVersion": "string",
        "fileName": "string",
        "size": "integer",
        "contentVersions": [
          {
            "@odata.type": "microsoft.graph.mobileAppContent"
          }
        ],
        "applicableArchitectures": {
          "@odata.type": "microsoft.graph.windowsArchitecture"
        },
        "applicableDeviceTypes": {
          "@odata.type": "microsoft.graph.windowsDeviceType"
        },
        "identityName": "string",
        "identityPublisherHash": "string",
        "identityResourceIdentifier": "string",
        "isBundle": true,
        "minimumSupportedOperatingSystem": {
          "@odata.type": "microsoft.graph.windowsMinimumOperatingSystem"
        },
        "identityVersion": "string"
      }
    },
    "microsoft.graph.auditEvent": {
      "title": "auditEvent",
      "type": "object",
      "properties": {
        "id": {
          "description": "Key of the entity.",
          "type": "string"
        },
        "displayName": {
          "description": "Event display name.",
          "type": "string"
        },
        "componentName": {
          "description": "Component name.",
          "type": "string"
        },
        "actor": {
          "description": "AAD user and application that are associated with the audit event."
        },
        "activity": {
          "description": "Friendly name of the activity.",
          "type": "string"
        },
        "activityDateTime": {
          "format": "date-time",
          "description": "The date time in UTC when the activity was performed.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "activityType": {
          "description": "The type of activity that was being performed.",
          "type": "string"
        },
        "activityOperationType": {
          "description": "The HTTP operation type of the activity.",
          "type": "string"
        },
        "activityResult": {
          "description": "The result of the activity.",
          "type": "string"
        },
        "correlationId": {
          "format": "uuid",
          "description": "The client request Id that is used to correlate activity within the system.",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "resources": {
          "description": "Resources being modified.",
          "type": "array",
          "items": { }
        },
        "category": {
          "description": "Audit category.",
          "type": "string"
        }
      },
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "componentName": "string",
        "actor": {
          "@odata.type": "microsoft.graph.auditActor"
        },
        "activity": "string",
        "activityDateTime": "string (timestamp)",
        "activityType": "string",
        "activityOperationType": "string",
        "activityResult": "string",
        "correlationId": "string",
        "resources": [
          {
            "@odata.type": "microsoft.graph.auditResource"
          }
        ],
        "category": "string"
      }
    },
    "microsoft.graph.deviceInstallState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceInstallState",
          "type": "object",
          "properties": {
            "deviceName": {
              "description": "Device name.",
              "type": "string"
            },
            "deviceId": {
              "description": "Device Id.",
              "type": "string"
            },
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "Last sync date and time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "installState": {
              "description": "The install state of the eBook. Possible values are: notApplicable, installed, failed, notInstalled, uninstallFailed, unknown."
            },
            "errorCode": {
              "description": "The error code for install failures.",
              "type": "string"
            },
            "osVersion": {
              "description": "OS Version.",
              "type": "string"
            },
            "osDescription": {
              "description": "OS Description.",
              "type": "string"
            },
            "userName": {
              "description": "Device User Name.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "deviceName": "string",
        "deviceId": "string",
        "lastSyncDateTime": "string (timestamp)",
        "installState": {
          "@odata.type": "microsoft.graph.installState"
        },
        "errorCode": "string",
        "osVersion": "string",
        "osDescription": "string",
        "userName": "string"
      }
    },
    "microsoft.graph.eBookInstallSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "eBookInstallSummary",
          "type": "object",
          "properties": {
            "installedDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that have successfully installed this book.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that have failed to install this book.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notInstalledDeviceCount": {
              "format": "int32",
              "description": "Number of Devices that does not have this book installed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "installedUserCount": {
              "format": "int32",
              "description": "Number of Users whose devices have all succeeded to install this book.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedUserCount": {
              "format": "int32",
              "description": "Number of Users that have 1 or more device that failed to install this book.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notInstalledUserCount": {
              "format": "int32",
              "description": "Number of Users that did not install this book.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "installedDeviceCount": "integer",
        "failedDeviceCount": "integer",
        "notInstalledDeviceCount": "integer",
        "installedUserCount": "integer",
        "failedUserCount": "integer",
        "notInstalledUserCount": "integer"
      }
    },
    "microsoft.graph.managedEBook": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedEBook",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Name of the eBook.",
              "type": "string"
            },
            "description": {
              "description": "Description.",
              "type": "string"
            },
            "publisher": {
              "description": "Publisher.",
              "type": "string"
            },
            "publishedDateTime": {
              "format": "date-time",
              "description": "The date and time when the eBook was published.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "largeCover": {
              "description": "Book cover."
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "The date and time when the eBook file was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The date and time when the eBook was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "informationUrl": {
              "description": "The more information Url.",
              "type": "string"
            },
            "privacyInformationUrl": {
              "description": "The privacy statement Url.",
              "type": "string"
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedEBookAssignment"
              }
            },
            "installSummary": { },
            "deviceStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceInstallState"
              }
            },
            "userStateSummary": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.userInstallStateSummary"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "publishedDateTime": "string (timestamp)",
        "largeCover": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "informationUrl": "string",
        "privacyInformationUrl": "string",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.managedEBookAssignment"
          }
        ],
        "installSummary": {
          "@odata.type": "microsoft.graph.eBookInstallSummary"
        },
        "deviceStates": [
          {
            "@odata.type": "microsoft.graph.deviceInstallState"
          }
        ],
        "userStateSummary": [
          {
            "@odata.type": "microsoft.graph.userInstallStateSummary"
          }
        ]
      }
    },
    "microsoft.graph.iosVppEBook": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedEBook"
        },
        {
          "title": "iosVppEBook",
          "type": "object",
          "properties": {
            "vppTokenId": {
              "format": "uuid",
              "description": "The Vpp token ID.",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "appleId": {
              "description": "The Apple ID associated with Vpp token.",
              "type": "string"
            },
            "vppOrganizationName": {
              "description": "The Vpp token's organization name.",
              "type": "string"
            },
            "genres": {
              "description": "Genres.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "language": {
              "description": "Language.",
              "type": "string"
            },
            "seller": {
              "description": "Seller.",
              "type": "string"
            },
            "totalLicenseCount": {
              "format": "int32",
              "description": "Total license count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "usedLicenseCount": {
              "format": "int32",
              "description": "Used license count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "publisher": "string",
        "publishedDateTime": "string (timestamp)",
        "largeCover": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "informationUrl": "string",
        "privacyInformationUrl": "string",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.managedEBookAssignment"
          }
        ],
        "installSummary": {
          "@odata.type": "microsoft.graph.eBookInstallSummary"
        },
        "deviceStates": [
          {
            "@odata.type": "microsoft.graph.deviceInstallState"
          }
        ],
        "userStateSummary": [
          {
            "@odata.type": "microsoft.graph.userInstallStateSummary"
          }
        ],
        "vppTokenId": "string",
        "appleId": "string",
        "vppOrganizationName": "string",
        "genres": [
          "string"
        ],
        "language": "string",
        "seller": "string",
        "totalLicenseCount": "integer",
        "usedLicenseCount": "integer"
      }
    },
    "microsoft.graph.managedEBookAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedEBookAssignment",
          "type": "object",
          "properties": {
            "target": {
              "description": "The assignment target for eBook."
            },
            "installIntent": {
              "description": "The install intent for eBook. Possible values are: available, required, uninstall, availableWithoutEnrollment."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "target": {
          "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
        },
        "installIntent": {
          "@odata.type": "microsoft.graph.installIntent"
        }
      }
    },
    "microsoft.graph.iosVppEBookAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedEBookAssignment"
        },
        {
          "title": "iosVppEBookAssignment",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)",
        "target": {
          "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
        },
        "installIntent": {
          "@odata.type": "microsoft.graph.installIntent"
        }
      }
    },
    "microsoft.graph.userInstallStateSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "userInstallStateSummary",
          "type": "object",
          "properties": {
            "userName": {
              "description": "User name.",
              "type": "string"
            },
            "installedDeviceCount": {
              "format": "int32",
              "description": "Installed Device Count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedDeviceCount": {
              "format": "int32",
              "description": "Failed Device Count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notInstalledDeviceCount": {
              "format": "int32",
              "description": "Not installed device count.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "deviceStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceInstallState"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "userName": "string",
        "installedDeviceCount": "integer",
        "failedDeviceCount": "integer",
        "notInstalledDeviceCount": "integer",
        "deviceStates": [
          {
            "@odata.type": "microsoft.graph.deviceInstallState"
          }
        ]
      }
    },
    "microsoft.graph.termsAndConditions": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "termsAndConditions",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "displayName": {
              "description": "Administrator-supplied name for the T&C policy.",
              "type": "string"
            },
            "description": {
              "description": "Administrator-supplied description of the T&C policy.",
              "type": "string"
            },
            "title": {
              "description": "Administrator-supplied title of the terms and conditions. This is shown to the user on prompts to accept the T&C policy.",
              "type": "string"
            },
            "bodyText": {
              "description": "Administrator-supplied body text of the terms and conditions, typically the terms themselves. This is shown to the user on prompts to accept the T&C policy.",
              "type": "string"
            },
            "acceptanceStatement": {
              "description": "Administrator-supplied explanation of the terms and conditions, typically describing what it means to accept the terms and conditions set out in the T&C policy. This is shown to the user on prompts to accept the T&C policy.",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Integer indicating the current version of the terms. Incremented when an administrator makes a change to the terms and wishes to require users to re-accept the modified T&C policy.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.termsAndConditionsAssignment"
              }
            },
            "acceptanceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.termsAndConditionsAcceptanceStatus"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "description": "string",
        "title": "string",
        "bodyText": "string",
        "acceptanceStatement": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.termsAndConditionsAssignment"
          }
        ],
        "acceptanceStatuses": [
          {
            "@odata.type": "microsoft.graph.termsAndConditionsAcceptanceStatus"
          }
        ]
      }
    },
    "microsoft.graph.termsAndConditionsAcceptanceStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "termsAndConditionsAcceptanceStatus",
          "type": "object",
          "properties": {
            "userDisplayName": {
              "description": "Display name of the user whose acceptance the entity represents.",
              "type": "string"
            },
            "acceptedVersion": {
              "format": "int32",
              "description": "Most recent version number of the T&C accepted by the user.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "acceptedDateTime": {
              "format": "date-time",
              "description": "DateTime when the terms were last accepted by the user.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "termsAndConditions": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "userDisplayName": "string",
        "acceptedVersion": "integer",
        "acceptedDateTime": "string (timestamp)",
        "termsAndConditions": {
          "@odata.type": "microsoft.graph.termsAndConditions"
        }
      }
    },
    "microsoft.graph.termsAndConditionsAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "termsAndConditionsAssignment",
          "type": "object",
          "properties": {
            "target": {
              "description": "Assignment target that the T&C policy is assigned to."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "target": {
          "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
        }
      }
    },
    "microsoft.graph.deviceCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCompliancePolicy",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "Admin provided description of the Device Configuration.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "displayName": {
              "description": "Admin provided name of the device configuration.",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Version of the device configuration.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "scheduledActionsForRule": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceComplianceScheduledActionForRule"
              }
            },
            "deviceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceComplianceDeviceStatus"
              }
            },
            "userStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceComplianceUserStatus"
              }
            },
            "deviceStatusOverview": { },
            "userStatusOverview": { },
            "deviceSettingStateSummaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.settingStateDeviceSummary"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicyAssignment"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "scheduledActionsForRule": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
          }
        ]
      }
    },
    "microsoft.graph.androidCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "androidCompliancePolicy",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Require a password to unlock device.",
              "type": "boolean"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum password length. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Type of characters in password. Possible values are: deviceDefault, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, numeric, numericComplex, any."
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires. Valid values 1 to 65535",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "securityPreventInstallAppsFromUnknownSources": {
              "description": "Require that devices disallow installation of apps from unknown sources.",
              "type": "boolean"
            },
            "securityDisableUsbDebugging": {
              "description": "Disable USB debugging on Android devices.",
              "type": "boolean"
            },
            "securityRequireVerifyApps": {
              "description": "Require the Android Verify apps feature is turned on.",
              "type": "boolean"
            },
            "deviceThreatProtectionEnabled": {
              "description": "Require that devices have enabled device threat protection.",
              "type": "boolean"
            },
            "deviceThreatProtectionRequiredSecurityLevel": {
              "description": "Require Mobile Threat Protection minimum risk level to report noncompliance. Possible values are: unavailable, secured, low, medium, high, notSet."
            },
            "securityBlockJailbrokenDevices": {
              "description": "Devices must not be jailbroken or rooted.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum Android version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Android version.",
              "type": "string"
            },
            "minAndroidSecurityPatchLevel": {
              "description": "Minimum Android security patch level.",
              "type": "string"
            },
            "storageRequireEncryption": {
              "description": "Require encryption on Android devices.",
              "type": "boolean"
            },
            "securityRequireSafetyNetAttestationBasicIntegrity": {
              "description": "Require the device to pass the SafetyNet basic integrity check.",
              "type": "boolean"
            },
            "securityRequireSafetyNetAttestationCertifiedDevice": {
              "description": "Require the device to pass the SafetyNet certified device check.",
              "type": "boolean"
            },
            "securityRequireGooglePlayServices": {
              "description": "Require Google Play Services to be installed and enabled on the device.",
              "type": "boolean"
            },
            "securityRequireUpToDateSecurityProviders": {
              "description": "Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date.",
              "type": "boolean"
            },
            "securityRequireCompanyPortalAppIntegrity": {
              "description": "Require the device to pass the Company Portal client app runtime integrity check.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "scheduledActionsForRule": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
          }
        ],
        "passwordRequired": true,
        "passwordMinimumLength": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.androidRequiredPasswordType"
        },
        "passwordMinutesOfInactivityBeforeLock": "integer",
        "passwordExpirationDays": "integer",
        "passwordPreviousPasswordBlockCount": "integer",
        "securityPreventInstallAppsFromUnknownSources": true,
        "securityDisableUsbDebugging": true,
        "securityRequireVerifyApps": true,
        "deviceThreatProtectionEnabled": true,
        "deviceThreatProtectionRequiredSecurityLevel": {
          "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
        },
        "securityBlockJailbrokenDevices": true,
        "osMinimumVersion": "string",
        "osMaximumVersion": "string",
        "minAndroidSecurityPatchLevel": "string",
        "storageRequireEncryption": true,
        "securityRequireSafetyNetAttestationBasicIntegrity": true,
        "securityRequireSafetyNetAttestationCertifiedDevice": true,
        "securityRequireGooglePlayServices": true,
        "securityRequireUpToDateSecurityProviders": true,
        "securityRequireCompanyPortalAppIntegrity": true
      }
    },
    "microsoft.graph.deviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfiguration",
          "type": "object",
          "properties": {
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "DateTime the object was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "description": "Admin provided description of the Device Configuration.",
              "type": "string"
            },
            "displayName": {
              "description": "Admin provided name of the device configuration.",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Version of the device configuration.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceConfigurationAssignment"
              }
            },
            "deviceStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceConfigurationDeviceStatus"
              }
            },
            "userStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceConfigurationUserStatus"
              }
            },
            "deviceStatusOverview": { },
            "userStatusOverview": { },
            "deviceSettingStateSummaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.settingStateDeviceSummary"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ]
      }
    },
    "microsoft.graph.androidCustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidCustomConfiguration",
          "type": "object",
          "properties": {
            "omaSettings": {
              "description": "OMA settings. This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "omaSettings": [
          {
            "@odata.type": "microsoft.graph.omaSetting"
          }
        ]
      }
    },
    "microsoft.graph.androidGeneralDeviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidGeneralDeviceConfiguration",
          "type": "object",
          "properties": {
            "appsBlockClipboardSharing": {
              "description": "Indicates whether or not to block clipboard sharing to copy and paste between applications.",
              "type": "boolean"
            },
            "appsBlockCopyPaste": {
              "description": "Indicates whether or not to block copy and paste within applications.",
              "type": "boolean"
            },
            "appsBlockYouTube": {
              "description": "Indicates whether or not to block the YouTube app.",
              "type": "boolean"
            },
            "bluetoothBlocked": {
              "description": "Indicates whether or not to block Bluetooth.",
              "type": "boolean"
            },
            "cameraBlocked": {
              "description": "Indicates whether or not to block the use of the camera.",
              "type": "boolean"
            },
            "cellularBlockDataRoaming": {
              "description": "Indicates whether or not to block data roaming.",
              "type": "boolean"
            },
            "cellularBlockMessaging": {
              "description": "Indicates whether or not to block SMS/MMS messaging.",
              "type": "boolean"
            },
            "cellularBlockVoiceRoaming": {
              "description": "Indicates whether or not to block voice roaming.",
              "type": "boolean"
            },
            "cellularBlockWiFiTethering": {
              "description": "Indicates whether or not to block syncing Wi-Fi tethering.",
              "type": "boolean"
            },
            "compliantAppsList": {
              "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "compliantAppListType": {
              "description": "Type of list that is in the CompliantAppsList. Possible values are: none, appsInListCompliant, appsNotInListCompliant."
            },
            "diagnosticDataBlockSubmission": {
              "description": "Indicates whether or not to block diagnostic data submission.",
              "type": "boolean"
            },
            "locationServicesBlocked": {
              "description": "Indicates whether or not to block location services.",
              "type": "boolean"
            },
            "googleAccountBlockAutoSync": {
              "description": "Indicates whether or not to block Google account auto sync.",
              "type": "boolean"
            },
            "googlePlayStoreBlocked": {
              "description": "Indicates whether or not to block the Google Play store.",
              "type": "boolean"
            },
            "kioskModeBlockSleepButton": {
              "description": "Indicates whether or not to block the screen sleep button while in Kiosk Mode.",
              "type": "boolean"
            },
            "kioskModeBlockVolumeButtons": {
              "description": "Indicates whether or not to block the volume buttons while in Kiosk Mode.",
              "type": "boolean"
            },
            "kioskModeApps": {
              "description": "A list of apps that will be allowed to run when the device is in Kiosk Mode. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "nfcBlocked": {
              "description": "Indicates whether or not to block Near-Field Communication.",
              "type": "boolean"
            },
            "passwordBlockFingerprintUnlock": {
              "description": "Indicates whether or not to block fingerprint unlock.",
              "type": "boolean"
            },
            "passwordBlockTrustAgents": {
              "description": "Indicates whether or not to block Smart Lock and other trust agents.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires. Valid values 1 to 365",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passwords. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "Number of sign in failures allowed before factory reset. Valid values 4 to 11",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Type of password that is required. Possible values are: deviceDefault, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, numeric, numericComplex, any."
            },
            "passwordRequired": {
              "description": "Indicates whether or not to require a password.",
              "type": "boolean"
            },
            "powerOffBlocked": {
              "description": "Indicates whether or not to block powering off the device.",
              "type": "boolean"
            },
            "factoryResetBlocked": {
              "description": "Indicates whether or not to block user performing a factory reset.",
              "type": "boolean"
            },
            "screenCaptureBlocked": {
              "description": "Indicates whether or not to block screenshots.",
              "type": "boolean"
            },
            "deviceSharingAllowed": {
              "description": "Indicates whether or not to allow device sharing mode.",
              "type": "boolean"
            },
            "storageBlockGoogleBackup": {
              "description": "Indicates whether or not to block Google Backup.",
              "type": "boolean"
            },
            "storageBlockRemovableStorage": {
              "description": "Indicates whether or not to block removable storage usage.",
              "type": "boolean"
            },
            "storageRequireDeviceEncryption": {
              "description": "Indicates whether or not to require device encryption.",
              "type": "boolean"
            },
            "storageRequireRemovableStorageEncryption": {
              "description": "Indicates whether or not to require removable storage encryption.",
              "type": "boolean"
            },
            "voiceAssistantBlocked": {
              "description": "Indicates whether or not to block the use of the Voice Assistant.",
              "type": "boolean"
            },
            "voiceDialingBlocked": {
              "description": "Indicates whether or not to block voice dialing.",
              "type": "boolean"
            },
            "webBrowserBlockPopups": {
              "description": "Indicates whether or not to block popups within the web browser.",
              "type": "boolean"
            },
            "webBrowserBlockAutofill": {
              "description": "Indicates whether or not to block the web browser's auto fill feature.",
              "type": "boolean"
            },
            "webBrowserBlockJavaScript": {
              "description": "Indicates whether or not to block JavaScript within the web browser.",
              "type": "boolean"
            },
            "webBrowserBlocked": {
              "description": "Indicates whether or not to block the web browser.",
              "type": "boolean"
            },
            "webBrowserCookieSettings": {
              "description": "Cookie settings within the web browser. Possible values are: browserDefault, blockAlways, allowCurrentWebSite, allowFromWebsitesVisited, allowAlways."
            },
            "wiFiBlocked": {
              "description": "Indicates whether or not to block syncing Wi-Fi.",
              "type": "boolean"
            },
            "appsInstallAllowList": {
              "description": "List of apps which can be installed on the KNOX device. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "appsLaunchBlockList": {
              "description": "List of apps which are blocked from being launched on the KNOX device. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "appsHideList": {
              "description": "List of apps to be hidden on the KNOX device. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "securityRequireVerifyApps": {
              "description": "Require the Android Verify apps feature is turned on.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "appsBlockClipboardSharing": true,
        "appsBlockCopyPaste": true,
        "appsBlockYouTube": true,
        "bluetoothBlocked": true,
        "cameraBlocked": true,
        "cellularBlockDataRoaming": true,
        "cellularBlockMessaging": true,
        "cellularBlockVoiceRoaming": true,
        "cellularBlockWiFiTethering": true,
        "compliantAppsList": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "compliantAppListType": {
          "@odata.type": "microsoft.graph.appListType"
        },
        "diagnosticDataBlockSubmission": true,
        "locationServicesBlocked": true,
        "googleAccountBlockAutoSync": true,
        "googlePlayStoreBlocked": true,
        "kioskModeBlockSleepButton": true,
        "kioskModeBlockVolumeButtons": true,
        "kioskModeApps": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "nfcBlocked": true,
        "passwordBlockFingerprintUnlock": true,
        "passwordBlockTrustAgents": true,
        "passwordExpirationDays": "integer",
        "passwordMinimumLength": "integer",
        "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
        "passwordPreviousPasswordBlockCount": "integer",
        "passwordSignInFailureCountBeforeFactoryReset": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.androidRequiredPasswordType"
        },
        "passwordRequired": true,
        "powerOffBlocked": true,
        "factoryResetBlocked": true,
        "screenCaptureBlocked": true,
        "deviceSharingAllowed": true,
        "storageBlockGoogleBackup": true,
        "storageBlockRemovableStorage": true,
        "storageRequireDeviceEncryption": true,
        "storageRequireRemovableStorageEncryption": true,
        "voiceAssistantBlocked": true,
        "voiceDialingBlocked": true,
        "webBrowserBlockPopups": true,
        "webBrowserBlockAutofill": true,
        "webBrowserBlockJavaScript": true,
        "webBrowserBlocked": true,
        "webBrowserCookieSettings": {
          "@odata.type": "microsoft.graph.webBrowserCookieSettings"
        },
        "wiFiBlocked": true,
        "appsInstallAllowList": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "appsLaunchBlockList": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "appsHideList": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "securityRequireVerifyApps": true
      }
    },
    "microsoft.graph.androidWorkProfileCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "androidWorkProfileCompliancePolicy",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Require a password to unlock device.",
              "type": "boolean"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum password length. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Type of characters in password. Possible values are: deviceDefault, alphabetic, alphanumeric, alphanumericWithSymbols, lowSecurityBiometric, numeric, numericComplex, any."
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires. Valid values 1 to 365",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "securityPreventInstallAppsFromUnknownSources": {
              "description": "Require that devices disallow installation of apps from unknown sources.",
              "type": "boolean"
            },
            "securityDisableUsbDebugging": {
              "description": "Disable USB debugging on Android devices.",
              "type": "boolean"
            },
            "securityRequireVerifyApps": {
              "description": "Require the Android Verify apps feature is turned on.",
              "type": "boolean"
            },
            "deviceThreatProtectionEnabled": {
              "description": "Require that devices have enabled device threat protection.",
              "type": "boolean"
            },
            "deviceThreatProtectionRequiredSecurityLevel": {
              "description": "Require Mobile Threat Protection minimum risk level to report noncompliance. Possible values are: unavailable, secured, low, medium, high, notSet."
            },
            "securityBlockJailbrokenDevices": {
              "description": "Devices must not be jailbroken or rooted.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum Android version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Android version.",
              "type": "string"
            },
            "minAndroidSecurityPatchLevel": {
              "description": "Minimum Android security patch level.",
              "type": "string"
            },
            "storageRequireEncryption": {
              "description": "Require encryption on Android devices.",
              "type": "boolean"
            },
            "securityRequireSafetyNetAttestationBasicIntegrity": {
              "description": "Require the device to pass the SafetyNet basic integrity check.",
              "type": "boolean"
            },
            "securityRequireSafetyNetAttestationCertifiedDevice": {
              "description": "Require the device to pass the SafetyNet certified device check.",
              "type": "boolean"
            },
            "securityRequireGooglePlayServices": {
              "description": "Require Google Play Services to be installed and enabled on the device.",
              "type": "boolean"
            },
            "securityRequireUpToDateSecurityProviders": {
              "description": "Require the device to have up to date security providers. The device will require Google Play Services to be enabled and up to date.",
              "type": "boolean"
            },
            "securityRequireCompanyPortalAppIntegrity": {
              "description": "Require the device to pass the Company Portal client app runtime integrity check.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "scheduledActionsForRule": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
          }
        ],
        "passwordRequired": true,
        "passwordMinimumLength": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.androidRequiredPasswordType"
        },
        "passwordMinutesOfInactivityBeforeLock": "integer",
        "passwordExpirationDays": "integer",
        "passwordPreviousPasswordBlockCount": "integer",
        "securityPreventInstallAppsFromUnknownSources": true,
        "securityDisableUsbDebugging": true,
        "securityRequireVerifyApps": true,
        "deviceThreatProtectionEnabled": true,
        "deviceThreatProtectionRequiredSecurityLevel": {
          "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
        },
        "securityBlockJailbrokenDevices": true,
        "osMinimumVersion": "string",
        "osMaximumVersion": "string",
        "minAndroidSecurityPatchLevel": "string",
        "storageRequireEncryption": true,
        "securityRequireSafetyNetAttestationBasicIntegrity": true,
        "securityRequireSafetyNetAttestationCertifiedDevice": true,
        "securityRequireGooglePlayServices": true,
        "securityRequireUpToDateSecurityProviders": true,
        "securityRequireCompanyPortalAppIntegrity": true
      }
    },
    "microsoft.graph.androidWorkProfileCustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidWorkProfileCustomConfiguration",
          "type": "object",
          "properties": {
            "omaSettings": {
              "description": "OMA settings. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "omaSettings": [
          {
            "@odata.type": "microsoft.graph.omaSetting"
          }
        ]
      }
    },
    "microsoft.graph.androidWorkProfileGeneralDeviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "androidWorkProfileGeneralDeviceConfiguration",
          "type": "object",
          "properties": {
            "passwordBlockFingerprintUnlock": {
              "description": "Indicates whether or not to block fingerprint unlock.",
              "type": "boolean"
            },
            "passwordBlockTrustAgents": {
              "description": "Indicates whether or not to block Smart Lock and other trust agents.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires. Valid values 1 to 365",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passwords. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "Number of sign in failures allowed before factory reset. Valid values 4 to 11",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Type of password that is required. Possible values are: deviceDefault, lowSecurityBiometric, required, atLeastNumeric, numericComplex, atLeastAlphabetic, atLeastAlphanumeric, alphanumericWithSymbols."
            },
            "workProfileDataSharingType": {
              "description": "Type of data sharing that is allowed. Possible values are: deviceDefault, preventAny, allowPersonalToWork, noRestrictions."
            },
            "workProfileBlockNotificationsWhileDeviceLocked": {
              "description": "Indicates whether or not to block notifications while device locked.",
              "type": "boolean"
            },
            "workProfileBlockAddingAccounts": {
              "description": "Block users from adding/removing accounts in work profile.",
              "type": "boolean"
            },
            "workProfileBluetoothEnableContactSharing": {
              "description": "Allow bluetooth devices to access enterprise contacts.",
              "type": "boolean"
            },
            "workProfileBlockScreenCapture": {
              "description": "Block screen capture in work profile.",
              "type": "boolean"
            },
            "workProfileBlockCrossProfileCallerId": {
              "description": "Block display work profile caller ID in personal profile.",
              "type": "boolean"
            },
            "workProfileBlockCamera": {
              "description": "Block work profile camera.",
              "type": "boolean"
            },
            "workProfileBlockCrossProfileContactsSearch": {
              "description": "Block work profile contacts availability in personal profile.",
              "type": "boolean"
            },
            "workProfileBlockCrossProfileCopyPaste": {
              "description": "Boolean that indicates if the setting disallow cross profile copy/paste is enabled.",
              "type": "boolean"
            },
            "workProfileDefaultAppPermissionPolicy": {
              "description": "Type of password that is required. Possible values are: deviceDefault, prompt, autoGrant, autoDeny."
            },
            "workProfilePasswordBlockFingerprintUnlock": {
              "description": "Indicates whether or not to block fingerprint unlock for work profile.",
              "type": "boolean"
            },
            "workProfilePasswordBlockTrustAgents": {
              "description": "Indicates whether or not to block Smart Lock and other trust agents for work profile.",
              "type": "boolean"
            },
            "workProfilePasswordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the work profile password expires. Valid values 1 to 365",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of work profile password. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordMinNumericCharacters": {
              "format": "int32",
              "description": "Minimum # of numeric characters required in work profile password. Valid values 1 to 10",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordMinNonLetterCharacters": {
              "format": "int32",
              "description": "Minimum # of non-letter characters required in work profile password. Valid values 1 to 10",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordMinLetterCharacters": {
              "format": "int32",
              "description": "Minimum # of letter characters required in work profile password. Valid values 1 to 10",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordMinLowerCaseCharacters": {
              "format": "int32",
              "description": "Minimum # of lower-case characters required in work profile password. Valid values 1 to 10",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordMinUpperCaseCharacters": {
              "format": "int32",
              "description": "Minimum # of upper-case characters required in work profile password. Valid values 1 to 10",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordMinSymbolCharacters": {
              "format": "int32",
              "description": "Minimum # of symbols required in work profile password. Valid values 1 to 10",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous work profile passwords to block. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "Number of sign in failures allowed before work profile is removed and all corporate data deleted. Valid values 4 to 11",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "workProfilePasswordRequiredType": {
              "description": "Type of work profile password that is required. Possible values are: deviceDefault, lowSecurityBiometric, required, atLeastNumeric, numericComplex, atLeastAlphabetic, atLeastAlphanumeric, alphanumericWithSymbols."
            },
            "workProfileRequirePassword": {
              "description": "Password is required or not for work profile",
              "type": "boolean"
            },
            "securityRequireVerifyApps": {
              "description": "Require the Android Verify apps feature is turned on.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "passwordBlockFingerprintUnlock": true,
        "passwordBlockTrustAgents": true,
        "passwordExpirationDays": "integer",
        "passwordMinimumLength": "integer",
        "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
        "passwordPreviousPasswordBlockCount": "integer",
        "passwordSignInFailureCountBeforeFactoryReset": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.androidWorkProfileRequiredPasswordType"
        },
        "workProfileDataSharingType": {
          "@odata.type": "microsoft.graph.androidWorkProfileCrossProfileDataSharingType"
        },
        "workProfileBlockNotificationsWhileDeviceLocked": true,
        "workProfileBlockAddingAccounts": true,
        "workProfileBluetoothEnableContactSharing": true,
        "workProfileBlockScreenCapture": true,
        "workProfileBlockCrossProfileCallerId": true,
        "workProfileBlockCamera": true,
        "workProfileBlockCrossProfileContactsSearch": true,
        "workProfileBlockCrossProfileCopyPaste": true,
        "workProfileDefaultAppPermissionPolicy": {
          "@odata.type": "microsoft.graph.androidWorkProfileDefaultAppPermissionPolicyType"
        },
        "workProfilePasswordBlockFingerprintUnlock": true,
        "workProfilePasswordBlockTrustAgents": true,
        "workProfilePasswordExpirationDays": "integer",
        "workProfilePasswordMinimumLength": "integer",
        "workProfilePasswordMinNumericCharacters": "integer",
        "workProfilePasswordMinNonLetterCharacters": "integer",
        "workProfilePasswordMinLetterCharacters": "integer",
        "workProfilePasswordMinLowerCaseCharacters": "integer",
        "workProfilePasswordMinUpperCaseCharacters": "integer",
        "workProfilePasswordMinSymbolCharacters": "integer",
        "workProfilePasswordMinutesOfInactivityBeforeScreenTimeout": "integer",
        "workProfilePasswordPreviousPasswordBlockCount": "integer",
        "workProfilePasswordSignInFailureCountBeforeFactoryReset": "integer",
        "workProfilePasswordRequiredType": {
          "@odata.type": "microsoft.graph.androidWorkProfileRequiredPasswordType"
        },
        "workProfileRequirePassword": true,
        "securityRequireVerifyApps": true
      }
    },
    "microsoft.graph.appleDeviceFeaturesConfigurationBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "appleDeviceFeaturesConfigurationBase",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ]
      }
    },
    "microsoft.graph.deviceComplianceActionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceActionItem",
          "type": "object",
          "properties": {
            "gracePeriodHours": {
              "format": "int32",
              "description": "Number of hours to wait till the action will be enforced. Valid values 0 to 8760",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "actionType": {
              "description": "What action to take. Possible values are: noAction, notification, block, retire, wipe, removeResourceAccessProfiles, pushNotification."
            },
            "notificationTemplateId": {
              "description": "What notification Message template to use",
              "type": "string"
            },
            "notificationMessageCCList": {
              "description": "A list of group IDs to speicify who to CC this notification message to.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "gracePeriodHours": "integer",
        "actionType": {
          "@odata.type": "microsoft.graph.deviceComplianceActionType"
        },
        "notificationTemplateId": "string",
        "notificationMessageCCList": [
          "string"
        ]
      }
    },
    "microsoft.graph.deviceComplianceDeviceOverview": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceDeviceOverview",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "pendingCount": "integer",
        "notApplicableCount": "integer",
        "successCount": "integer",
        "errorCount": "integer",
        "failedCount": "integer",
        "lastUpdateDateTime": "string (timestamp)",
        "configurationVersion": "integer"
      }
    },
    "microsoft.graph.deviceComplianceDeviceStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceDeviceStatus",
          "type": "object",
          "properties": {
            "deviceDisplayName": {
              "description": "Device name of the DevicePolicyStatus.",
              "type": "string"
            },
            "userName": {
              "description": "The User Name that is being reported",
              "type": "string"
            },
            "deviceModel": {
              "description": "The device model that is being reported",
              "type": "string"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "deviceDisplayName": "string",
        "userName": "string",
        "deviceModel": "string",
        "complianceGracePeriodExpirationDateTime": "string (timestamp)",
        "status": {
          "@odata.type": "microsoft.graph.complianceStatus"
        },
        "lastReportedDateTime": "string (timestamp)",
        "userPrincipalName": "string"
      }
    },
    "microsoft.graph.deviceCompliancePolicyAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCompliancePolicyAssignment",
          "type": "object",
          "properties": {
            "target": {
              "description": "Target for the compliance policy assignment."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "target": {
          "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
        }
      }
    },
    "microsoft.graph.deviceCompliancePolicyDeviceStateSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCompliancePolicyDeviceStateSummary",
          "type": "object",
          "properties": {
            "inGracePeriodCount": {
              "format": "int32",
              "description": "Number of devices that are in grace period",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "configManagerCount": {
              "format": "int32",
              "description": "Number of devices that have compliance managed by System Center Configuration Manager",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Number of unknown devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Number of compliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Number of remediated devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Number of NonCompliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Number of conflict devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "inGracePeriodCount": "integer",
        "configManagerCount": "integer",
        "unknownDeviceCount": "integer",
        "notApplicableDeviceCount": "integer",
        "compliantDeviceCount": "integer",
        "remediatedDeviceCount": "integer",
        "nonCompliantDeviceCount": "integer",
        "errorDeviceCount": "integer",
        "conflictDeviceCount": "integer"
      }
    },
    "microsoft.graph.deviceCompliancePolicySettingStateSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCompliancePolicySettingStateSummary",
          "type": "object",
          "properties": {
            "setting": {
              "description": "The setting class name and property name.",
              "type": "string"
            },
            "settingName": {
              "description": "Name of the setting.",
              "type": "string"
            },
            "platformType": {
              "description": "Setting platform. Possible values are: android, iOS, macOS, windowsPhone81, windows81AndLater, windows10AndLater, androidWorkProfile, all."
            },
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Number of unknown devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Number of compliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Number of remediated devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Number of NonCompliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Number of conflict devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "deviceComplianceSettingStates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceComplianceSettingState"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "setting": "string",
        "settingName": "string",
        "platformType": {
          "@odata.type": "microsoft.graph.policyPlatformType"
        },
        "unknownDeviceCount": "integer",
        "notApplicableDeviceCount": "integer",
        "compliantDeviceCount": "integer",
        "remediatedDeviceCount": "integer",
        "nonCompliantDeviceCount": "integer",
        "errorDeviceCount": "integer",
        "conflictDeviceCount": "integer",
        "deviceComplianceSettingStates": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceSettingState"
          }
        ]
      }
    },
    "microsoft.graph.deviceComplianceScheduledActionForRule": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceScheduledActionForRule",
          "type": "object",
          "properties": {
            "ruleName": {
              "description": "Name of the rule which this scheduled action applies to.",
              "type": "string"
            },
            "scheduledActionConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceComplianceActionItem"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "ruleName": "string",
        "scheduledActionConfigurations": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceActionItem"
          }
        ]
      }
    },
    "microsoft.graph.deviceComplianceSettingState": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceSettingState",
          "type": "object",
          "properties": {
            "setting": {
              "description": "The setting class name and property name.",
              "type": "string"
            },
            "settingName": {
              "description": "The Setting Name that is being reported",
              "type": "string"
            },
            "deviceId": {
              "description": "The Device Id that is being reported",
              "type": "string"
            },
            "deviceName": {
              "description": "The Device Name that is being reported",
              "type": "string"
            },
            "userId": {
              "description": "The user Id that is being reported",
              "type": "string"
            },
            "userEmail": {
              "description": "The User email address that is being reported",
              "type": "string"
            },
            "userName": {
              "description": "The User Name that is being reported",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "The User PrincipalName that is being reported",
              "type": "string"
            },
            "deviceModel": {
              "description": "The device model that is being reported",
              "type": "string"
            },
            "state": {
              "description": "The compliance state of the setting. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned."
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "setting": "string",
        "settingName": "string",
        "deviceId": "string",
        "deviceName": "string",
        "userId": "string",
        "userEmail": "string",
        "userName": "string",
        "userPrincipalName": "string",
        "deviceModel": "string",
        "state": {
          "@odata.type": "microsoft.graph.complianceStatus"
        },
        "complianceGracePeriodExpirationDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.deviceComplianceUserOverview": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceUserOverview",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "pendingCount": "integer",
        "notApplicableCount": "integer",
        "successCount": "integer",
        "errorCount": "integer",
        "failedCount": "integer",
        "lastUpdateDateTime": "string (timestamp)",
        "configurationVersion": "integer"
      }
    },
    "microsoft.graph.deviceComplianceUserStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceComplianceUserStatus",
          "type": "object",
          "properties": {
            "userDisplayName": {
              "description": "User name of the DevicePolicyStatus.",
              "type": "string"
            },
            "devicesCount": {
              "format": "int32",
              "description": "Devices count for that user.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "status": {
              "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "userDisplayName": "string",
        "devicesCount": "integer",
        "status": {
          "@odata.type": "microsoft.graph.complianceStatus"
        },
        "lastReportedDateTime": "string (timestamp)",
        "userPrincipalName": "string"
      }
    },
    "microsoft.graph.deviceConfigurationAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationAssignment",
          "type": "object",
          "properties": {
            "target": {
              "description": "The assignment target for the device configuration."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "target": {
          "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
        }
      }
    },
    "microsoft.graph.deviceConfigurationDeviceOverview": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationDeviceOverview",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "pendingCount": "integer",
        "notApplicableCount": "integer",
        "successCount": "integer",
        "errorCount": "integer",
        "failedCount": "integer",
        "lastUpdateDateTime": "string (timestamp)",
        "configurationVersion": "integer"
      }
    },
    "microsoft.graph.deviceConfigurationDeviceStateSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationDeviceStateSummary",
          "type": "object",
          "properties": {
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Number of unknown devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of not applicable devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Number of compliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Number of remediated devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Number of NonCompliant devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Number of error devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Number of conflict devices",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "unknownDeviceCount": "integer",
        "notApplicableDeviceCount": "integer",
        "compliantDeviceCount": "integer",
        "remediatedDeviceCount": "integer",
        "nonCompliantDeviceCount": "integer",
        "errorDeviceCount": "integer",
        "conflictDeviceCount": "integer"
      }
    },
    "microsoft.graph.deviceConfigurationDeviceStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationDeviceStatus",
          "type": "object",
          "properties": {
            "deviceDisplayName": {
              "description": "Device name of the DevicePolicyStatus.",
              "type": "string"
            },
            "userName": {
              "description": "The User Name that is being reported",
              "type": "string"
            },
            "deviceModel": {
              "description": "The device model that is being reported",
              "type": "string"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "deviceDisplayName": "string",
        "userName": "string",
        "deviceModel": "string",
        "complianceGracePeriodExpirationDateTime": "string (timestamp)",
        "status": {
          "@odata.type": "microsoft.graph.complianceStatus"
        },
        "lastReportedDateTime": "string (timestamp)",
        "userPrincipalName": "string"
      }
    },
    "microsoft.graph.deviceConfigurationUserOverview": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationUserOverview",
          "type": "object",
          "properties": {
            "pendingCount": {
              "format": "int32",
              "description": "Number of pending Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableCount": {
              "format": "int32",
              "description": "Number of not applicable users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "successCount": {
              "format": "int32",
              "description": "Number of succeeded Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorCount": {
              "format": "int32",
              "description": "Number of error Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "failedCount": {
              "format": "int32",
              "description": "Number of failed Users",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastUpdateDateTime": {
              "format": "date-time",
              "description": "Last update time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationVersion": {
              "format": "int32",
              "description": "Version of the policy for that overview",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "pendingCount": "integer",
        "notApplicableCount": "integer",
        "successCount": "integer",
        "errorCount": "integer",
        "failedCount": "integer",
        "lastUpdateDateTime": "string (timestamp)",
        "configurationVersion": "integer"
      }
    },
    "microsoft.graph.deviceConfigurationUserStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceConfigurationUserStatus",
          "type": "object",
          "properties": {
            "userDisplayName": {
              "description": "User name of the DevicePolicyStatus.",
              "type": "string"
            },
            "devicesCount": {
              "format": "int32",
              "description": "Devices count for that user.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "status": {
              "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "userDisplayName": "string",
        "devicesCount": "integer",
        "status": {
          "@odata.type": "microsoft.graph.complianceStatus"
        },
        "lastReportedDateTime": "string (timestamp)",
        "userPrincipalName": "string"
      }
    },
    "microsoft.graph.editionUpgradeConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "editionUpgradeConfiguration",
          "type": "object",
          "properties": {
            "licenseType": {
              "description": "Edition Upgrade License Type. Possible values are: productKey, licenseFile."
            },
            "targetEdition": {
              "description": "Edition Upgrade Target Edition. Possible values are: windows10Enterprise, windows10EnterpriseN, windows10Education, windows10EducationN, windows10MobileEnterprise, windows10HolographicEnterprise, windows10Professional, windows10ProfessionalN, windows10ProfessionalEducation, windows10ProfessionalEducationN, windows10ProfessionalWorkstation, windows10ProfessionalWorkstationN."
            },
            "license": {
              "description": "Edition Upgrade License File Content.",
              "type": "string"
            },
            "productKey": {
              "description": "Edition Upgrade Product Key.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "licenseType": {
          "@odata.type": "microsoft.graph.editionUpgradeLicenseType"
        },
        "targetEdition": {
          "@odata.type": "microsoft.graph.windows10EditionType"
        },
        "license": "string",
        "productKey": "string"
      }
    },
    "microsoft.graph.iosCertificateProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosCertificateProfile",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ]
      }
    },
    "microsoft.graph.iosCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "iosCompliancePolicy",
          "type": "object",
          "properties": {
            "passcodeBlockSimple": {
              "description": "Indicates whether or not to block simple passcodes.",
              "type": "boolean"
            },
            "passcodeExpirationDays": {
              "format": "int32",
              "description": "Number of days before the passcode expires. Valid values 1 to 65535",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passcode. Valid values 4 to 14",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a passcode is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodePreviousPasscodeBlockCount": {
              "format": "int32",
              "description": "Number of previous passcodes to block. Valid values 1 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeRequiredType": {
              "description": "The required passcode type. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "passcodeRequired": {
              "description": "Indicates whether or not to require a passcode.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum IOS version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum IOS version.",
              "type": "string"
            },
            "securityBlockJailbrokenDevices": {
              "description": "Devices must not be jailbroken or rooted.",
              "type": "boolean"
            },
            "deviceThreatProtectionEnabled": {
              "description": "Require that devices have enabled device threat protection .",
              "type": "boolean"
            },
            "deviceThreatProtectionRequiredSecurityLevel": {
              "description": "Require Mobile Threat Protection minimum risk level to report noncompliance. Possible values are: unavailable, secured, low, medium, high, notSet."
            },
            "managedEmailProfileRequired": {
              "description": "Indicates whether or not to require a managed email profile.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "scheduledActionsForRule": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
          }
        ],
        "passcodeBlockSimple": true,
        "passcodeExpirationDays": "integer",
        "passcodeMinimumLength": "integer",
        "passcodeMinutesOfInactivityBeforeLock": "integer",
        "passcodePreviousPasscodeBlockCount": "integer",
        "passcodeMinimumCharacterSetCount": "integer",
        "passcodeRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "passcodeRequired": true,
        "osMinimumVersion": "string",
        "osMaximumVersion": "string",
        "securityBlockJailbrokenDevices": true,
        "deviceThreatProtectionEnabled": true,
        "deviceThreatProtectionRequiredSecurityLevel": {
          "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
        },
        "managedEmailProfileRequired": true
      }
    },
    "microsoft.graph.iosCustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosCustomConfiguration",
          "type": "object",
          "properties": {
            "payloadName": {
              "description": "Name that is displayed to the user.",
              "type": "string"
            },
            "payloadFileName": {
              "description": "Payload file name (.mobileconfig",
              "type": "string"
            },
            "payload": {
              "format": "base64url",
              "description": "Payload. (UTF8 encoded byte array)",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "payloadName": "string",
        "payloadFileName": "string",
        "payload": "string"
      }
    },
    "microsoft.graph.iosDeviceFeaturesConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.appleDeviceFeaturesConfigurationBase"
        },
        {
          "title": "iosDeviceFeaturesConfiguration",
          "type": "object",
          "properties": {
            "assetTagTemplate": {
              "description": "Asset tag information for the device, displayed on the login window and lock screen.",
              "type": "string"
            },
            "lockScreenFootnote": {
              "description": "A footnote displayed on the login window and lock screen. Available in iOS 9.3.1 and later.",
              "type": "string"
            },
            "homeScreenDockIcons": {
              "description": "A list of app and folders to appear on the Home Screen Dock. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "homeScreenPages": {
              "description": "A list of pages on the Home Screen. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "notificationSettings": {
              "description": "Notification settings for each bundle id. Applicable to devices in supervised mode only (iOS 9.3 and later). This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "assetTagTemplate": "string",
        "lockScreenFootnote": "string",
        "homeScreenDockIcons": [
          {
            "@odata.type": "microsoft.graph.iosHomeScreenItem"
          }
        ],
        "homeScreenPages": [
          {
            "@odata.type": "microsoft.graph.iosHomeScreenPage"
          }
        ],
        "notificationSettings": [
          {
            "@odata.type": "microsoft.graph.iosNotificationSettings"
          }
        ]
      }
    },
    "microsoft.graph.iosGeneralDeviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosGeneralDeviceConfiguration",
          "type": "object",
          "properties": {
            "accountBlockModification": {
              "description": "Indicates whether or not to allow account modification when the device is in supervised mode.",
              "type": "boolean"
            },
            "activationLockAllowWhenSupervised": {
              "description": "Indicates whether or not to allow activation lock when the device is in the supervised mode.",
              "type": "boolean"
            },
            "airDropBlocked": {
              "description": "Indicates whether or not to allow AirDrop when the device is in supervised mode.",
              "type": "boolean"
            },
            "airDropForceUnmanagedDropTarget": {
              "description": "Indicates whether or not to cause AirDrop to be considered an unmanaged drop target (iOS 9.0 and later).",
              "type": "boolean"
            },
            "airPlayForcePairingPasswordForOutgoingRequests": {
              "description": "Indicates whether or not to enforce all devices receiving AirPlay requests from this device to use a pairing password.",
              "type": "boolean"
            },
            "appleWatchBlockPairing": {
              "description": "Indicates whether or not to allow Apple Watch pairing when the device is in supervised mode (iOS 9.0 and later).",
              "type": "boolean"
            },
            "appleWatchForceWristDetection": {
              "description": "Indicates whether or not to force a paired Apple Watch to use Wrist Detection (iOS 8.2 and later).",
              "type": "boolean"
            },
            "appleNewsBlocked": {
              "description": "Indicates whether or not to block the user from using News when the device is in supervised mode (iOS 9.0 and later).",
              "type": "boolean"
            },
            "appsSingleAppModeList": {
              "description": "Gets or sets the list of iOS apps allowed to autonomously enter Single App Mode. Supervised only. iOS 7.0 and later. This collection can contain a maximum of 500 elements.",
              "type": "array",
              "items": { }
            },
            "appsVisibilityList": {
              "description": "List of apps in the visibility list (either visible/launchable apps list or hidden/unlaunchable apps list, controlled by AppsVisibilityListType) (iOS 9.3 and later). This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "appsVisibilityListType": {
              "description": "Type of list that is in the AppsVisibilityList. Possible values are: none, appsInListCompliant, appsNotInListCompliant."
            },
            "appStoreBlockAutomaticDownloads": {
              "description": "Indicates whether or not to block the automatic downloading of apps purchased on other devices when the device is in supervised mode (iOS 9.0 and later).",
              "type": "boolean"
            },
            "appStoreBlocked": {
              "description": "Indicates whether or not to block the user from using the App Store.",
              "type": "boolean"
            },
            "appStoreBlockInAppPurchases": {
              "description": "Indicates whether or not to block the user from making in app purchases.",
              "type": "boolean"
            },
            "appStoreBlockUIAppInstallation": {
              "description": "Indicates whether or not to block the App Store app, not restricting installation through Host apps. Applies to supervised mode only (iOS 9.0 and later).",
              "type": "boolean"
            },
            "appStoreRequirePassword": {
              "description": "Indicates whether or not to require a password when using the app store.",
              "type": "boolean"
            },
            "bluetoothBlockModification": {
              "description": "Indicates whether or not to allow modification of Bluetooth settings when the device is in supervised mode (iOS 10.0 and later).",
              "type": "boolean"
            },
            "cameraBlocked": {
              "description": "Indicates whether or not to block the user from accessing the camera of the device.",
              "type": "boolean"
            },
            "cellularBlockDataRoaming": {
              "description": "Indicates whether or not to block data roaming.",
              "type": "boolean"
            },
            "cellularBlockGlobalBackgroundFetchWhileRoaming": {
              "description": "Indicates whether or not to block global background fetch while roaming.",
              "type": "boolean"
            },
            "cellularBlockPerAppDataModification": {
              "description": "Indicates whether or not to allow changes to cellular app data usage settings when the device is in supervised mode.",
              "type": "boolean"
            },
            "cellularBlockPersonalHotspot": {
              "description": "Indicates whether or not to block Personal Hotspot.",
              "type": "boolean"
            },
            "cellularBlockVoiceRoaming": {
              "description": "Indicates whether or not to block voice roaming.",
              "type": "boolean"
            },
            "certificatesBlockUntrustedTlsCertificates": {
              "description": "Indicates whether or not to block untrusted TLS certificates.",
              "type": "boolean"
            },
            "classroomAppBlockRemoteScreenObservation": {
              "description": "Indicates whether or not to allow remote screen observation by Classroom app when the device is in supervised mode (iOS 9.3 and later).",
              "type": "boolean"
            },
            "classroomAppForceUnpromptedScreenObservation": {
              "description": "Indicates whether or not to automatically give permission to the teacher of a managed course on the Classroom app to view a student's screen without prompting when the device is in supervised mode.",
              "type": "boolean"
            },
            "compliantAppsList": {
              "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "compliantAppListType": {
              "description": "List that is in the AppComplianceList. Possible values are: none, appsInListCompliant, appsNotInListCompliant."
            },
            "configurationProfileBlockChanges": {
              "description": "Indicates whether or not to block the user from installing configuration profiles and certificates interactively when the device is in supervised mode.",
              "type": "boolean"
            },
            "definitionLookupBlocked": {
              "description": "Indicates whether or not to block definition lookup when the device is in supervised mode (iOS 8.1.3 and later ).",
              "type": "boolean"
            },
            "deviceBlockEnableRestrictions": {
              "description": "Indicates whether or not to allow the user to enables restrictions in the device settings when the device is in supervised mode.",
              "type": "boolean"
            },
            "deviceBlockEraseContentAndSettings": {
              "description": "Indicates whether or not to allow the use of the 'Erase all content and settings' option on the device when the device is in supervised mode.",
              "type": "boolean"
            },
            "deviceBlockNameModification": {
              "description": "Indicates whether or not to allow device name modification when the device is in supervised mode (iOS 9.0 and later).",
              "type": "boolean"
            },
            "diagnosticDataBlockSubmission": {
              "description": "Indicates whether or not to block diagnostic data submission.",
              "type": "boolean"
            },
            "diagnosticDataBlockSubmissionModification": {
              "description": "Indicates whether or not to allow diagnostics submission settings modification when the device is in supervised mode (iOS 9.3.2 and later).",
              "type": "boolean"
            },
            "documentsBlockManagedDocumentsInUnmanagedApps": {
              "description": "Indicates whether or not to block the user from viewing managed documents in unmanaged apps.",
              "type": "boolean"
            },
            "documentsBlockUnmanagedDocumentsInManagedApps": {
              "description": "Indicates whether or not to block the user from viewing unmanaged documents in managed apps.",
              "type": "boolean"
            },
            "emailInDomainSuffixes": {
              "description": "An email address lacking a suffix that matches any of these strings will be considered out-of-domain.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "enterpriseAppBlockTrust": {
              "description": "Indicates whether or not to block the user from trusting an enterprise app.",
              "type": "boolean"
            },
            "enterpriseAppBlockTrustModification": {
              "description": "Indicates whether or not to block the user from modifying the enterprise app trust settings.",
              "type": "boolean"
            },
            "faceTimeBlocked": {
              "description": "Indicates whether or not to block the user from using FaceTime.",
              "type": "boolean"
            },
            "findMyFriendsBlocked": {
              "description": "Indicates whether or not to block Find My Friends when the device is in supervised mode.",
              "type": "boolean"
            },
            "gamingBlockGameCenterFriends": {
              "description": "Indicates whether or not to block the user from having friends in Game Center.",
              "type": "boolean"
            },
            "gamingBlockMultiplayer": {
              "description": "Indicates whether or not to block the user from using multiplayer gaming.",
              "type": "boolean"
            },
            "gameCenterBlocked": {
              "description": "Indicates whether or not to block the user from using Game Center when the device is in supervised mode.",
              "type": "boolean"
            },
            "hostPairingBlocked": {
              "description": "indicates whether or not to allow host pairing to control the devices an iOS device can pair with when the iOS device is in supervised mode.",
              "type": "boolean"
            },
            "iBooksStoreBlocked": {
              "description": "Indicates whether or not to block the user from using the iBooks Store when the device is in supervised mode.",
              "type": "boolean"
            },
            "iBooksStoreBlockErotica": {
              "description": "Indicates whether or not to block the user from downloading media from the iBookstore that has been tagged as erotica.",
              "type": "boolean"
            },
            "iCloudBlockActivityContinuation": {
              "description": "Indicates whether or not to block  the the user from continuing work they started on iOS device to another iOS or macOS device.",
              "type": "boolean"
            },
            "iCloudBlockBackup": {
              "description": "Indicates whether or not to block iCloud backup.",
              "type": "boolean"
            },
            "iCloudBlockDocumentSync": {
              "description": "Indicates whether or not to block iCloud document sync.",
              "type": "boolean"
            },
            "iCloudBlockManagedAppsSync": {
              "description": "Indicates whether or not to block Managed Apps Cloud Sync.",
              "type": "boolean"
            },
            "iCloudBlockPhotoLibrary": {
              "description": "Indicates whether or not to block iCloud Photo Library.",
              "type": "boolean"
            },
            "iCloudBlockPhotoStreamSync": {
              "description": "Indicates whether or not to block iCloud Photo Stream Sync.",
              "type": "boolean"
            },
            "iCloudBlockSharedPhotoStream": {
              "description": "Indicates whether or not to block Shared Photo Stream.",
              "type": "boolean"
            },
            "iCloudRequireEncryptedBackup": {
              "description": "Indicates whether or not to require backups to iCloud be encrypted.",
              "type": "boolean"
            },
            "iTunesBlockExplicitContent": {
              "description": "Indicates whether or not to block the user from accessing explicit content in iTunes and the App Store.",
              "type": "boolean"
            },
            "iTunesBlockMusicService": {
              "description": "Indicates whether or not to block Music service and revert Music app to classic mode when the device is in supervised mode (iOS 9.3 and later and macOS 10.12 and later).",
              "type": "boolean"
            },
            "iTunesBlockRadio": {
              "description": "Indicates whether or not to block the user from using iTunes Radio when the device is in supervised mode (iOS 9.3 and later).",
              "type": "boolean"
            },
            "keyboardBlockAutoCorrect": {
              "description": "Indicates whether or not to block keyboard auto-correction when the device is in supervised mode (iOS 8.1.3 and later).",
              "type": "boolean"
            },
            "keyboardBlockDictation": {
              "description": "Indicates whether or not to block the user from using dictation input when the device is in supervised mode.",
              "type": "boolean"
            },
            "keyboardBlockPredictive": {
              "description": "Indicates whether or not to block predictive keyboards when device is in supervised mode (iOS 8.1.3 and later).",
              "type": "boolean"
            },
            "keyboardBlockShortcuts": {
              "description": "Indicates whether or not to block keyboard shortcuts when the device is in supervised mode (iOS 9.0 and later).",
              "type": "boolean"
            },
            "keyboardBlockSpellCheck": {
              "description": "Indicates whether or not to block keyboard spell-checking when the device is in supervised mode (iOS 8.1.3 and later).",
              "type": "boolean"
            },
            "kioskModeAllowAssistiveSpeak": {
              "description": "Indicates whether or not to allow assistive speak while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowAssistiveTouchSettings": {
              "description": "Indicates whether or not to allow access to the Assistive Touch Settings while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowAutoLock": {
              "description": "Indicates whether or not to allow device auto lock while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowColorInversionSettings": {
              "description": "Indicates whether or not to allow access to the Color Inversion Settings while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowRingerSwitch": {
              "description": "Indicates whether or not to allow use of the ringer switch while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowScreenRotation": {
              "description": "Indicates whether or not to allow screen rotation while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowSleepButton": {
              "description": "Indicates whether or not to allow use of the sleep button while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowTouchscreen": {
              "description": "Indicates whether or not to allow use of the touchscreen while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowVoiceOverSettings": {
              "description": "Indicates whether or not to allow access to the voice over settings while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowVolumeButtons": {
              "description": "Indicates whether or not to allow use of the volume buttons while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAllowZoomSettings": {
              "description": "Indicates whether or not to allow access to the zoom settings while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeAppStoreUrl": {
              "description": "URL in the app store to the app to use for kiosk mode. Use if KioskModeManagedAppId is not known.",
              "type": "string"
            },
            "kioskModeBuiltInAppId": {
              "description": "ID for built-in apps to use for kiosk mode. Used when KioskModeManagedAppId and KioskModeAppStoreUrl are not set.",
              "type": "string"
            },
            "kioskModeRequireAssistiveTouch": {
              "description": "Indicates whether or not to require assistive touch while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeRequireColorInversion": {
              "description": "Indicates whether or not to require color inversion while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeRequireMonoAudio": {
              "description": "Indicates whether or not to require mono audio while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeRequireVoiceOver": {
              "description": "Indicates whether or not to require voice over while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeRequireZoom": {
              "description": "Indicates whether or not to require zoom while in kiosk mode.",
              "type": "boolean"
            },
            "kioskModeManagedAppId": {
              "description": "Managed app id of the app to use for kiosk mode. If KioskModeManagedAppId is specified then KioskModeAppStoreUrl will be ignored.",
              "type": "string"
            },
            "lockScreenBlockControlCenter": {
              "description": "Indicates whether or not to block the user from using control center on the lock screen.",
              "type": "boolean"
            },
            "lockScreenBlockNotificationView": {
              "description": "Indicates whether or not to block the user from using the notification view on the lock screen.",
              "type": "boolean"
            },
            "lockScreenBlockPassbook": {
              "description": "Indicates whether or not to block the user from using passbook when the device is locked.",
              "type": "boolean"
            },
            "lockScreenBlockTodayView": {
              "description": "Indicates whether or not to block the user from using the Today View on the lock screen.",
              "type": "boolean"
            },
            "mediaContentRatingAustralia": {
              "description": "Media content rating settings for Australia"
            },
            "mediaContentRatingCanada": {
              "description": "Media content rating settings for Canada"
            },
            "mediaContentRatingFrance": {
              "description": "Media content rating settings for France"
            },
            "mediaContentRatingGermany": {
              "description": "Media content rating settings for Germany"
            },
            "mediaContentRatingIreland": {
              "description": "Media content rating settings for Ireland"
            },
            "mediaContentRatingJapan": {
              "description": "Media content rating settings for Japan"
            },
            "mediaContentRatingNewZealand": {
              "description": "Media content rating settings for New Zealand"
            },
            "mediaContentRatingUnitedKingdom": {
              "description": "Media content rating settings for United Kingdom"
            },
            "mediaContentRatingUnitedStates": {
              "description": "Media content rating settings for United States"
            },
            "networkUsageRules": {
              "description": "List of managed apps and the network rules that applies to them. This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            },
            "mediaContentRatingApps": {
              "description": "Media content rating settings for Apps. Possible values are: allAllowed, allBlocked, agesAbove4, agesAbove9, agesAbove12, agesAbove17."
            },
            "messagesBlocked": {
              "description": "Indicates whether or not to block the user from using the Messages app on the supervised device.",
              "type": "boolean"
            },
            "notificationsBlockSettingsModification": {
              "description": "Indicates whether or not to allow notifications settings modification (iOS 9.3 and later).",
              "type": "boolean"
            },
            "passcodeBlockFingerprintUnlock": {
              "description": "Indicates whether or not to block fingerprint unlock.",
              "type": "boolean"
            },
            "passcodeBlockFingerprintModification": {
              "description": "Block modification of registered Touch ID fingerprints when in supervised mode.",
              "type": "boolean"
            },
            "passcodeBlockModification": {
              "description": "Indicates whether or not to allow passcode modification on the supervised device (iOS 9.0 and later).",
              "type": "boolean"
            },
            "passcodeBlockSimple": {
              "description": "Indicates whether or not to block simple passcodes.",
              "type": "boolean"
            },
            "passcodeExpirationDays": {
              "format": "int32",
              "description": "Number of days before the passcode expires. Valid values 1 to 65535",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passcode. Valid values 4 to 14",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a passcode is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeMinimumCharacterSetCount": {
              "format": "int32",
              "description": "Number of character sets a passcode must contain. Valid values 0 to 4",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodePreviousPasscodeBlockCount": {
              "format": "int32",
              "description": "Number of previous passcodes to block. Valid values 1 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeSignInFailureCountBeforeWipe": {
              "format": "int32",
              "description": "Number of sign in failures allowed before wiping the device. Valid values 4 to 11",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passcodeRequiredType": {
              "description": "Type of passcode that is required. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "passcodeRequired": {
              "description": "Indicates whether or not to require a passcode.",
              "type": "boolean"
            },
            "podcastsBlocked": {
              "description": "Indicates whether or not to block the user from using podcasts on the supervised device (iOS 8.0 and later).",
              "type": "boolean"
            },
            "safariBlockAutofill": {
              "description": "Indicates whether or not to block the user from using Auto fill in Safari.",
              "type": "boolean"
            },
            "safariBlockJavaScript": {
              "description": "Indicates whether or not to block JavaScript in Safari.",
              "type": "boolean"
            },
            "safariBlockPopups": {
              "description": "Indicates whether or not to block popups in Safari.",
              "type": "boolean"
            },
            "safariBlocked": {
              "description": "Indicates whether or not to block the user from using Safari.",
              "type": "boolean"
            },
            "safariCookieSettings": {
              "description": "Cookie settings for Safari. Possible values are: browserDefault, blockAlways, allowCurrentWebSite, allowFromWebsitesVisited, allowAlways."
            },
            "safariManagedDomains": {
              "description": "URLs matching the patterns listed here will be considered managed.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "safariPasswordAutoFillDomains": {
              "description": "Users can save passwords in Safari only from URLs matching the patterns listed here. Applies to devices in supervised mode (iOS 9.3 and later).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "safariRequireFraudWarning": {
              "description": "Indicates whether or not to require fraud warning in Safari.",
              "type": "boolean"
            },
            "screenCaptureBlocked": {
              "description": "Indicates whether or not to block the user from taking Screenshots.",
              "type": "boolean"
            },
            "siriBlocked": {
              "description": "Indicates whether or not to block the user from using Siri.",
              "type": "boolean"
            },
            "siriBlockedWhenLocked": {
              "description": "Indicates whether or not to block the user from using Siri when locked.",
              "type": "boolean"
            },
            "siriBlockUserGeneratedContent": {
              "description": "Indicates whether or not to block Siri from querying user-generated content when used on a supervised device.",
              "type": "boolean"
            },
            "siriRequireProfanityFilter": {
              "description": "Indicates whether or not to prevent Siri from dictating, or speaking profane language on supervised device.",
              "type": "boolean"
            },
            "spotlightBlockInternetResults": {
              "description": "Indicates whether or not to block Spotlight search from returning internet results on supervised device.",
              "type": "boolean"
            },
            "voiceDialingBlocked": {
              "description": "Indicates whether or not to block voice dialing.",
              "type": "boolean"
            },
            "wallpaperBlockModification": {
              "description": "Indicates whether or not to allow wallpaper modification on supervised device (iOS 9.0 and later) .",
              "type": "boolean"
            },
            "wiFiConnectOnlyToConfiguredNetworks": {
              "description": "Indicates whether or not to force the device to use only Wi-Fi networks from configuration profiles when the device is in supervised mode.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "accountBlockModification": true,
        "activationLockAllowWhenSupervised": true,
        "airDropBlocked": true,
        "airDropForceUnmanagedDropTarget": true,
        "airPlayForcePairingPasswordForOutgoingRequests": true,
        "appleWatchBlockPairing": true,
        "appleWatchForceWristDetection": true,
        "appleNewsBlocked": true,
        "appsSingleAppModeList": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "appsVisibilityList": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "appsVisibilityListType": {
          "@odata.type": "microsoft.graph.appListType"
        },
        "appStoreBlockAutomaticDownloads": true,
        "appStoreBlocked": true,
        "appStoreBlockInAppPurchases": true,
        "appStoreBlockUIAppInstallation": true,
        "appStoreRequirePassword": true,
        "bluetoothBlockModification": true,
        "cameraBlocked": true,
        "cellularBlockDataRoaming": true,
        "cellularBlockGlobalBackgroundFetchWhileRoaming": true,
        "cellularBlockPerAppDataModification": true,
        "cellularBlockPersonalHotspot": true,
        "cellularBlockVoiceRoaming": true,
        "certificatesBlockUntrustedTlsCertificates": true,
        "classroomAppBlockRemoteScreenObservation": true,
        "classroomAppForceUnpromptedScreenObservation": true,
        "compliantAppsList": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "compliantAppListType": {
          "@odata.type": "microsoft.graph.appListType"
        },
        "configurationProfileBlockChanges": true,
        "definitionLookupBlocked": true,
        "deviceBlockEnableRestrictions": true,
        "deviceBlockEraseContentAndSettings": true,
        "deviceBlockNameModification": true,
        "diagnosticDataBlockSubmission": true,
        "diagnosticDataBlockSubmissionModification": true,
        "documentsBlockManagedDocumentsInUnmanagedApps": true,
        "documentsBlockUnmanagedDocumentsInManagedApps": true,
        "emailInDomainSuffixes": [
          "string"
        ],
        "enterpriseAppBlockTrust": true,
        "enterpriseAppBlockTrustModification": true,
        "faceTimeBlocked": true,
        "findMyFriendsBlocked": true,
        "gamingBlockGameCenterFriends": true,
        "gamingBlockMultiplayer": true,
        "gameCenterBlocked": true,
        "hostPairingBlocked": true,
        "iBooksStoreBlocked": true,
        "iBooksStoreBlockErotica": true,
        "iCloudBlockActivityContinuation": true,
        "iCloudBlockBackup": true,
        "iCloudBlockDocumentSync": true,
        "iCloudBlockManagedAppsSync": true,
        "iCloudBlockPhotoLibrary": true,
        "iCloudBlockPhotoStreamSync": true,
        "iCloudBlockSharedPhotoStream": true,
        "iCloudRequireEncryptedBackup": true,
        "iTunesBlockExplicitContent": true,
        "iTunesBlockMusicService": true,
        "iTunesBlockRadio": true,
        "keyboardBlockAutoCorrect": true,
        "keyboardBlockDictation": true,
        "keyboardBlockPredictive": true,
        "keyboardBlockShortcuts": true,
        "keyboardBlockSpellCheck": true,
        "kioskModeAllowAssistiveSpeak": true,
        "kioskModeAllowAssistiveTouchSettings": true,
        "kioskModeAllowAutoLock": true,
        "kioskModeAllowColorInversionSettings": true,
        "kioskModeAllowRingerSwitch": true,
        "kioskModeAllowScreenRotation": true,
        "kioskModeAllowSleepButton": true,
        "kioskModeAllowTouchscreen": true,
        "kioskModeAllowVoiceOverSettings": true,
        "kioskModeAllowVolumeButtons": true,
        "kioskModeAllowZoomSettings": true,
        "kioskModeAppStoreUrl": "string",
        "kioskModeBuiltInAppId": "string",
        "kioskModeRequireAssistiveTouch": true,
        "kioskModeRequireColorInversion": true,
        "kioskModeRequireMonoAudio": true,
        "kioskModeRequireVoiceOver": true,
        "kioskModeRequireZoom": true,
        "kioskModeManagedAppId": "string",
        "lockScreenBlockControlCenter": true,
        "lockScreenBlockNotificationView": true,
        "lockScreenBlockPassbook": true,
        "lockScreenBlockTodayView": true,
        "mediaContentRatingAustralia": {
          "@odata.type": "microsoft.graph.mediaContentRatingAustralia"
        },
        "mediaContentRatingCanada": {
          "@odata.type": "microsoft.graph.mediaContentRatingCanada"
        },
        "mediaContentRatingFrance": {
          "@odata.type": "microsoft.graph.mediaContentRatingFrance"
        },
        "mediaContentRatingGermany": {
          "@odata.type": "microsoft.graph.mediaContentRatingGermany"
        },
        "mediaContentRatingIreland": {
          "@odata.type": "microsoft.graph.mediaContentRatingIreland"
        },
        "mediaContentRatingJapan": {
          "@odata.type": "microsoft.graph.mediaContentRatingJapan"
        },
        "mediaContentRatingNewZealand": {
          "@odata.type": "microsoft.graph.mediaContentRatingNewZealand"
        },
        "mediaContentRatingUnitedKingdom": {
          "@odata.type": "microsoft.graph.mediaContentRatingUnitedKingdom"
        },
        "mediaContentRatingUnitedStates": {
          "@odata.type": "microsoft.graph.mediaContentRatingUnitedStates"
        },
        "networkUsageRules": [
          {
            "@odata.type": "microsoft.graph.iosNetworkUsageRule"
          }
        ],
        "mediaContentRatingApps": {
          "@odata.type": "microsoft.graph.ratingAppsType"
        },
        "messagesBlocked": true,
        "notificationsBlockSettingsModification": true,
        "passcodeBlockFingerprintUnlock": true,
        "passcodeBlockFingerprintModification": true,
        "passcodeBlockModification": true,
        "passcodeBlockSimple": true,
        "passcodeExpirationDays": "integer",
        "passcodeMinimumLength": "integer",
        "passcodeMinutesOfInactivityBeforeLock": "integer",
        "passcodeMinutesOfInactivityBeforeScreenTimeout": "integer",
        "passcodeMinimumCharacterSetCount": "integer",
        "passcodePreviousPasscodeBlockCount": "integer",
        "passcodeSignInFailureCountBeforeWipe": "integer",
        "passcodeRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "passcodeRequired": true,
        "podcastsBlocked": true,
        "safariBlockAutofill": true,
        "safariBlockJavaScript": true,
        "safariBlockPopups": true,
        "safariBlocked": true,
        "safariCookieSettings": {
          "@odata.type": "microsoft.graph.webBrowserCookieSettings"
        },
        "safariManagedDomains": [
          "string"
        ],
        "safariPasswordAutoFillDomains": [
          "string"
        ],
        "safariRequireFraudWarning": true,
        "screenCaptureBlocked": true,
        "siriBlocked": true,
        "siriBlockedWhenLocked": true,
        "siriBlockUserGeneratedContent": true,
        "siriRequireProfanityFilter": true,
        "spotlightBlockInternetResults": true,
        "voiceDialingBlocked": true,
        "wallpaperBlockModification": true,
        "wiFiConnectOnlyToConfiguredNetworks": true
      }
    },
    "microsoft.graph.iosUpdateConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "iosUpdateConfiguration",
          "type": "object",
          "properties": {
            "activeHoursStart": {
              "format": "time",
              "description": "Active Hours Start (active hours mean the time window when updates install should not happen)",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "activeHoursEnd": {
              "format": "time",
              "description": "Active Hours End (active hours mean the time window when updates install should not happen)",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "scheduledInstallDays": {
              "description": "Days in week for which active hours are configured. This collection can contain a maximum of 7 elements.",
              "type": "array",
              "items": { }
            },
            "utcTimeOffsetInMinutes": {
              "format": "int32",
              "description": "UTC Time Offset indicated in minutes",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "activeHoursStart": "string (timestamp)",
        "activeHoursEnd": "string (timestamp)",
        "scheduledInstallDays": [
          {
            "@odata.type": "microsoft.graph.dayOfWeek"
          }
        ],
        "utcTimeOffsetInMinutes": "integer"
      }
    },
    "microsoft.graph.iosUpdateDeviceStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "iosUpdateDeviceStatus",
          "type": "object",
          "properties": {
            "installStatus": {
              "description": "The installation status of the policy report. Possible values are: success, available, idle, unknown, downloading, downloadFailed, downloadRequiresComputer, downloadInsufficientSpace, downloadInsufficientPower, downloadInsufficientNetwork, installing, installInsufficientSpace, installInsufficientPower, installPhoneCallInProgress, installFailed, notSupportedOperation, sharedDeviceUserLoggedInError."
            },
            "osVersion": {
              "description": "The device version that is being reported.",
              "type": "string"
            },
            "deviceId": {
              "description": "The device id that is being reported.",
              "type": "string"
            },
            "userId": {
              "description": "The User id that is being reported.",
              "type": "string"
            },
            "deviceDisplayName": {
              "description": "Device name of the DevicePolicyStatus.",
              "type": "string"
            },
            "userName": {
              "description": "The User Name that is being reported",
              "type": "string"
            },
            "deviceModel": {
              "description": "The device model that is being reported",
              "type": "string"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Compliance status of the policy report. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned."
            },
            "lastReportedDateTime": {
              "format": "date-time",
              "description": "Last modified date time of the policy report.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "UserPrincipalName.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "installStatus": {
          "@odata.type": "microsoft.graph.iosUpdatesInstallStatus"
        },
        "osVersion": "string",
        "deviceId": "string",
        "userId": "string",
        "deviceDisplayName": "string",
        "userName": "string",
        "deviceModel": "string",
        "complianceGracePeriodExpirationDateTime": "string (timestamp)",
        "status": {
          "@odata.type": "microsoft.graph.complianceStatus"
        },
        "lastReportedDateTime": "string (timestamp)",
        "userPrincipalName": "string"
      }
    },
    "microsoft.graph.macOSCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "macOSCompliancePolicy",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Whether or not to require a password.",
              "type": "boolean"
            },
            "passwordBlockSimple": {
              "description": "Indicates whether or not to block simple passwords.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires. Valid values 1 to 65535",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of password. Valid values 4 to 14",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block. Valid values 1 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "osMinimumVersion": {
              "description": "Minimum IOS version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum IOS version.",
              "type": "string"
            },
            "systemIntegrityProtectionEnabled": {
              "description": "Require that devices have enabled system integrity protection.",
              "type": "boolean"
            },
            "deviceThreatProtectionEnabled": {
              "description": "Require that devices have enabled device threat protection .",
              "type": "boolean"
            },
            "deviceThreatProtectionRequiredSecurityLevel": {
              "description": "Require Mobile Threat Protection minimum risk level to report noncompliance. Possible values are: unavailable, secured, low, medium, high, notSet."
            },
            "storageRequireEncryption": {
              "description": "Require encryption on Mac OS devices.",
              "type": "boolean"
            },
            "firewallEnabled": {
              "description": "Whether the firewall should be enabled or not.",
              "type": "boolean"
            },
            "firewallBlockAllIncoming": {
              "description": "Corresponds to the 'Block all incoming connections' option.",
              "type": "boolean"
            },
            "firewallEnableStealthMode": {
              "description": "Corresponds to 'Enable stealth mode.'",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "scheduledActionsForRule": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
          }
        ],
        "passwordRequired": true,
        "passwordBlockSimple": true,
        "passwordExpirationDays": "integer",
        "passwordMinimumLength": "integer",
        "passwordMinutesOfInactivityBeforeLock": "integer",
        "passwordPreviousPasswordBlockCount": "integer",
        "passwordMinimumCharacterSetCount": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "osMinimumVersion": "string",
        "osMaximumVersion": "string",
        "systemIntegrityProtectionEnabled": true,
        "deviceThreatProtectionEnabled": true,
        "deviceThreatProtectionRequiredSecurityLevel": {
          "@odata.type": "microsoft.graph.deviceThreatProtectionLevel"
        },
        "storageRequireEncryption": true,
        "firewallEnabled": true,
        "firewallBlockAllIncoming": true,
        "firewallEnableStealthMode": true
      }
    },
    "microsoft.graph.macOSCustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "macOSCustomConfiguration",
          "type": "object",
          "properties": {
            "payloadName": {
              "description": "Name that is displayed to the user.",
              "type": "string"
            },
            "payloadFileName": {
              "description": "Payload file name (.mobileconfig",
              "type": "string"
            },
            "payload": {
              "format": "base64url",
              "description": "Payload. (UTF8 encoded byte array)",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "payloadName": "string",
        "payloadFileName": "string",
        "payload": "string"
      }
    },
    "microsoft.graph.macOSDeviceFeaturesConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.appleDeviceFeaturesConfigurationBase"
        },
        {
          "title": "macOSDeviceFeaturesConfiguration",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ]
      }
    },
    "microsoft.graph.macOSGeneralDeviceConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "macOSGeneralDeviceConfiguration",
          "type": "object",
          "properties": {
            "compliantAppsList": {
              "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "compliantAppListType": {
              "description": "List that is in the CompliantAppsList. Possible values are: none, appsInListCompliant, appsNotInListCompliant."
            },
            "emailInDomainSuffixes": {
              "description": "An email address lacking a suffix that matches any of these strings will be considered out-of-domain.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "passwordBlockSimple": {
              "description": "Block simple passwords.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "Number of character sets a password must contain. Valid values 0 to 4",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passwords.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity required before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity required before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Type of password that is required. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "passwordRequired": {
              "description": "Whether or not to require a password.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "compliantAppsList": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "compliantAppListType": {
          "@odata.type": "microsoft.graph.appListType"
        },
        "emailInDomainSuffixes": [
          "string"
        ],
        "passwordBlockSimple": true,
        "passwordExpirationDays": "integer",
        "passwordMinimumCharacterSetCount": "integer",
        "passwordMinimumLength": "integer",
        "passwordMinutesOfInactivityBeforeLock": "integer",
        "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
        "passwordPreviousPasswordBlockCount": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "passwordRequired": true
      }
    },
    "microsoft.graph.settingSource": {
      "title": "settingSource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Not yet documented",
          "type": "string"
        },
        "displayName": {
          "description": "Not yet documented",
          "type": "string"
        }
      },
      "example": {
        "id": "string (identifier)",
        "displayName": "string"
      }
    },
    "microsoft.graph.settingStateDeviceSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "settingStateDeviceSummary",
          "type": "object",
          "properties": {
            "settingName": {
              "description": "Name of the setting",
              "type": "string"
            },
            "instancePath": {
              "description": "Name of the InstancePath for the setting",
              "type": "string"
            },
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Device Unkown count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Device Not Applicable count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Device Compliant count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Device Compliant count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Device NonCompliant count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Device error count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Device conflict error count for the setting",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "settingName": "string",
        "instancePath": "string",
        "unknownDeviceCount": "integer",
        "notApplicableDeviceCount": "integer",
        "compliantDeviceCount": "integer",
        "remediatedDeviceCount": "integer",
        "nonCompliantDeviceCount": "integer",
        "errorDeviceCount": "integer",
        "conflictDeviceCount": "integer"
      }
    },
    "microsoft.graph.sharedPCConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "sharedPCConfiguration",
          "type": "object",
          "properties": {
            "accountManagerPolicy": {
              "description": "Specifies how accounts are managed on a shared PC. Only applies when disableAccountManager is false."
            },
            "allowedAccounts": {
              "description": "Indicates which type of accounts are allowed to use on a shared PC. Possible values are: guest, domain."
            },
            "allowLocalStorage": {
              "description": "Specifies whether local storage is allowed on a shared PC.",
              "type": "boolean"
            },
            "disableAccountManager": {
              "description": "Disables the account manager for shared PC mode.",
              "type": "boolean"
            },
            "disableEduPolicies": {
              "description": "Specifies whether the default shared PC education environment policies should be disabled. For Windows 10 RS2 and later, this policy will be applied without setting Enabled to true.",
              "type": "boolean"
            },
            "disablePowerPolicies": {
              "description": "Specifies whether the default shared PC power policies should be disabled.",
              "type": "boolean"
            },
            "disableSignInOnResume": {
              "description": "Disables the requirement to sign in whenever the device wakes up from sleep mode.",
              "type": "boolean"
            },
            "enabled": {
              "description": "Enables shared PC mode and applies the shared pc policies.",
              "type": "boolean"
            },
            "idleTimeBeforeSleepInSeconds": {
              "format": "int32",
              "description": "Specifies the time in seconds that a device must sit idle before the PC goes to sleep. Setting this value to 0 prevents the sleep timeout from occurring.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "kioskAppDisplayName": {
              "description": "Specifies the display text for the account shown on the sign-in screen which launches the app specified by SetKioskAppUserModelId. Only applies when KioskAppUserModelId is set.",
              "type": "string"
            },
            "kioskAppUserModelId": {
              "description": "Specifies the application user model ID of the app to use with assigned access.",
              "type": "string"
            },
            "maintenanceStartTime": {
              "format": "time",
              "description": "Specifies the daily start time of maintenance hour.",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "accountManagerPolicy": {
          "@odata.type": "microsoft.graph.sharedPCAccountManagerPolicy"
        },
        "allowedAccounts": {
          "@odata.type": "microsoft.graph.sharedPCAllowedAccountType"
        },
        "allowLocalStorage": true,
        "disableAccountManager": true,
        "disableEduPolicies": true,
        "disablePowerPolicies": true,
        "disableSignInOnResume": true,
        "enabled": true,
        "idleTimeBeforeSleepInSeconds": "integer",
        "kioskAppDisplayName": "string",
        "kioskAppUserModelId": "string",
        "maintenanceStartTime": "string (timestamp)"
      }
    },
    "microsoft.graph.softwareUpdateStatusSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "softwareUpdateStatusSummary",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The name of the policy.",
              "type": "string"
            },
            "compliantDeviceCount": {
              "format": "int32",
              "description": "Number of compliant devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantDeviceCount": {
              "format": "int32",
              "description": "Number of non compliant devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedDeviceCount": {
              "format": "int32",
              "description": "Number of remediated devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorDeviceCount": {
              "format": "int32",
              "description": "Number of devices had error.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unknownDeviceCount": {
              "format": "int32",
              "description": "Number of unknown devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictDeviceCount": {
              "format": "int32",
              "description": "Number of conflict devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableDeviceCount": {
              "format": "int32",
              "description": "Number of not applicable devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "compliantUserCount": {
              "format": "int32",
              "description": "Number of compliant users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "nonCompliantUserCount": {
              "format": "int32",
              "description": "Number of non compliant users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "remediatedUserCount": {
              "format": "int32",
              "description": "Number of remediated users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "errorUserCount": {
              "format": "int32",
              "description": "Number of users had error.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unknownUserCount": {
              "format": "int32",
              "description": "Number of unknown users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "conflictUserCount": {
              "format": "int32",
              "description": "Number of conflict users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "notApplicableUserCount": {
              "format": "int32",
              "description": "Number of not applicable users.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "compliantDeviceCount": "integer",
        "nonCompliantDeviceCount": "integer",
        "remediatedDeviceCount": "integer",
        "errorDeviceCount": "integer",
        "unknownDeviceCount": "integer",
        "conflictDeviceCount": "integer",
        "notApplicableDeviceCount": "integer",
        "compliantUserCount": "integer",
        "nonCompliantUserCount": "integer",
        "remediatedUserCount": "integer",
        "errorUserCount": "integer",
        "unknownUserCount": "integer",
        "conflictUserCount": "integer",
        "notApplicableUserCount": "integer"
      }
    },
    "microsoft.graph.windows10CompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "windows10CompliancePolicy",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Require a password to unlock Windows device.",
              "type": "boolean"
            },
            "passwordBlockSimple": {
              "description": "Indicates whether or not to block simple password.",
              "type": "boolean"
            },
            "passwordRequiredToUnlockFromIdle": {
              "description": "Require a password to unlock an idle device.",
              "type": "boolean"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "The password expiration in days.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "The minimum password length.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "The number of previous passwords to prevent re-use of.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "requireHealthyDeviceReport": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum Windows 10 version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Windows 10 version.",
              "type": "string"
            },
            "mobileOsMinimumVersion": {
              "description": "Minimum Windows Phone version.",
              "type": "string"
            },
            "mobileOsMaximumVersion": {
              "description": "Maximum Windows Phone version.",
              "type": "string"
            },
            "earlyLaunchAntiMalwareDriverEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled.",
              "type": "boolean"
            },
            "bitLockerEnabled": {
              "description": "Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled",
              "type": "boolean"
            },
            "secureBootEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled.",
              "type": "boolean"
            },
            "codeIntegrityEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation.",
              "type": "boolean"
            },
            "storageRequireEncryption": {
              "description": "Require encryption on windows devices.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "scheduledActionsForRule": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
          }
        ],
        "passwordRequired": true,
        "passwordBlockSimple": true,
        "passwordRequiredToUnlockFromIdle": true,
        "passwordMinutesOfInactivityBeforeLock": "integer",
        "passwordExpirationDays": "integer",
        "passwordMinimumLength": "integer",
        "passwordMinimumCharacterSetCount": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "passwordPreviousPasswordBlockCount": "integer",
        "requireHealthyDeviceReport": true,
        "osMinimumVersion": "string",
        "osMaximumVersion": "string",
        "mobileOsMinimumVersion": "string",
        "mobileOsMaximumVersion": "string",
        "earlyLaunchAntiMalwareDriverEnabled": true,
        "bitLockerEnabled": true,
        "secureBootEnabled": true,
        "codeIntegrityEnabled": true,
        "storageRequireEncryption": true
      }
    },
    "microsoft.graph.windows10CustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10CustomConfiguration",
          "type": "object",
          "properties": {
            "omaSettings": {
              "description": "OMA settings. This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "omaSettings": [
          {
            "@odata.type": "microsoft.graph.omaSetting"
          }
        ]
      }
    },
    "microsoft.graph.windows10EndpointProtectionConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10EndpointProtectionConfiguration",
          "type": "object",
          "properties": {
            "firewallBlockStatefulFTP": {
              "description": "Blocks stateful FTP connections to the device",
              "type": "boolean"
            },
            "firewallIdleTimeoutForSecurityAssociationInSeconds": {
              "format": "int32",
              "description": "Configures the idle timeout for security associations, in seconds, from 300 to 3600 inclusive. This is the period after which security associations will expire and be deleted. Valid values 300 to 3600",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "firewallPreSharedKeyEncodingMethod": {
              "description": "Select the preshared key encoding to be used. Possible values are: deviceDefault, none, utF8."
            },
            "firewallIPSecExemptionsAllowNeighborDiscovery": {
              "description": "Configures IPSec exemptions to allow neighbor discovery IPv6 ICMP type-codes",
              "type": "boolean"
            },
            "firewallIPSecExemptionsAllowICMP": {
              "description": "Configures IPSec exemptions to allow ICMP",
              "type": "boolean"
            },
            "firewallIPSecExemptionsAllowRouterDiscovery": {
              "description": "Configures IPSec exemptions to allow router discovery IPv6 ICMP type-codes",
              "type": "boolean"
            },
            "firewallIPSecExemptionsAllowDHCP": {
              "description": "Configures IPSec exemptions to allow both IPv4 and IPv6 DHCP traffic",
              "type": "boolean"
            },
            "firewallCertificateRevocationListCheckMethod": {
              "description": "Specify how the certificate revocation list is to be enforced. Possible values are: deviceDefault, none, attempt, require."
            },
            "firewallMergeKeyingModuleSettings": {
              "description": "If an authentication set is not fully supported by a keying module, direct the module to ignore only unsupported authentication suites rather than the entire set",
              "type": "boolean"
            },
            "firewallPacketQueueingMethod": {
              "description": "Configures how packet queueing should be applied in the tunnel gateway scenario. Possible values are: deviceDefault, disabled, queueInbound, queueOutbound, queueBoth."
            },
            "firewallProfileDomain": {
              "description": "Configures the firewall profile settings for domain networks"
            },
            "firewallProfilePublic": {
              "description": "Configures the firewall profile settings for public networks"
            },
            "firewallProfilePrivate": {
              "description": "Configures the firewall profile settings for private networks"
            },
            "defenderAttackSurfaceReductionExcludedPaths": {
              "description": "List of exe files and folders to be excluded from attack surface reduction rules",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderGuardedFoldersAllowedAppPaths": {
              "description": "List of paths to exe that are allowed to access protected folders",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderAdditionalGuardedFolders": {
              "description": "List of folder paths to be added to the list of protected folders",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderExploitProtectionXml": {
              "format": "base64url",
              "description": "Xml content containing information regarding exploit protection details.",
              "type": "string"
            },
            "defenderExploitProtectionXmlFileName": {
              "description": "Name of the file from which DefenderExploitProtectionXml was obtained.",
              "type": "string"
            },
            "defenderSecurityCenterBlockExploitProtectionOverride": {
              "description": "Indicates whether or not to block user from overriding Exploit Protection settings.",
              "type": "boolean"
            },
            "appLockerApplicationControl": {
              "description": "Enables the Admin to choose what types of app to allow on devices. Possible values are: notConfigured, enforceComponentsAndStoreApps, auditComponentsAndStoreApps, enforceComponentsStoreAppsAndSmartlocker, auditComponentsStoreAppsAndSmartlocker."
            },
            "smartScreenEnableInShell": {
              "description": "Allows IT Admins to configure SmartScreen for Windows.",
              "type": "boolean"
            },
            "smartScreenBlockOverrideForFiles": {
              "description": "Allows IT Admins to control whether users can can ignore SmartScreen warnings and run malicious files.",
              "type": "boolean"
            },
            "applicationGuardEnabled": {
              "description": "Enable Windows Defender Application Guard",
              "type": "boolean"
            },
            "applicationGuardBlockFileTransfer": {
              "description": "Block clipboard to transfer image file, text file or neither of them. Possible values are: notConfigured, blockImageAndTextFile, blockImageFile, blockNone, blockTextFile."
            },
            "applicationGuardBlockNonEnterpriseContent": {
              "description": "Block enterprise sites to load non-enterprise content, such as third party plug-ins",
              "type": "boolean"
            },
            "applicationGuardAllowPersistence": {
              "description": "Allow persisting user generated data inside the App Guard Containter (favorites, cookies, web passwords, etc.)",
              "type": "boolean"
            },
            "applicationGuardForceAuditing": {
              "description": "Force auditing will persist Windows logs and events to meet security/compliance criteria (sample events are user login-logoff, use of privilege rights, software installation, system changes, etc.)",
              "type": "boolean"
            },
            "applicationGuardBlockClipboardSharing": {
              "description": "Block clipboard to share data from Host to Container, or from Container to Host, or both ways, or neither ways. Possible values are: notConfigured, blockBoth, blockHostToContainer, blockContainerToHost, blockNone."
            },
            "applicationGuardAllowPrintToPDF": {
              "description": "Allow printing to PDF from Container",
              "type": "boolean"
            },
            "applicationGuardAllowPrintToXPS": {
              "description": "Allow printing to XPS from Container",
              "type": "boolean"
            },
            "applicationGuardAllowPrintToLocalPrinters": {
              "description": "Allow printing to Local Printers from Container",
              "type": "boolean"
            },
            "applicationGuardAllowPrintToNetworkPrinters": {
              "description": "Allow printing to Network Printers from Container",
              "type": "boolean"
            },
            "bitLockerDisableWarningForOtherDiskEncryption": {
              "description": "Allows the Admin to disable the warning prompt for other disk encryption on the user machines.",
              "type": "boolean"
            },
            "bitLockerEnableStorageCardEncryptionOnMobile": {
              "description": "Allows the admin to require encryption to be turned on using BitLocker. This policy is valid only for a mobile SKU.",
              "type": "boolean"
            },
            "bitLockerEncryptDevice": {
              "description": "Allows the admin to require encryption to be turned on using BitLocker.",
              "type": "boolean"
            },
            "bitLockerRemovableDrivePolicy": {
              "description": "BitLocker Removable Drive Policy."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "firewallBlockStatefulFTP": true,
        "firewallIdleTimeoutForSecurityAssociationInSeconds": "integer",
        "firewallPreSharedKeyEncodingMethod": {
          "@odata.type": "microsoft.graph.firewallPreSharedKeyEncodingMethodType"
        },
        "firewallIPSecExemptionsAllowNeighborDiscovery": true,
        "firewallIPSecExemptionsAllowICMP": true,
        "firewallIPSecExemptionsAllowRouterDiscovery": true,
        "firewallIPSecExemptionsAllowDHCP": true,
        "firewallCertificateRevocationListCheckMethod": {
          "@odata.type": "microsoft.graph.firewallCertificateRevocationListCheckMethodType"
        },
        "firewallMergeKeyingModuleSettings": true,
        "firewallPacketQueueingMethod": {
          "@odata.type": "microsoft.graph.firewallPacketQueueingMethodType"
        },
        "firewallProfileDomain": {
          "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
        },
        "firewallProfilePublic": {
          "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
        },
        "firewallProfilePrivate": {
          "@odata.type": "microsoft.graph.windowsFirewallNetworkProfile"
        },
        "defenderAttackSurfaceReductionExcludedPaths": [
          "string"
        ],
        "defenderGuardedFoldersAllowedAppPaths": [
          "string"
        ],
        "defenderAdditionalGuardedFolders": [
          "string"
        ],
        "defenderExploitProtectionXml": "string",
        "defenderExploitProtectionXmlFileName": "string",
        "defenderSecurityCenterBlockExploitProtectionOverride": true,
        "appLockerApplicationControl": {
          "@odata.type": "microsoft.graph.appLockerApplicationControlType"
        },
        "smartScreenEnableInShell": true,
        "smartScreenBlockOverrideForFiles": true,
        "applicationGuardEnabled": true,
        "applicationGuardBlockFileTransfer": {
          "@odata.type": "microsoft.graph.applicationGuardBlockFileTransferType"
        },
        "applicationGuardBlockNonEnterpriseContent": true,
        "applicationGuardAllowPersistence": true,
        "applicationGuardForceAuditing": true,
        "applicationGuardBlockClipboardSharing": {
          "@odata.type": "microsoft.graph.applicationGuardBlockClipboardSharingType"
        },
        "applicationGuardAllowPrintToPDF": true,
        "applicationGuardAllowPrintToXPS": true,
        "applicationGuardAllowPrintToLocalPrinters": true,
        "applicationGuardAllowPrintToNetworkPrinters": true,
        "bitLockerDisableWarningForOtherDiskEncryption": true,
        "bitLockerEnableStorageCardEncryptionOnMobile": true,
        "bitLockerEncryptDevice": true,
        "bitLockerRemovableDrivePolicy": {
          "@odata.type": "microsoft.graph.bitLockerRemovableDrivePolicy"
        }
      }
    },
    "microsoft.graph.windows10EnterpriseModernAppManagementConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10EnterpriseModernAppManagementConfiguration",
          "type": "object",
          "properties": {
            "uninstallBuiltInApps": {
              "description": "Indicates whether or not to uninstall a fixed list of built-in Windows apps.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "uninstallBuiltInApps": true
      }
    },
    "microsoft.graph.windows10GeneralConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10GeneralConfiguration",
          "type": "object",
          "properties": {
            "enterpriseCloudPrintDiscoveryEndPoint": {
              "description": "Endpoint for discovering cloud printers.",
              "type": "string"
            },
            "enterpriseCloudPrintOAuthAuthority": {
              "description": "Authentication endpoint for acquiring OAuth tokens.",
              "type": "string"
            },
            "enterpriseCloudPrintOAuthClientIdentifier": {
              "description": "GUID of a client application authorized to retrieve OAuth tokens from the OAuth Authority.",
              "type": "string"
            },
            "enterpriseCloudPrintResourceIdentifier": {
              "description": "OAuth resource URI for print service as configured in the Azure portal.",
              "type": "string"
            },
            "enterpriseCloudPrintDiscoveryMaxLimit": {
              "format": "int32",
              "description": "Maximum number of printers that should be queried from a discovery endpoint. This is a mobile only setting. Valid values 1 to 65535",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "enterpriseCloudPrintMopriaDiscoveryResourceIdentifier": {
              "description": "OAuth resource URI for printer discovery service as configured in Azure portal.",
              "type": "string"
            },
            "searchBlockDiacritics": {
              "description": "Specifies if search can use diacritics.",
              "type": "boolean"
            },
            "searchDisableAutoLanguageDetection": {
              "description": "Specifies whether to use automatic language detection when indexing content and properties.",
              "type": "boolean"
            },
            "searchDisableIndexingEncryptedItems": {
              "description": "Indicates whether or not to block indexing of WIP-protected items to prevent them from appearing in search results for Cortana or Explorer.",
              "type": "boolean"
            },
            "searchEnableRemoteQueries": {
              "description": "Indicates whether or not to block remote queries of this computer’s index.",
              "type": "boolean"
            },
            "searchDisableIndexerBackoff": {
              "description": "Indicates whether or not to disable the search indexer backoff feature.",
              "type": "boolean"
            },
            "searchDisableIndexingRemovableDrive": {
              "description": "Indicates whether or not to allow users to add locations on removable drives to libraries and to be indexed.",
              "type": "boolean"
            },
            "searchEnableAutomaticIndexSizeManangement": {
              "description": "Specifies minimum amount of hard drive space on the same drive as the index location before indexing stops.",
              "type": "boolean"
            },
            "diagnosticsDataSubmissionMode": {
              "description": "Gets or sets a value allowing the device to send diagnostic and usage telemetry data, such as Watson. Possible values are: userDefined, none, basic, enhanced, full."
            },
            "oneDriveDisableFileSync": {
              "description": "Gets or sets a value allowing IT admins to prevent apps and features from working with files on OneDrive.",
              "type": "boolean"
            },
            "smartScreenEnableAppInstallControl": {
              "description": "Allows IT Admins to control whether users are allowed to install apps from places other than the Store.",
              "type": "boolean"
            },
            "personalizationDesktopImageUrl": {
              "description": "A http or https Url to a jpg, jpeg or png image that needs to be downloaded and used as the Desktop Image or a file Url to a local image on the file system that needs to used as the Desktop Image.",
              "type": "string"
            },
            "personalizationLockScreenImageUrl": {
              "description": "A http or https Url to a jpg, jpeg or png image that neeeds to be downloaded and used as the Lock Screen Image or a file Url to a local image on the file system that needs to be used as the Lock Screen Image.",
              "type": "string"
            },
            "bluetoothAllowedServices": {
              "description": "Specify a list of allowed Bluetooth services and profiles in hex formatted strings.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bluetoothBlockAdvertising": {
              "description": "Whether or not to Block the user from using bluetooth advertising.",
              "type": "boolean"
            },
            "bluetoothBlockDiscoverableMode": {
              "description": "Whether or not to Block the user from using bluetooth discoverable mode.",
              "type": "boolean"
            },
            "bluetoothBlockPrePairing": {
              "description": "Whether or not to block specific bundled Bluetooth peripherals to automatically pair with the host device.",
              "type": "boolean"
            },
            "edgeBlockAutofill": {
              "description": "Indicates whether or not to block auto fill.",
              "type": "boolean"
            },
            "edgeBlocked": {
              "description": "Indicates whether or not to Block the user from using the Edge browser.",
              "type": "boolean"
            },
            "edgeCookiePolicy": {
              "description": "Indicates which cookies to block in the Edge browser. Possible values are: userDefined, allow, blockThirdParty, blockAll."
            },
            "edgeBlockDeveloperTools": {
              "description": "Indicates whether or not to block developer tools in the Edge browser.",
              "type": "boolean"
            },
            "edgeBlockSendingDoNotTrackHeader": {
              "description": "Indicates whether or not to Block the user from sending the do not track header.",
              "type": "boolean"
            },
            "edgeBlockExtensions": {
              "description": "Indicates whether or not to block extensions in the Edge browser.",
              "type": "boolean"
            },
            "edgeBlockInPrivateBrowsing": {
              "description": "Indicates whether or not to block InPrivate browsing on corporate networks, in the Edge browser.",
              "type": "boolean"
            },
            "edgeBlockJavaScript": {
              "description": "Indicates whether or not to Block the user from using JavaScript.",
              "type": "boolean"
            },
            "edgeBlockPasswordManager": {
              "description": "Indicates whether or not to Block password manager.",
              "type": "boolean"
            },
            "edgeBlockAddressBarDropdown": {
              "description": "Block the address bar dropdown functionality in Microsoft Edge. Disable this settings to minimize network connections from Microsoft Edge to Microsoft services.",
              "type": "boolean"
            },
            "edgeBlockCompatibilityList": {
              "description": "Block Microsoft compatibility list in Microsoft Edge. This list from Microsoft helps Edge properly display sites with known compatibility issues.",
              "type": "boolean"
            },
            "edgeClearBrowsingDataOnExit": {
              "description": "Clear browsing data on exiting Microsoft Edge.",
              "type": "boolean"
            },
            "edgeAllowStartPagesModification": {
              "description": "Allow users to change Start pages on Edge. Use the EdgeHomepageUrls to specify the Start pages that the user would see by default when they open Edge.",
              "type": "boolean"
            },
            "edgeDisableFirstRunPage": {
              "description": "Block the Microsoft web page that opens on the first use of Microsoft Edge. This policy allows enterprises, like those enrolled in zero emissions configurations, to block this page.",
              "type": "boolean"
            },
            "edgeBlockLiveTileDataCollection": {
              "description": "Block the collection of information by Microsoft for live tile creation when users pin a site to Start from Microsoft Edge.",
              "type": "boolean"
            },
            "edgeSyncFavoritesWithInternetExplorer": {
              "description": "Enable favorites sync between Internet Explorer and Microsoft Edge. Additions, deletions, modifications and order changes to favorites are shared between browsers.",
              "type": "boolean"
            },
            "cellularBlockDataWhenRoaming": {
              "description": "Whether or not to Block the user from using data over cellular while roaming.",
              "type": "boolean"
            },
            "cellularBlockVpn": {
              "description": "Whether or not to Block the user from using VPN over cellular.",
              "type": "boolean"
            },
            "cellularBlockVpnWhenRoaming": {
              "description": "Whether or not to Block the user from using VPN when roaming over cellular.",
              "type": "boolean"
            },
            "defenderBlockEndUserAccess": {
              "description": "Whether or not to block end user access to Defender.",
              "type": "boolean"
            },
            "defenderDaysBeforeDeletingQuarantinedMalware": {
              "format": "int32",
              "description": "Number of days before deleting quarantined malware. Valid values 0 to 90",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "defenderDetectedMalwareActions": {
              "description": "Gets or sets Defender’s actions to take on detected Malware per threat level."
            },
            "defenderSystemScanSchedule": {
              "description": "Defender day of the week for the system scan. Possible values are: userDefined, everyday, sunday, monday, tuesday, wednesday, thursday, friday, saturday."
            },
            "defenderFilesAndFoldersToExclude": {
              "description": "Files and folder to exclude from scans and real time protection.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderFileExtensionsToExclude": {
              "description": "File extensions to exclude from scans and real time protection.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderScanMaxCpu": {
              "format": "int32",
              "description": "Max CPU usage percentage during scan. Valid values 0 to 100",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "defenderMonitorFileActivity": {
              "description": "Value for monitoring file activity. Possible values are: userDefined, disable, monitorAllFiles, monitorIncomingFilesOnly, monitorOutgoingFilesOnly."
            },
            "defenderProcessesToExclude": {
              "description": "Processes to exclude from scans and real time protection.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defenderPromptForSampleSubmission": {
              "description": "The configuration for how to prompt user for sample submission. Possible values are: userDefined, alwaysPrompt, promptBeforeSendingPersonalData, neverSendData, sendAllDataWithoutPrompting."
            },
            "defenderRequireBehaviorMonitoring": {
              "description": "Indicates whether or not to require behavior monitoring.",
              "type": "boolean"
            },
            "defenderRequireCloudProtection": {
              "description": "Indicates whether or not to require cloud protection.",
              "type": "boolean"
            },
            "defenderRequireNetworkInspectionSystem": {
              "description": "Indicates whether or not to require network inspection system.",
              "type": "boolean"
            },
            "defenderRequireRealTimeMonitoring": {
              "description": "Indicates whether or not to require real time monitoring.",
              "type": "boolean"
            },
            "defenderScanArchiveFiles": {
              "description": "Indicates whether or not to scan archive files.",
              "type": "boolean"
            },
            "defenderScanDownloads": {
              "description": "Indicates whether or not to scan downloads.",
              "type": "boolean"
            },
            "defenderScanNetworkFiles": {
              "description": "Indicates whether or not to scan files opened from a network folder.",
              "type": "boolean"
            },
            "defenderScanIncomingMail": {
              "description": "Indicates whether or not to scan incoming mail messages.",
              "type": "boolean"
            },
            "defenderScanMappedNetworkDrivesDuringFullScan": {
              "description": "Indicates whether or not to scan mapped network drives during full scan.",
              "type": "boolean"
            },
            "defenderScanRemovableDrivesDuringFullScan": {
              "description": "Indicates whether or not to scan removable drives during full scan.",
              "type": "boolean"
            },
            "defenderScanScriptsLoadedInInternetExplorer": {
              "description": "Indicates whether or not to scan scripts loaded in Internet Explorer browser.",
              "type": "boolean"
            },
            "defenderSignatureUpdateIntervalInHours": {
              "format": "int32",
              "description": "The signature update interval in hours. Specify 0 not to check. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "defenderScanType": {
              "description": "The defender system scan type. Possible values are: userDefined, disabled, quick, full."
            },
            "defenderScheduledScanTime": {
              "format": "time",
              "description": "The defender time for the system scan.",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "defenderScheduledQuickScanTime": {
              "format": "time",
              "description": "The time to perform a daily quick scan.",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "defenderCloudBlockLevel": {
              "description": "Specifies the level of cloud-delivered protection. Possible values are: notConfigured, high, highPlus, zeroTolerance."
            },
            "lockScreenAllowTimeoutConfiguration": {
              "description": "Specify whether to show a user-configurable setting to control the screen timeout while on the lock screen of Windows 10 Mobile devices. If this policy is set to Allow, the value set by lockScreenTimeoutInSeconds is ignored.",
              "type": "boolean"
            },
            "lockScreenBlockActionCenterNotifications": {
              "description": "Indicates whether or not to block action center notifications over lock screen.",
              "type": "boolean"
            },
            "lockScreenBlockCortana": {
              "description": "Indicates whether or not the user can interact with Cortana using speech while the system is locked.",
              "type": "boolean"
            },
            "lockScreenBlockToastNotifications": {
              "description": "Indicates whether to allow toast notifications above the device lock screen.",
              "type": "boolean"
            },
            "lockScreenTimeoutInSeconds": {
              "format": "int32",
              "description": "Set the duration (in seconds) from the screen locking to the screen turning off for Windows 10 Mobile devices. Supported values are 11-1800. Valid values 11 to 1800",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordBlockSimple": {
              "description": "Specify whether PINs or passwords such as '1111' or '1234' are allowed. For Windows 10 desktops, it also controls the use of picture passwords.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "The password expiration in days. Valid values 0 to 730",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "The minimum password length. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "The minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "The number of previous passwords to prevent reuse of. Valid values 0 to 50",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequired": {
              "description": "Indicates whether or not to require the user to have a password.",
              "type": "boolean"
            },
            "passwordRequireWhenResumeFromIdleState": {
              "description": "Indicates whether or not to require a password upon resuming from an idle state.",
              "type": "boolean"
            },
            "passwordRequiredType": {
              "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "passwordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "The number of sign in failures before factory reset. Valid values 0 to 999",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "privacyAdvertisingId": {
              "description": "Enables or disables the use of advertising ID. Added in Windows 10, version 1607. Possible values are: notConfigured, blocked, allowed."
            },
            "privacyAutoAcceptPairingAndConsentPrompts": {
              "description": "Indicates whether or not to allow the automatic acceptance of the pairing and privacy user consent dialog when launching apps.",
              "type": "boolean"
            },
            "privacyBlockInputPersonalization": {
              "description": "Indicates whether or not to block the usage of cloud based speech services for Cortana, Dictation, or Store applications.",
              "type": "boolean"
            },
            "startBlockUnpinningAppsFromTaskbar": {
              "description": "Indicates whether or not to block the user from unpinning apps from taskbar.",
              "type": "boolean"
            },
            "startMenuAppListVisibility": {
              "description": "Setting the value of this collapses the app list, removes the app list entirely, or disables the corresponding toggle in the Settings app. Possible values are: userDefined, collapse, remove, disableSettingsApp."
            },
            "startMenuHideChangeAccountSettings": {
              "description": "Enabling this policy hides the change account setting from appearing in the user tile in the start menu.",
              "type": "boolean"
            },
            "startMenuHideFrequentlyUsedApps": {
              "description": "Enabling this policy hides the most used apps from appearing on the start menu and disables the corresponding toggle in the Settings app.",
              "type": "boolean"
            },
            "startMenuHideHibernate": {
              "description": "Enabling this policy hides hibernate from appearing in the power button in the start menu.",
              "type": "boolean"
            },
            "startMenuHideLock": {
              "description": "Enabling this policy hides lock from appearing in the user tile in the start menu.",
              "type": "boolean"
            },
            "startMenuHidePowerButton": {
              "description": "Enabling this policy hides the power button from appearing in the start menu.",
              "type": "boolean"
            },
            "startMenuHideRecentJumpLists": {
              "description": "Enabling this policy hides recent jump lists from appearing on the start menu/taskbar and disables the corresponding toggle in the Settings app.",
              "type": "boolean"
            },
            "startMenuHideRecentlyAddedApps": {
              "description": "Enabling this policy hides recently added apps from appearing on the start menu and disables the corresponding toggle in the Settings app.",
              "type": "boolean"
            },
            "startMenuHideRestartOptions": {
              "description": "Enabling this policy hides 'Restart/Update and Restart' from appearing in the power button in the start menu.",
              "type": "boolean"
            },
            "startMenuHideShutDown": {
              "description": "Enabling this policy hides shut down/update and shut down from appearing in the power button in the start menu.",
              "type": "boolean"
            },
            "startMenuHideSignOut": {
              "description": "Enabling this policy hides sign out from appearing in the user tile in the start menu.",
              "type": "boolean"
            },
            "startMenuHideSleep": {
              "description": "Enabling this policy hides sleep from appearing in the power button in the start menu.",
              "type": "boolean"
            },
            "startMenuHideSwitchAccount": {
              "description": "Enabling this policy hides switch account from appearing in the user tile in the start menu.",
              "type": "boolean"
            },
            "startMenuHideUserTile": {
              "description": "Enabling this policy hides the user tile from appearing in the start menu.",
              "type": "boolean"
            },
            "startMenuLayoutEdgeAssetsXml": {
              "format": "base64url",
              "description": "This policy setting allows you to import Edge assets to be used with startMenuLayoutXml policy. Start layout can contain secondary tile from Edge app which looks for Edge local asset file. Edge local asset would not exist and cause Edge secondary tile to appear empty in this case. This policy only gets applied when startMenuLayoutXml policy is modified. The value should be a UTF-8 Base64 encoded byte array.",
              "type": "string"
            },
            "startMenuLayoutXml": {
              "format": "base64url",
              "description": "Allows admins to override the default Start menu layout and prevents the user from changing it. The layout is modified by specifying an XML file based on a layout modification schema. XML needs to be in a UTF8 encoded byte array format.",
              "type": "string"
            },
            "startMenuMode": {
              "description": "Allows admins to decide how the Start menu is displayed. Possible values are: userDefined, fullScreen, nonFullScreen."
            },
            "startMenuPinnedFolderDocuments": {
              "description": "Enforces the visibility (Show/Hide) of the Documents folder shortcut on the Start menu. Possible values are: notConfigured, hide, show."
            },
            "startMenuPinnedFolderDownloads": {
              "description": "Enforces the visibility (Show/Hide) of the Downloads folder shortcut on the Start menu. Possible values are: notConfigured, hide, show."
            },
            "startMenuPinnedFolderFileExplorer": {
              "description": "Enforces the visibility (Show/Hide) of the FileExplorer shortcut on the Start menu. Possible values are: notConfigured, hide, show."
            },
            "startMenuPinnedFolderHomeGroup": {
              "description": "Enforces the visibility (Show/Hide) of the HomeGroup folder shortcut on the Start menu. Possible values are: notConfigured, hide, show."
            },
            "startMenuPinnedFolderMusic": {
              "description": "Enforces the visibility (Show/Hide) of the Music folder shortcut on the Start menu. Possible values are: notConfigured, hide, show."
            },
            "startMenuPinnedFolderNetwork": {
              "description": "Enforces the visibility (Show/Hide) of the Network folder shortcut on the Start menu. Possible values are: notConfigured, hide, show."
            },
            "startMenuPinnedFolderPersonalFolder": {
              "description": "Enforces the visibility (Show/Hide) of the PersonalFolder shortcut on the Start menu. Possible values are: notConfigured, hide, show."
            },
            "startMenuPinnedFolderPictures": {
              "description": "Enforces the visibility (Show/Hide) of the Pictures folder shortcut on the Start menu. Possible values are: notConfigured, hide, show."
            },
            "startMenuPinnedFolderSettings": {
              "description": "Enforces the visibility (Show/Hide) of the Settings folder shortcut on the Start menu. Possible values are: notConfigured, hide, show."
            },
            "startMenuPinnedFolderVideos": {
              "description": "Enforces the visibility (Show/Hide) of the Videos folder shortcut on the Start menu. Possible values are: notConfigured, hide, show."
            },
            "settingsBlockSettingsApp": {
              "description": "Indicates whether or not to block access to Settings app.",
              "type": "boolean"
            },
            "settingsBlockSystemPage": {
              "description": "Indicates whether or not to block access to System in Settings app.",
              "type": "boolean"
            },
            "settingsBlockDevicesPage": {
              "description": "Indicates whether or not to block access to Devices in Settings app.",
              "type": "boolean"
            },
            "settingsBlockNetworkInternetPage": {
              "description": "Indicates whether or not to block access to Network & Internet in Settings app.",
              "type": "boolean"
            },
            "settingsBlockPersonalizationPage": {
              "description": "Indicates whether or not to block access to Personalization in Settings app.",
              "type": "boolean"
            },
            "settingsBlockAccountsPage": {
              "description": "Indicates whether or not to block access to Accounts in Settings app.",
              "type": "boolean"
            },
            "settingsBlockTimeLanguagePage": {
              "description": "Indicates whether or not to block access to Time & Language in Settings app.",
              "type": "boolean"
            },
            "settingsBlockEaseOfAccessPage": {
              "description": "Indicates whether or not to block access to Ease of Access in Settings app.",
              "type": "boolean"
            },
            "settingsBlockPrivacyPage": {
              "description": "Indicates whether or not to block access to Privacy in Settings app.",
              "type": "boolean"
            },
            "settingsBlockUpdateSecurityPage": {
              "description": "Indicates whether or not to block access to Update & Security in Settings app.",
              "type": "boolean"
            },
            "settingsBlockAppsPage": {
              "description": "Indicates whether or not to block access to Apps in Settings app.",
              "type": "boolean"
            },
            "settingsBlockGamingPage": {
              "description": "Indicates whether or not to block access to Gaming in Settings app.",
              "type": "boolean"
            },
            "windowsSpotlightBlockConsumerSpecificFeatures": {
              "description": "Allows IT admins to block experiences that are typically for consumers only, such as Start suggestions, Membership notifications, Post-OOBE app install and redirect tiles.",
              "type": "boolean"
            },
            "windowsSpotlightBlocked": {
              "description": "Allows IT admins to turn off all Windows Spotlight features",
              "type": "boolean"
            },
            "windowsSpotlightBlockOnActionCenter": {
              "description": "Block suggestions from Microsoft that show after each OS clean install, upgrade or in an on-going basis to introduce users to what is new or changed",
              "type": "boolean"
            },
            "windowsSpotlightBlockTailoredExperiences": {
              "description": "Block personalized content in Windows spotlight based on user’s device usage.",
              "type": "boolean"
            },
            "windowsSpotlightBlockThirdPartyNotifications": {
              "description": "Block third party content delivered via Windows Spotlight",
              "type": "boolean"
            },
            "windowsSpotlightBlockWelcomeExperience": {
              "description": "Block Windows Spotlight Windows welcome experience",
              "type": "boolean"
            },
            "windowsSpotlightBlockWindowsTips": {
              "description": "Allows IT admins to turn off the popup of Windows Tips.",
              "type": "boolean"
            },
            "windowsSpotlightConfigureOnLockScreen": {
              "description": "Specifies the type of Spotlight. Possible values are: notConfigured, disabled, enabled."
            },
            "networkProxyApplySettingsDeviceWide": {
              "description": "If set, proxy settings will be applied to all processes and accounts in the device. Otherwise, it will be applied to the user account that’s enrolled into MDM.",
              "type": "boolean"
            },
            "networkProxyDisableAutoDetect": {
              "description": "Disable automatic detection of settings. If enabled, the system will try to find the path to a proxy auto-config (PAC) script.",
              "type": "boolean"
            },
            "networkProxyAutomaticConfigurationUrl": {
              "description": "Address to the proxy auto-config (PAC) script you want to use.",
              "type": "string"
            },
            "networkProxyServer": {
              "description": "Specifies manual proxy server settings."
            },
            "accountsBlockAddingNonMicrosoftAccountEmail": {
              "description": "Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account.",
              "type": "boolean"
            },
            "antiTheftModeBlocked": {
              "description": "Indicates whether or not to block the user from selecting an AntiTheft mode preference (Windows 10 Mobile only).",
              "type": "boolean"
            },
            "bluetoothBlocked": {
              "description": "Whether or not to Block the user from using bluetooth.",
              "type": "boolean"
            },
            "cameraBlocked": {
              "description": "Whether or not to Block the user from accessing the camera of the device.",
              "type": "boolean"
            },
            "connectedDevicesServiceBlocked": {
              "description": "Whether or not to block Connected Devices Service which enables discovery and connection to other devices, remote messaging, remote app sessions and other cross-device experiences.",
              "type": "boolean"
            },
            "certificatesBlockManualRootCertificateInstallation": {
              "description": "Whether or not to Block the user from doing manual root certificate installation.",
              "type": "boolean"
            },
            "copyPasteBlocked": {
              "description": "Whether or not to Block the user from using copy paste.",
              "type": "boolean"
            },
            "cortanaBlocked": {
              "description": "Whether or not to Block the user from using Cortana.",
              "type": "boolean"
            },
            "deviceManagementBlockFactoryResetOnMobile": {
              "description": "Indicates whether or not to Block the user from resetting their phone.",
              "type": "boolean"
            },
            "deviceManagementBlockManualUnenroll": {
              "description": "Indicates whether or not to Block the user from doing manual un-enrollment from device management.",
              "type": "boolean"
            },
            "safeSearchFilter": {
              "description": "Specifies what filter level of safe search is required. Possible values are: userDefined, strict, moderate."
            },
            "edgeBlockPopups": {
              "description": "Indicates whether or not to block popups.",
              "type": "boolean"
            },
            "edgeBlockSearchSuggestions": {
              "description": "Indicates whether or not to Block the user from using the search suggestions in the address bar.",
              "type": "boolean"
            },
            "edgeBlockSendingIntranetTrafficToInternetExplorer": {
              "description": "Indicates whether or not to Block the user from sending Intranet traffic to Internet Explorer from Edge.",
              "type": "boolean"
            },
            "edgeRequireSmartScreen": {
              "description": "Indicates whether or not to Require the user to use the smart screen filter.",
              "type": "boolean"
            },
            "edgeEnterpriseModeSiteListLocation": {
              "description": "Indicates the enterprise mode site list location. Could be a local file, local network or http location.",
              "type": "string"
            },
            "edgeFirstRunUrl": {
              "description": "The first run URL for when Edge browser is opened for the first time.",
              "type": "string"
            },
            "edgeSearchEngine": {
              "description": "Allows IT admins to set a default search engine for MDM-Controlled devices. Users can override this and change their default search engine provided the AllowSearchEngineCustomization policy is not set."
            },
            "edgeHomepageUrls": {
              "description": "The list of URLs for homepages shodwn on MDM-enrolled devices on Edge browser.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "edgeBlockAccessToAboutFlags": {
              "description": "Indicates whether or not to prevent access to about flags on Edge browser.",
              "type": "boolean"
            },
            "smartScreenBlockPromptOverride": {
              "description": "Indicates whether or not users can override SmartScreen Filter warnings about potentially malicious websites.",
              "type": "boolean"
            },
            "smartScreenBlockPromptOverrideForFiles": {
              "description": "Indicates whether or not users can override the SmartScreen Filter warnings about downloading unverified files",
              "type": "boolean"
            },
            "webRtcBlockLocalhostIpAddress": {
              "description": "Indicates whether or not user's localhost IP address is displayed while making phone calls using the WebRTC",
              "type": "boolean"
            },
            "internetSharingBlocked": {
              "description": "Indicates whether or not to Block the user from using internet sharing.",
              "type": "boolean"
            },
            "settingsBlockAddProvisioningPackage": {
              "description": "Indicates whether or not to block the user from installing provisioning packages.",
              "type": "boolean"
            },
            "settingsBlockRemoveProvisioningPackage": {
              "description": "Indicates whether or not to block the runtime configuration agent from removing provisioning packages.",
              "type": "boolean"
            },
            "settingsBlockChangeSystemTime": {
              "description": "Indicates whether or not to block the user from changing date and time settings.",
              "type": "boolean"
            },
            "settingsBlockEditDeviceName": {
              "description": "Indicates whether or not to block the user from editing the device name.",
              "type": "boolean"
            },
            "settingsBlockChangeRegion": {
              "description": "Indicates whether or not to block the user from changing the region settings.",
              "type": "boolean"
            },
            "settingsBlockChangeLanguage": {
              "description": "Indicates whether or not to block the user from changing the language settings.",
              "type": "boolean"
            },
            "settingsBlockChangePowerSleep": {
              "description": "Indicates whether or not to block the user from changing power and sleep settings.",
              "type": "boolean"
            },
            "locationServicesBlocked": {
              "description": "Indicates whether or not to Block the user from location services.",
              "type": "boolean"
            },
            "microsoftAccountBlocked": {
              "description": "Indicates whether or not to Block a Microsoft account.",
              "type": "boolean"
            },
            "microsoftAccountBlockSettingsSync": {
              "description": "Indicates whether or not to Block Microsoft account settings sync.",
              "type": "boolean"
            },
            "nfcBlocked": {
              "description": "Indicates whether or not to Block the user from using near field communication.",
              "type": "boolean"
            },
            "resetProtectionModeBlocked": {
              "description": "Indicates whether or not to Block the user from reset protection mode.",
              "type": "boolean"
            },
            "screenCaptureBlocked": {
              "description": "Indicates whether or not to Block the user from taking Screenshots.",
              "type": "boolean"
            },
            "storageBlockRemovableStorage": {
              "description": "Indicates whether or not to Block the user from using removable storage.",
              "type": "boolean"
            },
            "storageRequireMobileDeviceEncryption": {
              "description": "Indicating whether or not to require encryption on a mobile device.",
              "type": "boolean"
            },
            "usbBlocked": {
              "description": "Indicates whether or not to Block the user from USB connection.",
              "type": "boolean"
            },
            "voiceRecordingBlocked": {
              "description": "Indicates whether or not to Block the user from voice recording.",
              "type": "boolean"
            },
            "wiFiBlockAutomaticConnectHotspots": {
              "description": "Indicating whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked.",
              "type": "boolean"
            },
            "wiFiBlocked": {
              "description": "Indicates whether or not to Block the user from using Wi-Fi.",
              "type": "boolean"
            },
            "wiFiBlockManualConfiguration": {
              "description": "Indicates whether or not to Block the user from using Wi-Fi manual configuration.",
              "type": "boolean"
            },
            "wiFiScanInterval": {
              "format": "int32",
              "description": "Specify how often devices scan for Wi-Fi networks. Supported values are 1-500, where 100 = default, and 500 = low frequency. Valid values 1 to 500",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "wirelessDisplayBlockProjectionToThisDevice": {
              "description": "Indicates whether or not to allow other devices from discovering this PC for projection.",
              "type": "boolean"
            },
            "wirelessDisplayBlockUserInputFromReceiver": {
              "description": "Indicates whether or not to allow user input from wireless display receiver.",
              "type": "boolean"
            },
            "wirelessDisplayRequirePinForPairing": {
              "description": "Indicates whether or not to require a PIN for new devices to initiate pairing.",
              "type": "boolean"
            },
            "windowsStoreBlocked": {
              "description": "Indicates whether or not to Block the user from using the Windows store.",
              "type": "boolean"
            },
            "appsAllowTrustedAppsSideloading": {
              "description": "Indicates whether apps from AppX packages signed with a trusted certificate can be side loaded. Possible values are: notConfigured, blocked, allowed."
            },
            "windowsStoreBlockAutoUpdate": {
              "description": "Indicates whether or not to block automatic update of apps from Windows Store.",
              "type": "boolean"
            },
            "developerUnlockSetting": {
              "description": "Indicates whether or not to allow developer unlock. Possible values are: notConfigured, blocked, allowed."
            },
            "sharedUserAppDataAllowed": {
              "description": "Indicates whether or not to block multiple users of the same app to share data.",
              "type": "boolean"
            },
            "appsBlockWindowsStoreOriginatedApps": {
              "description": "Indicates whether or not to disable the launch of all apps from Windows Store that came pre-installed or were downloaded.",
              "type": "boolean"
            },
            "windowsStoreEnablePrivateStoreOnly": {
              "description": "Indicates whether or not to enable Private Store Only.",
              "type": "boolean"
            },
            "storageRestrictAppDataToSystemVolume": {
              "description": "Indicates whether application data is restricted to the system drive.",
              "type": "boolean"
            },
            "storageRestrictAppInstallToSystemVolume": {
              "description": "Indicates whether the installation of applications is restricted to the system drive.",
              "type": "boolean"
            },
            "gameDvrBlocked": {
              "description": "Indicates whether or not to block DVR and broadcasting.",
              "type": "boolean"
            },
            "experienceBlockDeviceDiscovery": {
              "description": "Indicates whether or not to enable device discovery UX.",
              "type": "boolean"
            },
            "experienceBlockErrorDialogWhenNoSIM": {
              "description": "Indicates whether or not to allow the error dialog from displaying if no SIM card is detected.",
              "type": "boolean"
            },
            "experienceBlockTaskSwitcher": {
              "description": "Indicates whether or not to enable task switching on the device.",
              "type": "boolean"
            },
            "logonBlockFastUserSwitching": {
              "description": "Disables the ability to quickly switch between users that are logged on simultaneously without logging off.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "enterpriseCloudPrintDiscoveryEndPoint": "string",
        "enterpriseCloudPrintOAuthAuthority": "string",
        "enterpriseCloudPrintOAuthClientIdentifier": "string",
        "enterpriseCloudPrintResourceIdentifier": "string",
        "enterpriseCloudPrintDiscoveryMaxLimit": "integer",
        "enterpriseCloudPrintMopriaDiscoveryResourceIdentifier": "string",
        "searchBlockDiacritics": true,
        "searchDisableAutoLanguageDetection": true,
        "searchDisableIndexingEncryptedItems": true,
        "searchEnableRemoteQueries": true,
        "searchDisableIndexerBackoff": true,
        "searchDisableIndexingRemovableDrive": true,
        "searchEnableAutomaticIndexSizeManangement": true,
        "diagnosticsDataSubmissionMode": {
          "@odata.type": "microsoft.graph.diagnosticDataSubmissionMode"
        },
        "oneDriveDisableFileSync": true,
        "smartScreenEnableAppInstallControl": true,
        "personalizationDesktopImageUrl": "string",
        "personalizationLockScreenImageUrl": "string",
        "bluetoothAllowedServices": [
          "string"
        ],
        "bluetoothBlockAdvertising": true,
        "bluetoothBlockDiscoverableMode": true,
        "bluetoothBlockPrePairing": true,
        "edgeBlockAutofill": true,
        "edgeBlocked": true,
        "edgeCookiePolicy": {
          "@odata.type": "microsoft.graph.edgeCookiePolicy"
        },
        "edgeBlockDeveloperTools": true,
        "edgeBlockSendingDoNotTrackHeader": true,
        "edgeBlockExtensions": true,
        "edgeBlockInPrivateBrowsing": true,
        "edgeBlockJavaScript": true,
        "edgeBlockPasswordManager": true,
        "edgeBlockAddressBarDropdown": true,
        "edgeBlockCompatibilityList": true,
        "edgeClearBrowsingDataOnExit": true,
        "edgeAllowStartPagesModification": true,
        "edgeDisableFirstRunPage": true,
        "edgeBlockLiveTileDataCollection": true,
        "edgeSyncFavoritesWithInternetExplorer": true,
        "cellularBlockDataWhenRoaming": true,
        "cellularBlockVpn": true,
        "cellularBlockVpnWhenRoaming": true,
        "defenderBlockEndUserAccess": true,
        "defenderDaysBeforeDeletingQuarantinedMalware": "integer",
        "defenderDetectedMalwareActions": {
          "@odata.type": "microsoft.graph.defenderDetectedMalwareActions"
        },
        "defenderSystemScanSchedule": {
          "@odata.type": "microsoft.graph.weeklySchedule"
        },
        "defenderFilesAndFoldersToExclude": [
          "string"
        ],
        "defenderFileExtensionsToExclude": [
          "string"
        ],
        "defenderScanMaxCpu": "integer",
        "defenderMonitorFileActivity": {
          "@odata.type": "microsoft.graph.defenderMonitorFileActivity"
        },
        "defenderProcessesToExclude": [
          "string"
        ],
        "defenderPromptForSampleSubmission": {
          "@odata.type": "microsoft.graph.defenderPromptForSampleSubmission"
        },
        "defenderRequireBehaviorMonitoring": true,
        "defenderRequireCloudProtection": true,
        "defenderRequireNetworkInspectionSystem": true,
        "defenderRequireRealTimeMonitoring": true,
        "defenderScanArchiveFiles": true,
        "defenderScanDownloads": true,
        "defenderScanNetworkFiles": true,
        "defenderScanIncomingMail": true,
        "defenderScanMappedNetworkDrivesDuringFullScan": true,
        "defenderScanRemovableDrivesDuringFullScan": true,
        "defenderScanScriptsLoadedInInternetExplorer": true,
        "defenderSignatureUpdateIntervalInHours": "integer",
        "defenderScanType": {
          "@odata.type": "microsoft.graph.defenderScanType"
        },
        "defenderScheduledScanTime": "string (timestamp)",
        "defenderScheduledQuickScanTime": "string (timestamp)",
        "defenderCloudBlockLevel": {
          "@odata.type": "microsoft.graph.defenderCloudBlockLevelType"
        },
        "lockScreenAllowTimeoutConfiguration": true,
        "lockScreenBlockActionCenterNotifications": true,
        "lockScreenBlockCortana": true,
        "lockScreenBlockToastNotifications": true,
        "lockScreenTimeoutInSeconds": "integer",
        "passwordBlockSimple": true,
        "passwordExpirationDays": "integer",
        "passwordMinimumLength": "integer",
        "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
        "passwordMinimumCharacterSetCount": "integer",
        "passwordPreviousPasswordBlockCount": "integer",
        "passwordRequired": true,
        "passwordRequireWhenResumeFromIdleState": true,
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "passwordSignInFailureCountBeforeFactoryReset": "integer",
        "privacyAdvertisingId": {
          "@odata.type": "microsoft.graph.stateManagementSetting"
        },
        "privacyAutoAcceptPairingAndConsentPrompts": true,
        "privacyBlockInputPersonalization": true,
        "startBlockUnpinningAppsFromTaskbar": true,
        "startMenuAppListVisibility": {
          "@odata.type": "microsoft.graph.windowsStartMenuAppListVisibilityType"
        },
        "startMenuHideChangeAccountSettings": true,
        "startMenuHideFrequentlyUsedApps": true,
        "startMenuHideHibernate": true,
        "startMenuHideLock": true,
        "startMenuHidePowerButton": true,
        "startMenuHideRecentJumpLists": true,
        "startMenuHideRecentlyAddedApps": true,
        "startMenuHideRestartOptions": true,
        "startMenuHideShutDown": true,
        "startMenuHideSignOut": true,
        "startMenuHideSleep": true,
        "startMenuHideSwitchAccount": true,
        "startMenuHideUserTile": true,
        "startMenuLayoutEdgeAssetsXml": "string",
        "startMenuLayoutXml": "string",
        "startMenuMode": {
          "@odata.type": "microsoft.graph.windowsStartMenuModeType"
        },
        "startMenuPinnedFolderDocuments": {
          "@odata.type": "microsoft.graph.visibilitySetting"
        },
        "startMenuPinnedFolderDownloads": {
          "@odata.type": "microsoft.graph.visibilitySetting"
        },
        "startMenuPinnedFolderFileExplorer": {
          "@odata.type": "microsoft.graph.visibilitySetting"
        },
        "startMenuPinnedFolderHomeGroup": {
          "@odata.type": "microsoft.graph.visibilitySetting"
        },
        "startMenuPinnedFolderMusic": {
          "@odata.type": "microsoft.graph.visibilitySetting"
        },
        "startMenuPinnedFolderNetwork": {
          "@odata.type": "microsoft.graph.visibilitySetting"
        },
        "startMenuPinnedFolderPersonalFolder": {
          "@odata.type": "microsoft.graph.visibilitySetting"
        },
        "startMenuPinnedFolderPictures": {
          "@odata.type": "microsoft.graph.visibilitySetting"
        },
        "startMenuPinnedFolderSettings": {
          "@odata.type": "microsoft.graph.visibilitySetting"
        },
        "startMenuPinnedFolderVideos": {
          "@odata.type": "microsoft.graph.visibilitySetting"
        },
        "settingsBlockSettingsApp": true,
        "settingsBlockSystemPage": true,
        "settingsBlockDevicesPage": true,
        "settingsBlockNetworkInternetPage": true,
        "settingsBlockPersonalizationPage": true,
        "settingsBlockAccountsPage": true,
        "settingsBlockTimeLanguagePage": true,
        "settingsBlockEaseOfAccessPage": true,
        "settingsBlockPrivacyPage": true,
        "settingsBlockUpdateSecurityPage": true,
        "settingsBlockAppsPage": true,
        "settingsBlockGamingPage": true,
        "windowsSpotlightBlockConsumerSpecificFeatures": true,
        "windowsSpotlightBlocked": true,
        "windowsSpotlightBlockOnActionCenter": true,
        "windowsSpotlightBlockTailoredExperiences": true,
        "windowsSpotlightBlockThirdPartyNotifications": true,
        "windowsSpotlightBlockWelcomeExperience": true,
        "windowsSpotlightBlockWindowsTips": true,
        "windowsSpotlightConfigureOnLockScreen": {
          "@odata.type": "microsoft.graph.windowsSpotlightEnablementSettings"
        },
        "networkProxyApplySettingsDeviceWide": true,
        "networkProxyDisableAutoDetect": true,
        "networkProxyAutomaticConfigurationUrl": "string",
        "networkProxyServer": {
          "@odata.type": "microsoft.graph.windows10NetworkProxyServer"
        },
        "accountsBlockAddingNonMicrosoftAccountEmail": true,
        "antiTheftModeBlocked": true,
        "bluetoothBlocked": true,
        "cameraBlocked": true,
        "connectedDevicesServiceBlocked": true,
        "certificatesBlockManualRootCertificateInstallation": true,
        "copyPasteBlocked": true,
        "cortanaBlocked": true,
        "deviceManagementBlockFactoryResetOnMobile": true,
        "deviceManagementBlockManualUnenroll": true,
        "safeSearchFilter": {
          "@odata.type": "microsoft.graph.safeSearchFilterType"
        },
        "edgeBlockPopups": true,
        "edgeBlockSearchSuggestions": true,
        "edgeBlockSendingIntranetTrafficToInternetExplorer": true,
        "edgeRequireSmartScreen": true,
        "edgeEnterpriseModeSiteListLocation": "string",
        "edgeFirstRunUrl": "string",
        "edgeSearchEngine": {
          "@odata.type": "microsoft.graph.edgeSearchEngineBase"
        },
        "edgeHomepageUrls": [
          "string"
        ],
        "edgeBlockAccessToAboutFlags": true,
        "smartScreenBlockPromptOverride": true,
        "smartScreenBlockPromptOverrideForFiles": true,
        "webRtcBlockLocalhostIpAddress": true,
        "internetSharingBlocked": true,
        "settingsBlockAddProvisioningPackage": true,
        "settingsBlockRemoveProvisioningPackage": true,
        "settingsBlockChangeSystemTime": true,
        "settingsBlockEditDeviceName": true,
        "settingsBlockChangeRegion": true,
        "settingsBlockChangeLanguage": true,
        "settingsBlockChangePowerSleep": true,
        "locationServicesBlocked": true,
        "microsoftAccountBlocked": true,
        "microsoftAccountBlockSettingsSync": true,
        "nfcBlocked": true,
        "resetProtectionModeBlocked": true,
        "screenCaptureBlocked": true,
        "storageBlockRemovableStorage": true,
        "storageRequireMobileDeviceEncryption": true,
        "usbBlocked": true,
        "voiceRecordingBlocked": true,
        "wiFiBlockAutomaticConnectHotspots": true,
        "wiFiBlocked": true,
        "wiFiBlockManualConfiguration": true,
        "wiFiScanInterval": "integer",
        "wirelessDisplayBlockProjectionToThisDevice": true,
        "wirelessDisplayBlockUserInputFromReceiver": true,
        "wirelessDisplayRequirePinForPairing": true,
        "windowsStoreBlocked": true,
        "appsAllowTrustedAppsSideloading": {
          "@odata.type": "microsoft.graph.stateManagementSetting"
        },
        "windowsStoreBlockAutoUpdate": true,
        "developerUnlockSetting": {
          "@odata.type": "microsoft.graph.stateManagementSetting"
        },
        "sharedUserAppDataAllowed": true,
        "appsBlockWindowsStoreOriginatedApps": true,
        "windowsStoreEnablePrivateStoreOnly": true,
        "storageRestrictAppDataToSystemVolume": true,
        "storageRestrictAppInstallToSystemVolume": true,
        "gameDvrBlocked": true,
        "experienceBlockDeviceDiscovery": true,
        "experienceBlockErrorDialogWhenNoSIM": true,
        "experienceBlockTaskSwitcher": true,
        "logonBlockFastUserSwitching": true
      }
    },
    "microsoft.graph.windows10MobileCompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "windows10MobileCompliancePolicy",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Require a password to unlock Windows Phone device.",
              "type": "boolean"
            },
            "passwordBlockSimple": {
              "description": "Whether or not to block syncing the calendar.",
              "type": "boolean"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum password length. Valid values 4 to 16",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "The number of previous passwords to prevent re-use of.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before password expiration. Valid values 1 to 255",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequireToUnlockFromIdle": {
              "description": "Require a password to unlock an idle device.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum Windows Phone version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Windows Phone version.",
              "type": "string"
            },
            "earlyLaunchAntiMalwareDriverEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation - early launch antimalware driver is enabled.",
              "type": "boolean"
            },
            "bitLockerEnabled": {
              "description": "Require devices to be reported healthy by Windows Device Health Attestation - bit locker is enabled",
              "type": "boolean"
            },
            "secureBootEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation - secure boot is enabled.",
              "type": "boolean"
            },
            "codeIntegrityEnabled": {
              "description": "Require devices to be reported as healthy by Windows Device Health Attestation.",
              "type": "boolean"
            },
            "storageRequireEncryption": {
              "description": "Require encryption on windows devices.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "scheduledActionsForRule": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
          }
        ],
        "passwordRequired": true,
        "passwordBlockSimple": true,
        "passwordMinimumLength": "integer",
        "passwordMinimumCharacterSetCount": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "passwordPreviousPasswordBlockCount": "integer",
        "passwordExpirationDays": "integer",
        "passwordMinutesOfInactivityBeforeLock": "integer",
        "passwordRequireToUnlockFromIdle": true,
        "osMinimumVersion": "string",
        "osMaximumVersion": "string",
        "earlyLaunchAntiMalwareDriverEnabled": true,
        "bitLockerEnabled": true,
        "secureBootEnabled": true,
        "codeIntegrityEnabled": true,
        "storageRequireEncryption": true
      }
    },
    "microsoft.graph.windows10SecureAssessmentConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10SecureAssessmentConfiguration",
          "type": "object",
          "properties": {
            "launchUri": {
              "description": "Url link to an assessment that's automatically loaded when the secure assessment browser is launched. It has to be a valid Url (http[s]://msdn.microsoft.com/).",
              "type": "string"
            },
            "configurationAccount": {
              "description": "The account used to configure the Windows device for taking the test. The user can be a domain account (domain/user), an AAD account (username@tenant.com) or a local account (username).",
              "type": "string"
            },
            "allowPrinting": {
              "description": "Indicates whether or not to allow the app from printing during the test.",
              "type": "boolean"
            },
            "allowScreenCapture": {
              "description": "Indicates whether or not to allow screen capture capability during a test.",
              "type": "boolean"
            },
            "allowTextSuggestion": {
              "description": "Indicates whether or not to allow text suggestions during the test.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "launchUri": "string",
        "configurationAccount": "string",
        "allowPrinting": true,
        "allowScreenCapture": true,
        "allowTextSuggestion": true
      }
    },
    "microsoft.graph.windows10TeamGeneralConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows10TeamGeneralConfiguration",
          "type": "object",
          "properties": {
            "azureOperationalInsightsBlockTelemetry": {
              "description": "Indicates whether or not to Block Azure Operational Insights.",
              "type": "boolean"
            },
            "azureOperationalInsightsWorkspaceId": {
              "description": "The Azure Operational Insights workspace id.",
              "type": "string"
            },
            "azureOperationalInsightsWorkspaceKey": {
              "description": "The Azure Operational Insights Workspace key.",
              "type": "string"
            },
            "connectAppBlockAutoLaunch": {
              "description": "Specifies whether to automatically launch the Connect app whenever a projection is initiated.",
              "type": "boolean"
            },
            "maintenanceWindowBlocked": {
              "description": "Indicates whether or not to Block setting a maintenance window for device updates.",
              "type": "boolean"
            },
            "maintenanceWindowDurationInHours": {
              "format": "int32",
              "description": "Maintenance window duration for device updates. Valid values 0 to 5",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "maintenanceWindowStartTime": {
              "format": "time",
              "description": "Maintenance window start time for device updates.",
              "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
              "type": "string"
            },
            "miracastChannel": {
              "description": "The channel. Possible values are: userDefined, one, two, three, four, five, six, seven, eight, nine, ten, eleven, thirtySix, forty, fortyFour, fortyEight, oneHundredFortyNine, oneHundredFiftyThree, oneHundredFiftySeven, oneHundredSixtyOne, oneHundredSixtyFive."
            },
            "miracastBlocked": {
              "description": "Indicates whether or not to Block wireless projection.",
              "type": "boolean"
            },
            "miracastRequirePin": {
              "description": "Indicates whether or not to require a pin for wireless projection.",
              "type": "boolean"
            },
            "settingsBlockMyMeetingsAndFiles": {
              "description": "Specifies whether to disable the 'My meetings and files' feature in the Start menu, which shows the signed-in user's meetings and files from Office 365.",
              "type": "boolean"
            },
            "settingsBlockSessionResume": {
              "description": "Specifies whether to allow the ability to resume a session when the session times out.",
              "type": "boolean"
            },
            "settingsBlockSigninSuggestions": {
              "description": "Specifies whether to disable auto-populating of the sign-in dialog with invitees from scheduled meetings.",
              "type": "boolean"
            },
            "settingsDefaultVolume": {
              "format": "int32",
              "description": "Specifies the default volume value for a new session. Permitted values are 0-100. The default is 45. Valid values 0 to 100",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "settingsScreenTimeoutInMinutes": {
              "format": "int32",
              "description": "Specifies the number of minutes until the Hub screen turns off.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "settingsSessionTimeoutInMinutes": {
              "format": "int32",
              "description": "Specifies the number of minutes until the session times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "settingsSleepTimeoutInMinutes": {
              "format": "int32",
              "description": "Specifies the number of minutes until the Hub enters sleep mode.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "welcomeScreenBlockAutomaticWakeUp": {
              "description": "Indicates whether or not to Block the welcome screen from waking up automatically when someone enters the room.",
              "type": "boolean"
            },
            "welcomeScreenBackgroundImageUrl": {
              "description": "The welcome screen background image URL. The URL must use the HTTPS protocol and return a PNG image.",
              "type": "string"
            },
            "welcomeScreenMeetingInformation": {
              "description": "The welcome screen meeting information shown. Possible values are: userDefined, showOrganizerAndTimeOnly, showOrganizerAndTimeAndSubject."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "azureOperationalInsightsBlockTelemetry": true,
        "azureOperationalInsightsWorkspaceId": "string",
        "azureOperationalInsightsWorkspaceKey": "string",
        "connectAppBlockAutoLaunch": true,
        "maintenanceWindowBlocked": true,
        "maintenanceWindowDurationInHours": "integer",
        "maintenanceWindowStartTime": "string (timestamp)",
        "miracastChannel": {
          "@odata.type": "microsoft.graph.miracastChannel"
        },
        "miracastBlocked": true,
        "miracastRequirePin": true,
        "settingsBlockMyMeetingsAndFiles": true,
        "settingsBlockSessionResume": true,
        "settingsBlockSigninSuggestions": true,
        "settingsDefaultVolume": "integer",
        "settingsScreenTimeoutInMinutes": "integer",
        "settingsSessionTimeoutInMinutes": "integer",
        "settingsSleepTimeoutInMinutes": "integer",
        "welcomeScreenBlockAutomaticWakeUp": true,
        "welcomeScreenBackgroundImageUrl": "string",
        "welcomeScreenMeetingInformation": {
          "@odata.type": "microsoft.graph.welcomeScreenMeetingInformation"
        }
      }
    },
    "microsoft.graph.windows81CompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "windows81CompliancePolicy",
          "type": "object",
          "properties": {
            "passwordRequired": {
              "description": "Require a password to unlock Windows device.",
              "type": "boolean"
            },
            "passwordBlockSimple": {
              "description": "Indicates whether or not to block simple password.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Password expiration in days.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "The minimum password length.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "The number of previous passwords to prevent re-use of. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "osMinimumVersion": {
              "description": "Minimum Windows 8.1 version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Windows 8.1 version.",
              "type": "string"
            },
            "storageRequireEncryption": {
              "description": "Indicates whether or not to require encryption on a windows 8.1 device.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "scheduledActionsForRule": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
          }
        ],
        "passwordRequired": true,
        "passwordBlockSimple": true,
        "passwordExpirationDays": "integer",
        "passwordMinimumLength": "integer",
        "passwordMinutesOfInactivityBeforeLock": "integer",
        "passwordMinimumCharacterSetCount": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "passwordPreviousPasswordBlockCount": "integer",
        "osMinimumVersion": "string",
        "osMaximumVersion": "string",
        "storageRequireEncryption": true
      }
    },
    "microsoft.graph.windows81GeneralConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windows81GeneralConfiguration",
          "type": "object",
          "properties": {
            "accountsBlockAddingNonMicrosoftAccountEmail": {
              "description": "Indicates whether or not to Block the user from adding email accounts to the device that are not associated with a Microsoft account.",
              "type": "boolean"
            },
            "applyOnlyToWindows81": {
              "description": "Value indicating whether this policy only applies to Windows 8.1. This property is read-only.",
              "type": "boolean"
            },
            "browserBlockAutofill": {
              "description": "Indicates whether or not to block auto fill.",
              "type": "boolean"
            },
            "browserBlockAutomaticDetectionOfIntranetSites": {
              "description": "Indicates whether or not to block automatic detection of Intranet sites.",
              "type": "boolean"
            },
            "browserBlockEnterpriseModeAccess": {
              "description": "Indicates whether or not to block enterprise mode access.",
              "type": "boolean"
            },
            "browserBlockJavaScript": {
              "description": "Indicates whether or not to Block the user from using JavaScript.",
              "type": "boolean"
            },
            "browserBlockPlugins": {
              "description": "Indicates whether or not to block plug-ins.",
              "type": "boolean"
            },
            "browserBlockPopups": {
              "description": "Indicates whether or not to block popups.",
              "type": "boolean"
            },
            "browserBlockSendingDoNotTrackHeader": {
              "description": "Indicates whether or not to Block the user from sending the do not track header.",
              "type": "boolean"
            },
            "browserBlockSingleWordEntryOnIntranetSites": {
              "description": "Indicates whether or not to block a single word entry on Intranet sites.",
              "type": "boolean"
            },
            "browserRequireSmartScreen": {
              "description": "Indicates whether or not to require the user to use the smart screen filter.",
              "type": "boolean"
            },
            "browserEnterpriseModeSiteListLocation": {
              "description": "The enterprise mode site list location. Could be a local file, local network or http location.",
              "type": "string"
            },
            "browserInternetSecurityLevel": {
              "description": "The internet security level. Possible values are: userDefined, medium, mediumHigh, high."
            },
            "browserIntranetSecurityLevel": {
              "description": "The Intranet security level. Possible values are: userDefined, low, mediumLow, medium, mediumHigh, high."
            },
            "browserLoggingReportLocation": {
              "description": "The logging report location.",
              "type": "string"
            },
            "browserRequireHighSecurityForRestrictedSites": {
              "description": "Indicates whether or not to require high security for restricted sites.",
              "type": "boolean"
            },
            "browserRequireFirewall": {
              "description": "Indicates whether or not to require a firewall.",
              "type": "boolean"
            },
            "browserRequireFraudWarning": {
              "description": "Indicates whether or not to require fraud warning.",
              "type": "boolean"
            },
            "browserTrustedSitesSecurityLevel": {
              "description": "The trusted sites security level. Possible values are: userDefined, low, mediumLow, medium, mediumHigh, high."
            },
            "cellularBlockDataRoaming": {
              "description": "Indicates whether or not to block data roaming.",
              "type": "boolean"
            },
            "diagnosticsBlockDataSubmission": {
              "description": "Indicates whether or not to block diagnostic data submission.",
              "type": "boolean"
            },
            "passwordBlockPicturePasswordAndPin": {
              "description": "Indicates whether or not to Block the user from using a pictures password and pin.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Password expiration in days.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "The minimum password length.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "The minutes of inactivity before the screen times out.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "The number of previous passwords to prevent re-use of. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "passwordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "The number of sign in failures before factory reset.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "storageRequireDeviceEncryption": {
              "description": "Indicates whether or not to require encryption on a mobile device.",
              "type": "boolean"
            },
            "updatesRequireAutomaticUpdates": {
              "description": "Indicates whether or not to require automatic updates.",
              "type": "boolean"
            },
            "userAccountControlSettings": {
              "description": "The user account control settings. Possible values are: userDefined, alwaysNotify, notifyOnAppChanges, notifyOnAppChangesWithoutDimming, neverNotify."
            },
            "workFoldersUrl": {
              "description": "The work folders url.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "accountsBlockAddingNonMicrosoftAccountEmail": true,
        "applyOnlyToWindows81": true,
        "browserBlockAutofill": true,
        "browserBlockAutomaticDetectionOfIntranetSites": true,
        "browserBlockEnterpriseModeAccess": true,
        "browserBlockJavaScript": true,
        "browserBlockPlugins": true,
        "browserBlockPopups": true,
        "browserBlockSendingDoNotTrackHeader": true,
        "browserBlockSingleWordEntryOnIntranetSites": true,
        "browserRequireSmartScreen": true,
        "browserEnterpriseModeSiteListLocation": "string",
        "browserInternetSecurityLevel": {
          "@odata.type": "microsoft.graph.internetSiteSecurityLevel"
        },
        "browserIntranetSecurityLevel": {
          "@odata.type": "microsoft.graph.siteSecurityLevel"
        },
        "browserLoggingReportLocation": "string",
        "browserRequireHighSecurityForRestrictedSites": true,
        "browserRequireFirewall": true,
        "browserRequireFraudWarning": true,
        "browserTrustedSitesSecurityLevel": {
          "@odata.type": "microsoft.graph.siteSecurityLevel"
        },
        "cellularBlockDataRoaming": true,
        "diagnosticsBlockDataSubmission": true,
        "passwordBlockPicturePasswordAndPin": true,
        "passwordExpirationDays": "integer",
        "passwordMinimumLength": "integer",
        "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
        "passwordMinimumCharacterSetCount": "integer",
        "passwordPreviousPasswordBlockCount": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "passwordSignInFailureCountBeforeFactoryReset": "integer",
        "storageRequireDeviceEncryption": true,
        "updatesRequireAutomaticUpdates": true,
        "userAccountControlSettings": {
          "@odata.type": "microsoft.graph.windowsUserAccountControlSettings"
        },
        "workFoldersUrl": "string"
      }
    },
    "microsoft.graph.windowsDefenderAdvancedThreatProtectionConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsDefenderAdvancedThreatProtectionConfiguration",
          "type": "object",
          "properties": {
            "allowSampleSharing": {
              "description": "Windows Defender AdvancedThreatProtection 'Allow Sample Sharing' Rule",
              "type": "boolean"
            },
            "enableExpeditedTelemetryReporting": {
              "description": "Expedite Windows Defender Advanced Threat Protection telemetry reporting frequency.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "allowSampleSharing": true,
        "enableExpeditedTelemetryReporting": true
      }
    },
    "microsoft.graph.windowsPhone81CompliancePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
        },
        {
          "title": "windowsPhone81CompliancePolicy",
          "type": "object",
          "properties": {
            "passwordBlockSimple": {
              "description": "Whether or not to block syncing the calendar.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passwords.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeLock": {
              "format": "int32",
              "description": "Minutes of inactivity before a password is required.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "The number of character sets required in the password.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "The required password type. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequired": {
              "description": "Whether or not to require a password.",
              "type": "boolean"
            },
            "osMinimumVersion": {
              "description": "Minimum Windows Phone version.",
              "type": "string"
            },
            "osMaximumVersion": {
              "description": "Maximum Windows Phone version.",
              "type": "string"
            },
            "storageRequireEncryption": {
              "description": "Require encryption on windows phone devices.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "version": "integer",
        "scheduledActionsForRule": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceScheduledActionForRule"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceComplianceUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceComplianceUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicyAssignment"
          }
        ],
        "passwordBlockSimple": true,
        "passwordExpirationDays": "integer",
        "passwordMinimumLength": "integer",
        "passwordMinutesOfInactivityBeforeLock": "integer",
        "passwordMinimumCharacterSetCount": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "passwordPreviousPasswordBlockCount": "integer",
        "passwordRequired": true,
        "osMinimumVersion": "string",
        "osMaximumVersion": "string",
        "storageRequireEncryption": true
      }
    },
    "microsoft.graph.windowsPhone81CustomConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsPhone81CustomConfiguration",
          "type": "object",
          "properties": {
            "omaSettings": {
              "description": "OMA settings. This collection can contain a maximum of 1000 elements.",
              "type": "array",
              "items": { }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "omaSettings": [
          {
            "@odata.type": "microsoft.graph.omaSetting"
          }
        ]
      }
    },
    "microsoft.graph.windowsPhone81GeneralConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsPhone81GeneralConfiguration",
          "type": "object",
          "properties": {
            "applyOnlyToWindowsPhone81": {
              "description": "Value indicating whether this policy only applies to Windows Phone 8.1. This property is read-only.",
              "type": "boolean"
            },
            "appsBlockCopyPaste": {
              "description": "Indicates whether or not to block copy paste.",
              "type": "boolean"
            },
            "bluetoothBlocked": {
              "description": "Indicates whether or not to block bluetooth.",
              "type": "boolean"
            },
            "cameraBlocked": {
              "description": "Indicates whether or not to block camera.",
              "type": "boolean"
            },
            "cellularBlockWifiTethering": {
              "description": "Indicates whether or not to block Wi-Fi tethering. Has no impact if Wi-Fi is blocked.",
              "type": "boolean"
            },
            "compliantAppsList": {
              "description": "List of apps in the compliance (either allow list or block list, controlled by CompliantAppListType). This collection can contain a maximum of 10000 elements.",
              "type": "array",
              "items": { }
            },
            "compliantAppListType": {
              "description": "List that is in the AppComplianceList. Possible values are: none, appsInListCompliant, appsNotInListCompliant."
            },
            "diagnosticDataBlockSubmission": {
              "description": "Indicates whether or not to block diagnostic data submission.",
              "type": "boolean"
            },
            "emailBlockAddingAccounts": {
              "description": "Indicates whether or not to block custom email accounts.",
              "type": "boolean"
            },
            "locationServicesBlocked": {
              "description": "Indicates whether or not to block location services.",
              "type": "boolean"
            },
            "microsoftAccountBlocked": {
              "description": "Indicates whether or not to block using a Microsoft Account.",
              "type": "boolean"
            },
            "nfcBlocked": {
              "description": "Indicates whether or not to block Near-Field Communication.",
              "type": "boolean"
            },
            "passwordBlockSimple": {
              "description": "Indicates whether or not to block syncing the calendar.",
              "type": "boolean"
            },
            "passwordExpirationDays": {
              "format": "int32",
              "description": "Number of days before the password expires.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumLength": {
              "format": "int32",
              "description": "Minimum length of passwords.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinutesOfInactivityBeforeScreenTimeout": {
              "format": "int32",
              "description": "Minutes of inactivity before screen timeout.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMinimumCharacterSetCount": {
              "format": "int32",
              "description": "Number of character sets a password must contain.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordPreviousPasswordBlockCount": {
              "format": "int32",
              "description": "Number of previous passwords to block. Valid values 0 to 24",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordSignInFailureCountBeforeFactoryReset": {
              "format": "int32",
              "description": "Number of sign in failures allowed before factory reset.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordRequiredType": {
              "description": "Password type that is required. Possible values are: deviceDefault, alphanumeric, numeric."
            },
            "passwordRequired": {
              "description": "Indicates whether or not to require a password.",
              "type": "boolean"
            },
            "screenCaptureBlocked": {
              "description": "Indicates whether or not to block screenshots.",
              "type": "boolean"
            },
            "storageBlockRemovableStorage": {
              "description": "Indicates whether or not to block removable storage.",
              "type": "boolean"
            },
            "storageRequireEncryption": {
              "description": "Indicates whether or not to require encryption.",
              "type": "boolean"
            },
            "webBrowserBlocked": {
              "description": "Indicates whether or not to block the web browser.",
              "type": "boolean"
            },
            "wifiBlocked": {
              "description": "Indicates whether or not to block Wi-Fi.",
              "type": "boolean"
            },
            "wifiBlockAutomaticConnectHotspots": {
              "description": "Indicates whether or not to block automatically connecting to Wi-Fi hotspots. Has no impact if Wi-Fi is blocked.",
              "type": "boolean"
            },
            "wifiBlockHotspotReporting": {
              "description": "Indicates whether or not to block Wi-Fi hotspot reporting. Has no impact if Wi-Fi is blocked.",
              "type": "boolean"
            },
            "windowsStoreBlocked": {
              "description": "Indicates whether or not to block the Windows Store.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "applyOnlyToWindowsPhone81": true,
        "appsBlockCopyPaste": true,
        "bluetoothBlocked": true,
        "cameraBlocked": true,
        "cellularBlockWifiTethering": true,
        "compliantAppsList": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "compliantAppListType": {
          "@odata.type": "microsoft.graph.appListType"
        },
        "diagnosticDataBlockSubmission": true,
        "emailBlockAddingAccounts": true,
        "locationServicesBlocked": true,
        "microsoftAccountBlocked": true,
        "nfcBlocked": true,
        "passwordBlockSimple": true,
        "passwordExpirationDays": "integer",
        "passwordMinimumLength": "integer",
        "passwordMinutesOfInactivityBeforeScreenTimeout": "integer",
        "passwordMinimumCharacterSetCount": "integer",
        "passwordPreviousPasswordBlockCount": "integer",
        "passwordSignInFailureCountBeforeFactoryReset": "integer",
        "passwordRequiredType": {
          "@odata.type": "microsoft.graph.requiredPasswordType"
        },
        "passwordRequired": true,
        "screenCaptureBlocked": true,
        "storageBlockRemovableStorage": true,
        "storageRequireEncryption": true,
        "webBrowserBlocked": true,
        "wifiBlocked": true,
        "wifiBlockAutomaticConnectHotspots": true,
        "wifiBlockHotspotReporting": true,
        "windowsStoreBlocked": true
      }
    },
    "microsoft.graph.windowsUpdateForBusinessConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
        },
        {
          "title": "windowsUpdateForBusinessConfiguration",
          "type": "object",
          "properties": {
            "deliveryOptimizationMode": {
              "description": "Delivery Optimization Mode. Possible values are: userDefined, httpOnly, httpWithPeeringNat, httpWithPeeringPrivateGroup, httpWithInternetPeering, simpleDownload, bypassMode."
            },
            "prereleaseFeatures": {
              "description": "The pre-release features. Possible values are: userDefined, settingsOnly, settingsAndExperimentations, notAllowed."
            },
            "automaticUpdateMode": {
              "description": "Automatic update mode. Possible values are: userDefined, notifyDownload, autoInstallAtMaintenanceTime, autoInstallAndRebootAtMaintenanceTime, autoInstallAndRebootAtScheduledTime, autoInstallAndRebootWithoutEndUserControl."
            },
            "microsoftUpdateServiceAllowed": {
              "description": "Allow Microsoft Update Service",
              "type": "boolean"
            },
            "driversExcluded": {
              "description": "Exclude Windows update Drivers",
              "type": "boolean"
            },
            "installationSchedule": {
              "description": "Installation schedule"
            },
            "qualityUpdatesDeferralPeriodInDays": {
              "format": "int32",
              "description": "Defer Quality Updates by these many days",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "featureUpdatesDeferralPeriodInDays": {
              "format": "int32",
              "description": "Defer Feature Updates by these many days",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "qualityUpdatesPaused": {
              "description": "Pause Quality Updates",
              "type": "boolean"
            },
            "featureUpdatesPaused": {
              "description": "Pause Feature Updates",
              "type": "boolean"
            },
            "qualityUpdatesPauseExpiryDateTime": {
              "format": "date-time",
              "description": "Quality Updates Pause Expiry datetime",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "featureUpdatesPauseExpiryDateTime": {
              "format": "date-time",
              "description": "Feature Updates Pause Expiry datetime",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "businessReadyUpdatesOnly": {
              "description": "Determines which branch devices will receive their updates from. Possible values are: userDefined, all, businessReadyOnly, windowsInsiderBuildFast, windowsInsiderBuildSlow, windowsInsiderBuildRelease."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "displayName": "string",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationAssignment"
          }
        ],
        "deviceStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationDeviceStatus"
          }
        ],
        "userStatuses": [
          {
            "@odata.type": "microsoft.graph.deviceConfigurationUserStatus"
          }
        ],
        "deviceStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceOverview"
        },
        "userStatusOverview": {
          "@odata.type": "microsoft.graph.deviceConfigurationUserOverview"
        },
        "deviceSettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.settingStateDeviceSummary"
          }
        ],
        "deliveryOptimizationMode": {
          "@odata.type": "microsoft.graph.windowsDeliveryOptimizationMode"
        },
        "prereleaseFeatures": {
          "@odata.type": "microsoft.graph.prereleaseFeatures"
        },
        "automaticUpdateMode": {
          "@odata.type": "microsoft.graph.automaticUpdateMode"
        },
        "microsoftUpdateServiceAllowed": true,
        "driversExcluded": true,
        "installationSchedule": {
          "@odata.type": "microsoft.graph.windowsUpdateInstallScheduleType"
        },
        "qualityUpdatesDeferralPeriodInDays": "integer",
        "featureUpdatesDeferralPeriodInDays": "integer",
        "qualityUpdatesPaused": true,
        "featureUpdatesPaused": true,
        "qualityUpdatesPauseExpiryDateTime": "string (timestamp)",
        "featureUpdatesPauseExpiryDateTime": "string (timestamp)",
        "businessReadyUpdatesOnly": {
          "@odata.type": "microsoft.graph.windowsUpdateType"
        }
      }
    },
    "microsoft.graph.applePushNotificationCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "applePushNotificationCertificate",
          "type": "object",
          "properties": {
            "appleIdentifier": {
              "description": "Apple Id of the account used to create the MDM push certificate.",
              "type": "string"
            },
            "topicIdentifier": {
              "description": "Topic Id.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Last modified date and time for Apple push notification certificate.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The expiration date and time for Apple push notification certificate.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "certificate": {
              "description": "Not yet documented",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "appleIdentifier": "string",
        "topicIdentifier": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "expirationDateTime": "string (timestamp)",
        "certificate": "string"
      }
    },
    "microsoft.graph.detectedApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "detectedApp",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Name of the discovered application. Read-only",
              "type": "string"
            },
            "version": {
              "description": "Version of the discovered application. Read-only",
              "type": "string"
            },
            "sizeInByte": {
              "format": "int64",
              "description": "Discovered application size in bytes. Read-only",
              "type": "integer"
            },
            "deviceCount": {
              "format": "int32",
              "description": "The number of devices that have installed this application",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "managedDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDevice"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "version": "string",
        "sizeInByte": "integer",
        "deviceCount": "integer",
        "managedDevices": [
          {
            "@odata.type": "microsoft.graph.managedDevice"
          }
        ]
      }
    },
    "microsoft.graph.managedDevice": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDevice",
          "type": "object",
          "properties": {
            "userId": {
              "description": "Unique Identifier for the user associated with the device",
              "type": "string"
            },
            "deviceName": {
              "description": "Name of the device",
              "type": "string"
            },
            "managedDeviceOwnerType": {
              "description": "Ownership of the device. Can be 'company' or 'personal'. Possible values are: unknown, company, personal."
            },
            "deviceActionResults": {
              "description": "List of ComplexType deviceActionResult objects.",
              "type": "array",
              "items": { }
            },
            "enrolledDateTime": {
              "format": "date-time",
              "description": "Enrollment time of the device.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "The date and time that the device last completed a successful sync with Intune.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "operatingSystem": {
              "description": "Operating system of the device. Windows, iOS, etc.",
              "type": "string"
            },
            "complianceState": {
              "description": "Compliance state of the device. Possible values are: unknown, compliant, noncompliant, conflict, error, inGracePeriod, configManager."
            },
            "jailBroken": {
              "description": "whether the device is jail broken or rooted.",
              "type": "string"
            },
            "managementAgent": {
              "description": "Management channel of the device. Intune, EAS, etc. Possible values are: eas, mdm, easMdm, intuneClient, easIntuneClient, configurationManagerClient, configurationManagerClientMdm, configurationManagerClientMdmEas, unknown, jamf, googleCloudDevicePolicyController."
            },
            "osVersion": {
              "description": "Operating system version of the device.",
              "type": "string"
            },
            "easActivated": {
              "description": "Whether the device is Exchange ActiveSync activated.",
              "type": "boolean"
            },
            "easDeviceId": {
              "description": "Exchange ActiveSync Id of the device.",
              "type": "string"
            },
            "easActivationDateTime": {
              "format": "date-time",
              "description": "Exchange ActivationSync activation time of the device.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "azureADRegistered": {
              "description": "Whether the device is Azure Active Directory registered.",
              "type": "boolean"
            },
            "deviceEnrollmentType": {
              "description": "Enrollment type of the device. Possible values are: unknown, userEnrollment, deviceEnrollmentManager, appleBulkWithUser, appleBulkWithoutUser, windowsAzureADJoin, windowsBulkUserless, windowsAutoEnrollment, windowsBulkAzureDomainJoin, windowsCoManagement."
            },
            "activationLockBypassCode": {
              "description": "Code that allows the Activation Lock on a device to be bypassed.",
              "type": "string"
            },
            "emailAddress": {
              "description": "Email(s) for the user associated with the device",
              "type": "string"
            },
            "azureADDeviceId": {
              "description": "The unique identifier for the Azure Active Directory device. Read only.",
              "type": "string"
            },
            "deviceRegistrationState": {
              "description": "Device registration state. Possible values are: notRegistered, registered, revoked, keyConflict, approvalPending, certificateReset, notRegisteredPendingEnrollment, unknown."
            },
            "deviceCategoryDisplayName": {
              "description": "Device category display name",
              "type": "string"
            },
            "isSupervised": {
              "description": "Device supervised status",
              "type": "boolean"
            },
            "exchangeLastSuccessfulSyncDateTime": {
              "format": "date-time",
              "description": "Last time the device contacted Exchange.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "exchangeAccessState": {
              "description": "The Access State of the device in Exchange. Possible values are: none, unknown, allowed, blocked, quarantined."
            },
            "exchangeAccessStateReason": {
              "description": "The reason for the device's access state in Exchange. Possible values are: none, unknown, exchangeGlobalRule, exchangeIndividualRule, exchangeDeviceRule, exchangeUpgrade, exchangeMailboxPolicy, other, compliant, notCompliant, notEnrolled, unknownLocation, mfaRequired, azureADBlockDueToAccessPolicy, compromisedPassword, deviceNotKnownWithManagedApp."
            },
            "remoteAssistanceSessionUrl": {
              "description": "Url that allows a Remote Assistance session to be established with the device.",
              "type": "string"
            },
            "remoteAssistanceSessionErrorDetails": {
              "description": "An error string that identifies issues when creating Remote Assistance session objects.",
              "type": "string"
            },
            "isEncrypted": {
              "description": "Device encryption status",
              "type": "boolean"
            },
            "userPrincipalName": {
              "description": "Device user principal name",
              "type": "string"
            },
            "model": {
              "description": "Model of the device",
              "type": "string"
            },
            "manufacturer": {
              "description": "Manufacturer of the device",
              "type": "string"
            },
            "imei": {
              "description": "IMEI",
              "type": "string"
            },
            "complianceGracePeriodExpirationDateTime": {
              "format": "date-time",
              "description": "The DateTime when device compliance grace period expires",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "serialNumber": {
              "description": "SerialNumber",
              "type": "string"
            },
            "phoneNumber": {
              "description": "Phone number of the device",
              "type": "string"
            },
            "androidSecurityPatchLevel": {
              "description": "Android security patch level",
              "type": "string"
            },
            "userDisplayName": {
              "description": "User display name",
              "type": "string"
            },
            "configurationManagerClientEnabledFeatures": {
              "description": "ConfigrMgr client enabled features"
            },
            "wiFiMacAddress": {
              "description": "Wi-Fi MAC",
              "type": "string"
            },
            "deviceHealthAttestationState": {
              "description": "The device health attestation state."
            },
            "subscriberCarrier": {
              "description": "Subscriber Carrier",
              "type": "string"
            },
            "meid": {
              "description": "MEID",
              "type": "string"
            },
            "totalStorageSpaceInBytes": {
              "format": "int64",
              "description": "Total Storage in Bytes",
              "type": "integer"
            },
            "freeStorageSpaceInBytes": {
              "format": "int64",
              "description": "Free Storage in Bytes",
              "type": "integer"
            },
            "managedDeviceName": {
              "description": "Automatically generated name to identify a device. Can be overwritten to a user friendly name.",
              "type": "string"
            },
            "partnerReportedThreatState": {
              "description": "Indicates the threat state of a device when a Mobile Threat Defense partner is in use by the account and device. Read Only. Possible values are: unknown, activated, deactivated, secured, lowSeverity, mediumSeverity, highSeverity, unresponsive, compromised, misconfigured."
            },
            "deviceCategory": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "userId": "string",
        "deviceName": "string",
        "managedDeviceOwnerType": {
          "@odata.type": "microsoft.graph.managedDeviceOwnerType"
        },
        "deviceActionResults": [
          {
            "@odata.type": "microsoft.graph.deviceActionResult"
          }
        ],
        "enrolledDateTime": "string (timestamp)",
        "lastSyncDateTime": "string (timestamp)",
        "operatingSystem": "string",
        "complianceState": {
          "@odata.type": "microsoft.graph.complianceState"
        },
        "jailBroken": "string",
        "managementAgent": {
          "@odata.type": "microsoft.graph.managementAgentType"
        },
        "osVersion": "string",
        "easActivated": true,
        "easDeviceId": "string",
        "easActivationDateTime": "string (timestamp)",
        "azureADRegistered": true,
        "deviceEnrollmentType": {
          "@odata.type": "microsoft.graph.deviceEnrollmentType"
        },
        "activationLockBypassCode": "string",
        "emailAddress": "string",
        "azureADDeviceId": "string",
        "deviceRegistrationState": {
          "@odata.type": "microsoft.graph.deviceRegistrationState"
        },
        "deviceCategoryDisplayName": "string",
        "isSupervised": true,
        "exchangeLastSuccessfulSyncDateTime": "string (timestamp)",
        "exchangeAccessState": {
          "@odata.type": "microsoft.graph.deviceManagementExchangeAccessState"
        },
        "exchangeAccessStateReason": {
          "@odata.type": "microsoft.graph.deviceManagementExchangeAccessStateReason"
        },
        "remoteAssistanceSessionUrl": "string",
        "remoteAssistanceSessionErrorDetails": "string",
        "isEncrypted": true,
        "userPrincipalName": "string",
        "model": "string",
        "manufacturer": "string",
        "imei": "string",
        "complianceGracePeriodExpirationDateTime": "string (timestamp)",
        "serialNumber": "string",
        "phoneNumber": "string",
        "androidSecurityPatchLevel": "string",
        "userDisplayName": "string",
        "configurationManagerClientEnabledFeatures": {
          "@odata.type": "microsoft.graph.configurationManagerClientEnabledFeatures"
        },
        "wiFiMacAddress": "string",
        "deviceHealthAttestationState": {
          "@odata.type": "microsoft.graph.deviceHealthAttestationState"
        },
        "subscriberCarrier": "string",
        "meid": "string",
        "totalStorageSpaceInBytes": "integer",
        "freeStorageSpaceInBytes": "integer",
        "managedDeviceName": "string",
        "partnerReportedThreatState": {
          "@odata.type": "microsoft.graph.managedDevicePartnerReportedHealthState"
        },
        "deviceCategory": {
          "@odata.type": "microsoft.graph.deviceCategory"
        }
      }
    },
    "microsoft.graph.managedDeviceOverview": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedDeviceOverview",
          "type": "object",
          "properties": {
            "enrolledDeviceCount": {
              "format": "int32",
              "description": "Total enrolled device count. Does not include PC devices managed via Intune PC Agent",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "mdmEnrolledCount": {
              "format": "int32",
              "description": "The number of devices enrolled in MDM",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "dualEnrolledDeviceCount": {
              "format": "int32",
              "description": "The number of devices enrolled in both MDM and EAS",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "deviceOperatingSystemSummary": {
              "description": "Device operating system summary."
            },
            "deviceExchangeAccessStateSummary": {
              "description": "Distribution of Exchange Access State in Intune"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "enrolledDeviceCount": "integer",
        "mdmEnrolledCount": "integer",
        "dualEnrolledDeviceCount": "integer",
        "deviceOperatingSystemSummary": {
          "@odata.type": "microsoft.graph.deviceOperatingSystemSummary"
        },
        "deviceExchangeAccessStateSummary": {
          "@odata.type": "microsoft.graph.deviceExchangeAccessStateSummary"
        }
      }
    },
    "microsoft.graph.importedWindowsAutopilotDeviceIdentity": {
      "title": "importedWindowsAutopilotDeviceIdentity",
      "type": "object",
      "properties": {
        "id": {
          "description": "The GUID for the object",
          "type": "string"
        },
        "orderIdentifier": {
          "description": "Order Id of the Windows autopilot device.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number of the Windows autopilot device.",
          "type": "string"
        },
        "productKey": {
          "description": "Product Key of the Windows autopilot device.",
          "type": "string"
        },
        "hardwareIdentifier": {
          "format": "base64url",
          "description": "Hardware Blob of the Windows autopilot device.",
          "type": "string"
        },
        "state": {
          "description": "Current state of the imported device."
        }
      },
      "example": {
        "id": "string (identifier)",
        "orderIdentifier": "string",
        "serialNumber": "string",
        "productKey": "string",
        "hardwareIdentifier": "string",
        "state": {
          "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityState"
        }
      }
    },
    "microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload": {
      "title": "importedWindowsAutopilotDeviceIdentityUpload",
      "type": "object",
      "properties": {
        "id": {
          "description": "The GUID for the object",
          "type": "string"
        },
        "createdDateTimeUtc": {
          "format": "date-time",
          "description": "DateTime when the entity is created.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "status": {
          "description": "Upload status. Possible values are: noUpload, pending, complete, error."
        },
        "deviceIdentities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/microsoft.graph.importedWindowsAutopilotDeviceIdentity"
          }
        }
      },
      "example": {
        "id": "string (identifier)",
        "createdDateTimeUtc": "string (timestamp)",
        "status": {
          "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityUploadStatus"
        },
        "deviceIdentities": [
          {
            "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentity"
          }
        ]
      }
    },
    "microsoft.graph.managedAppPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedAppPolicy",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Policy display name.",
              "type": "string"
            },
            "description": {
              "description": "The policy's description.",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "The date and time the policy was created.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Last time the policy was modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string"
      }
    },
    "microsoft.graph.managedAppProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
        },
        {
          "title": "managedAppProtection",
          "type": "object",
          "properties": {
            "periodOfflineBeforeAccessCheck": {
              "format": "duration",
              "description": "The period after which access is checked when the device is not connected to the internet.",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "periodOnlineBeforeAccessCheck": {
              "format": "duration",
              "description": "The period after which access is checked when the device is connected to the internet.",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "allowedInboundDataTransferSources": {
              "description": "Sources from which data is allowed to be transferred. Possible values are: allApps, managedApps, none."
            },
            "allowedOutboundDataTransferDestinations": {
              "description": "Destinations to which data is allowed to be transferred. Possible values are: allApps, managedApps, none."
            },
            "organizationalCredentialsRequired": {
              "description": "Indicates whether organizational credentials are required for app use.",
              "type": "boolean"
            },
            "allowedOutboundClipboardSharingLevel": {
              "description": "The level to which the clipboard may be shared between apps on the managed device. Possible values are: allApps, managedAppsWithPasteIn, managedApps, blocked."
            },
            "dataBackupBlocked": {
              "description": "Indicates whether the backup of a managed app's data is blocked.",
              "type": "boolean"
            },
            "deviceComplianceRequired": {
              "description": "Indicates whether device compliance is required.",
              "type": "boolean"
            },
            "managedBrowserToOpenLinksRequired": {
              "description": "Indicates whether internet links should be opened in the managed browser app.",
              "type": "boolean"
            },
            "saveAsBlocked": {
              "description": "Indicates whether users may use the 'Save As' menu item to save a copy of protected files.",
              "type": "boolean"
            },
            "periodOfflineBeforeWipeIsEnforced": {
              "format": "duration",
              "description": "The amount of time an app is allowed to remain disconnected from the internet before all managed data it is wiped.",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "pinRequired": {
              "description": "Indicates whether an app-level pin is required.",
              "type": "boolean"
            },
            "maximumPinRetries": {
              "format": "int32",
              "description": "Maximum number of incorrect pin retry attempts before the managed app is either blocked or wiped.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "simplePinBlocked": {
              "description": "Indicates whether simplePin is blocked.",
              "type": "boolean"
            },
            "minimumPinLength": {
              "format": "int32",
              "description": "Minimum pin length required for an app-level pin if PinRequired is set to True",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pinCharacterSet": {
              "description": "Character set which may be used for an app-level pin if PinRequired is set to True. Possible values are: numeric, alphanumericAndSymbol."
            },
            "periodBeforePinReset": {
              "format": "duration",
              "description": "TimePeriod before the all-level pin must be reset if PinRequired is set to True.",
              "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
              "type": "string"
            },
            "allowedDataStorageLocations": {
              "description": "Data storage locations where a user may store managed data.",
              "type": "array",
              "items": { }
            },
            "contactSyncBlocked": {
              "description": "Indicates whether contacts can be synced to the user's device.",
              "type": "boolean"
            },
            "printBlocked": {
              "description": "Indicates whether printing is allowed from managed apps.",
              "type": "boolean"
            },
            "fingerprintBlocked": {
              "description": "Indicates whether use of the fingerprint reader is allowed in place of a pin if PinRequired is set to True.",
              "type": "boolean"
            },
            "disableAppPinIfDevicePinIsSet": {
              "description": "Indicates whether use of the app pin is required if the device pin is set.",
              "type": "boolean"
            },
            "minimumRequiredOsVersion": {
              "description": "Versions less than the specified version will block the managed app from accessing company data.",
              "type": "string"
            },
            "minimumWarningOsVersion": {
              "description": "Versions less than the specified version will result in warning message on the managed app from accessing company data.",
              "type": "string"
            },
            "minimumRequiredAppVersion": {
              "description": "Versions less than the specified version will block the managed app from accessing company data.",
              "type": "string"
            },
            "minimumWarningAppVersion": {
              "description": "Versions less than the specified version will result in warning message on the managed app.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string",
        "periodOfflineBeforeAccessCheck": "string",
        "periodOnlineBeforeAccessCheck": "string",
        "allowedInboundDataTransferSources": {
          "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
        },
        "allowedOutboundDataTransferDestinations": {
          "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
        },
        "organizationalCredentialsRequired": true,
        "allowedOutboundClipboardSharingLevel": {
          "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
        },
        "dataBackupBlocked": true,
        "deviceComplianceRequired": true,
        "managedBrowserToOpenLinksRequired": true,
        "saveAsBlocked": true,
        "periodOfflineBeforeWipeIsEnforced": "string",
        "pinRequired": true,
        "maximumPinRetries": "integer",
        "simplePinBlocked": true,
        "minimumPinLength": "integer",
        "pinCharacterSet": {
          "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
        },
        "periodBeforePinReset": "string",
        "allowedDataStorageLocations": [
          {
            "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
          }
        ],
        "contactSyncBlocked": true,
        "printBlocked": true,
        "fingerprintBlocked": true,
        "disableAppPinIfDevicePinIsSet": true,
        "minimumRequiredOsVersion": "string",
        "minimumWarningOsVersion": "string",
        "minimumRequiredAppVersion": "string",
        "minimumWarningAppVersion": "string"
      }
    },
    "microsoft.graph.targetedManagedAppProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppProtection"
        },
        {
          "title": "targetedManagedAppProtection",
          "type": "object",
          "properties": {
            "isAssigned": {
              "description": "Indicates if the policy is deployed to any inclusion groups or not.",
              "type": "boolean"
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.targetedManagedAppPolicyAssignment"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string",
        "periodOfflineBeforeAccessCheck": "string",
        "periodOnlineBeforeAccessCheck": "string",
        "allowedInboundDataTransferSources": {
          "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
        },
        "allowedOutboundDataTransferDestinations": {
          "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
        },
        "organizationalCredentialsRequired": true,
        "allowedOutboundClipboardSharingLevel": {
          "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
        },
        "dataBackupBlocked": true,
        "deviceComplianceRequired": true,
        "managedBrowserToOpenLinksRequired": true,
        "saveAsBlocked": true,
        "periodOfflineBeforeWipeIsEnforced": "string",
        "pinRequired": true,
        "maximumPinRetries": "integer",
        "simplePinBlocked": true,
        "minimumPinLength": "integer",
        "pinCharacterSet": {
          "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
        },
        "periodBeforePinReset": "string",
        "allowedDataStorageLocations": [
          {
            "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
          }
        ],
        "contactSyncBlocked": true,
        "printBlocked": true,
        "fingerprintBlocked": true,
        "disableAppPinIfDevicePinIsSet": true,
        "minimumRequiredOsVersion": "string",
        "minimumWarningOsVersion": "string",
        "minimumRequiredAppVersion": "string",
        "minimumWarningAppVersion": "string",
        "isAssigned": true,
        "assignments": [
          {
            "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
          }
        ]
      }
    },
    "microsoft.graph.androidManagedAppProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.targetedManagedAppProtection"
        },
        {
          "title": "androidManagedAppProtection",
          "type": "object",
          "properties": {
            "screenCaptureBlocked": {
              "description": "Indicates whether a managed user can take screen captures of managed apps",
              "type": "boolean"
            },
            "disableAppEncryptionIfDeviceEncryptionIsEnabled": {
              "description": "When this setting is enabled, app level encryption is disabled if device level encryption is enabled",
              "type": "boolean"
            },
            "encryptAppData": {
              "description": "Indicates whether application data for managed apps should be encrypted",
              "type": "boolean"
            },
            "deployedAppCount": {
              "format": "int32",
              "description": "Count of apps to which the current policy is deployed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "minimumRequiredPatchVersion": {
              "description": "Define the oldest required Android security patch level a user can have to gain secure access to the app.",
              "type": "string"
            },
            "minimumWarningPatchVersion": {
              "description": "Define the oldest recommended Android security patch level a user can have for secure access to the app.",
              "type": "string"
            },
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedMobileApp"
              }
            },
            "deploymentSummary": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string",
        "periodOfflineBeforeAccessCheck": "string",
        "periodOnlineBeforeAccessCheck": "string",
        "allowedInboundDataTransferSources": {
          "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
        },
        "allowedOutboundDataTransferDestinations": {
          "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
        },
        "organizationalCredentialsRequired": true,
        "allowedOutboundClipboardSharingLevel": {
          "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
        },
        "dataBackupBlocked": true,
        "deviceComplianceRequired": true,
        "managedBrowserToOpenLinksRequired": true,
        "saveAsBlocked": true,
        "periodOfflineBeforeWipeIsEnforced": "string",
        "pinRequired": true,
        "maximumPinRetries": "integer",
        "simplePinBlocked": true,
        "minimumPinLength": "integer",
        "pinCharacterSet": {
          "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
        },
        "periodBeforePinReset": "string",
        "allowedDataStorageLocations": [
          {
            "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
          }
        ],
        "contactSyncBlocked": true,
        "printBlocked": true,
        "fingerprintBlocked": true,
        "disableAppPinIfDevicePinIsSet": true,
        "minimumRequiredOsVersion": "string",
        "minimumWarningOsVersion": "string",
        "minimumRequiredAppVersion": "string",
        "minimumWarningAppVersion": "string",
        "isAssigned": true,
        "assignments": [
          {
            "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
          }
        ],
        "screenCaptureBlocked": true,
        "disableAppEncryptionIfDeviceEncryptionIsEnabled": true,
        "encryptAppData": true,
        "deployedAppCount": "integer",
        "minimumRequiredPatchVersion": "string",
        "minimumWarningPatchVersion": "string",
        "apps": [
          {
            "@odata.type": "microsoft.graph.managedMobileApp"
          }
        ],
        "deploymentSummary": {
          "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
        }
      }
    },
    "microsoft.graph.managedAppRegistration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedAppRegistration",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "description": "Date and time of creation",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "Date and time of last the app synced with management service.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "applicationVersion": {
              "description": "App version",
              "type": "string"
            },
            "managementSdkVersion": {
              "description": "App management SDK version",
              "type": "string"
            },
            "platformVersion": {
              "description": "Operating System version",
              "type": "string"
            },
            "deviceType": {
              "description": "Host device type",
              "type": "string"
            },
            "deviceTag": {
              "description": "App management SDK generated tag, which helps relate apps hosted on the same device. Not guaranteed to relate apps in all conditions.",
              "type": "string"
            },
            "deviceName": {
              "description": "Host device name",
              "type": "string"
            },
            "flaggedReasons": {
              "description": "Zero or more reasons an app registration is flagged. E.g. app running on rooted device",
              "type": "array",
              "items": { }
            },
            "userId": {
              "description": "The user Id to who this app registration belongs.",
              "type": "string"
            },
            "appIdentifier": {
              "description": "The app package Identifier"
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            },
            "appliedPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
              }
            },
            "intendedPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
              }
            },
            "operations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppOperation"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "lastSyncDateTime": "string (timestamp)",
        "applicationVersion": "string",
        "managementSdkVersion": "string",
        "platformVersion": "string",
        "deviceType": "string",
        "deviceTag": "string",
        "deviceName": "string",
        "flaggedReasons": [
          {
            "@odata.type": "microsoft.graph.managedAppFlaggedReason"
          }
        ],
        "userId": "string",
        "appIdentifier": {
          "@odata.type": "microsoft.graph.mobileAppIdentifier"
        },
        "version": "string",
        "appliedPolicies": [
          {
            "@odata.type": "microsoft.graph.managedAppPolicy"
          }
        ],
        "intendedPolicies": [
          {
            "@odata.type": "microsoft.graph.managedAppPolicy"
          }
        ],
        "operations": [
          {
            "@odata.type": "microsoft.graph.managedAppOperation"
          }
        ]
      }
    },
    "microsoft.graph.androidManagedAppRegistration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
        },
        {
          "title": "androidManagedAppRegistration",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "lastSyncDateTime": "string (timestamp)",
        "applicationVersion": "string",
        "managementSdkVersion": "string",
        "platformVersion": "string",
        "deviceType": "string",
        "deviceTag": "string",
        "deviceName": "string",
        "flaggedReasons": [
          {
            "@odata.type": "microsoft.graph.managedAppFlaggedReason"
          }
        ],
        "userId": "string",
        "appIdentifier": {
          "@odata.type": "microsoft.graph.mobileAppIdentifier"
        },
        "version": "string",
        "appliedPolicies": [
          {
            "@odata.type": "microsoft.graph.managedAppPolicy"
          }
        ],
        "intendedPolicies": [
          {
            "@odata.type": "microsoft.graph.managedAppPolicy"
          }
        ],
        "operations": [
          {
            "@odata.type": "microsoft.graph.managedAppOperation"
          }
        ]
      }
    },
    "microsoft.graph.defaultManagedAppProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppProtection"
        },
        {
          "title": "defaultManagedAppProtection",
          "type": "object",
          "properties": {
            "appDataEncryptionType": {
              "description": "Type of encryption which should be used for data in a managed app. (iOS Only). Possible values are: useDeviceSettings, afterDeviceRestart, whenDeviceLockedExceptOpenFiles, whenDeviceLocked."
            },
            "screenCaptureBlocked": {
              "description": "Indicates whether screen capture is blocked. (Android only)",
              "type": "boolean"
            },
            "encryptAppData": {
              "description": "Indicates whether managed-app data should be encrypted. (Android only)",
              "type": "boolean"
            },
            "disableAppEncryptionIfDeviceEncryptionIsEnabled": {
              "description": "When this setting is enabled, app level encryption is disabled if device level encryption is enabled. (Android only)",
              "type": "boolean"
            },
            "minimumRequiredSdkVersion": {
              "description": "Versions less than the specified version will block the managed app from accessing company data. (iOS Only)",
              "type": "string"
            },
            "customSettings": {
              "description": "A set of string key and string value pairs to be sent to the affected users, unalterned by this service",
              "type": "array",
              "items": { }
            },
            "deployedAppCount": {
              "format": "int32",
              "description": "Count of apps to which the current policy is deployed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "minimumRequiredPatchVersion": {
              "description": "Define the oldest required Android security patch level a user can have to gain secure access to the app. (Android only)",
              "type": "string"
            },
            "minimumWarningPatchVersion": {
              "description": "Define the oldest recommended Android security patch level a user can have for secure access to the app. (Android only)",
              "type": "string"
            },
            "faceIdBlocked": {
              "description": "Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True. (iOS Only)",
              "type": "boolean"
            },
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedMobileApp"
              }
            },
            "deploymentSummary": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string",
        "periodOfflineBeforeAccessCheck": "string",
        "periodOnlineBeforeAccessCheck": "string",
        "allowedInboundDataTransferSources": {
          "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
        },
        "allowedOutboundDataTransferDestinations": {
          "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
        },
        "organizationalCredentialsRequired": true,
        "allowedOutboundClipboardSharingLevel": {
          "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
        },
        "dataBackupBlocked": true,
        "deviceComplianceRequired": true,
        "managedBrowserToOpenLinksRequired": true,
        "saveAsBlocked": true,
        "periodOfflineBeforeWipeIsEnforced": "string",
        "pinRequired": true,
        "maximumPinRetries": "integer",
        "simplePinBlocked": true,
        "minimumPinLength": "integer",
        "pinCharacterSet": {
          "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
        },
        "periodBeforePinReset": "string",
        "allowedDataStorageLocations": [
          {
            "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
          }
        ],
        "contactSyncBlocked": true,
        "printBlocked": true,
        "fingerprintBlocked": true,
        "disableAppPinIfDevicePinIsSet": true,
        "minimumRequiredOsVersion": "string",
        "minimumWarningOsVersion": "string",
        "minimumRequiredAppVersion": "string",
        "minimumWarningAppVersion": "string",
        "appDataEncryptionType": {
          "@odata.type": "microsoft.graph.managedAppDataEncryptionType"
        },
        "screenCaptureBlocked": true,
        "encryptAppData": true,
        "disableAppEncryptionIfDeviceEncryptionIsEnabled": true,
        "minimumRequiredSdkVersion": "string",
        "customSettings": [
          {
            "@odata.type": "microsoft.graph.keyValuePair"
          }
        ],
        "deployedAppCount": "integer",
        "minimumRequiredPatchVersion": "string",
        "minimumWarningPatchVersion": "string",
        "faceIdBlocked": true,
        "apps": [
          {
            "@odata.type": "microsoft.graph.managedMobileApp"
          }
        ],
        "deploymentSummary": {
          "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
        }
      }
    },
    "microsoft.graph.iosManagedAppProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.targetedManagedAppProtection"
        },
        {
          "title": "iosManagedAppProtection",
          "type": "object",
          "properties": {
            "appDataEncryptionType": {
              "description": "Type of encryption which should be used for data in a managed app. Possible values are: useDeviceSettings, afterDeviceRestart, whenDeviceLockedExceptOpenFiles, whenDeviceLocked."
            },
            "minimumRequiredSdkVersion": {
              "description": "Versions less than the specified version will block the managed app from accessing company data.",
              "type": "string"
            },
            "deployedAppCount": {
              "format": "int32",
              "description": "Count of apps to which the current policy is deployed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "faceIdBlocked": {
              "description": "Indicates whether use of the FaceID is allowed in place of a pin if PinRequired is set to True.",
              "type": "boolean"
            },
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedMobileApp"
              }
            },
            "deploymentSummary": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string",
        "periodOfflineBeforeAccessCheck": "string",
        "periodOnlineBeforeAccessCheck": "string",
        "allowedInboundDataTransferSources": {
          "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
        },
        "allowedOutboundDataTransferDestinations": {
          "@odata.type": "microsoft.graph.managedAppDataTransferLevel"
        },
        "organizationalCredentialsRequired": true,
        "allowedOutboundClipboardSharingLevel": {
          "@odata.type": "microsoft.graph.managedAppClipboardSharingLevel"
        },
        "dataBackupBlocked": true,
        "deviceComplianceRequired": true,
        "managedBrowserToOpenLinksRequired": true,
        "saveAsBlocked": true,
        "periodOfflineBeforeWipeIsEnforced": "string",
        "pinRequired": true,
        "maximumPinRetries": "integer",
        "simplePinBlocked": true,
        "minimumPinLength": "integer",
        "pinCharacterSet": {
          "@odata.type": "microsoft.graph.managedAppPinCharacterSet"
        },
        "periodBeforePinReset": "string",
        "allowedDataStorageLocations": [
          {
            "@odata.type": "microsoft.graph.managedAppDataStorageLocation"
          }
        ],
        "contactSyncBlocked": true,
        "printBlocked": true,
        "fingerprintBlocked": true,
        "disableAppPinIfDevicePinIsSet": true,
        "minimumRequiredOsVersion": "string",
        "minimumWarningOsVersion": "string",
        "minimumRequiredAppVersion": "string",
        "minimumWarningAppVersion": "string",
        "isAssigned": true,
        "assignments": [
          {
            "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
          }
        ],
        "appDataEncryptionType": {
          "@odata.type": "microsoft.graph.managedAppDataEncryptionType"
        },
        "minimumRequiredSdkVersion": "string",
        "deployedAppCount": "integer",
        "faceIdBlocked": true,
        "apps": [
          {
            "@odata.type": "microsoft.graph.managedMobileApp"
          }
        ],
        "deploymentSummary": {
          "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
        }
      }
    },
    "microsoft.graph.iosManagedAppRegistration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
        },
        {
          "title": "iosManagedAppRegistration",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "lastSyncDateTime": "string (timestamp)",
        "applicationVersion": "string",
        "managementSdkVersion": "string",
        "platformVersion": "string",
        "deviceType": "string",
        "deviceTag": "string",
        "deviceName": "string",
        "flaggedReasons": [
          {
            "@odata.type": "microsoft.graph.managedAppFlaggedReason"
          }
        ],
        "userId": "string",
        "appIdentifier": {
          "@odata.type": "microsoft.graph.mobileAppIdentifier"
        },
        "version": "string",
        "appliedPolicies": [
          {
            "@odata.type": "microsoft.graph.managedAppPolicy"
          }
        ],
        "intendedPolicies": [
          {
            "@odata.type": "microsoft.graph.managedAppPolicy"
          }
        ],
        "operations": [
          {
            "@odata.type": "microsoft.graph.managedAppOperation"
          }
        ]
      }
    },
    "microsoft.graph.managedAppConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
        },
        {
          "title": "managedAppConfiguration",
          "type": "object",
          "properties": {
            "customSettings": {
              "description": "A set of string key and string value pairs to be sent to apps for users to whom the configuration is scoped, unalterned by this service",
              "type": "array",
              "items": { }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string",
        "customSettings": [
          {
            "@odata.type": "microsoft.graph.keyValuePair"
          }
        ]
      }
    },
    "microsoft.graph.managedAppOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedAppOperation",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The operation name.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The last time the app operation was modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "state": {
              "description": "The current state of the operation",
              "type": "string"
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "state": "string",
        "version": "string"
      }
    },
    "microsoft.graph.managedAppPolicyDeploymentSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedAppPolicyDeploymentSummary",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Not yet documented",
              "type": "string"
            },
            "configurationDeployedUserCount": {
              "format": "int32",
              "description": "Not yet documented",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "lastRefreshTime": {
              "format": "date-time",
              "description": "Not yet documented",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "configurationDeploymentSummaryPerApp": {
              "description": "Not yet documented",
              "type": "array",
              "items": { }
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "configurationDeployedUserCount": "integer",
        "lastRefreshTime": "string (timestamp)",
        "configurationDeploymentSummaryPerApp": [
          {
            "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummaryPerApp"
          }
        ],
        "version": "string"
      }
    },
    "microsoft.graph.managedAppStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedAppStatus",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Friendly name of the status report.",
              "type": "string"
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "version": "string"
      }
    },
    "microsoft.graph.managedAppStatusRaw": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppStatus"
        },
        {
          "title": "managedAppStatusRaw",
          "type": "object",
          "properties": {
            "content": {
              "description": "Status report content."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "version": "string",
        "content": {
          "@odata.type": "microsoft.graph.Json"
        }
      }
    },
    "microsoft.graph.managedMobileApp": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "managedMobileApp",
          "type": "object",
          "properties": {
            "mobileAppIdentifier": {
              "description": "The identifier for an app with it's operating system type."
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "mobileAppIdentifier": {
          "@odata.type": "microsoft.graph.mobileAppIdentifier"
        },
        "version": "string"
      }
    },
    "microsoft.graph.windowsInformationProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
        },
        {
          "title": "windowsInformationProtection",
          "type": "object",
          "properties": {
            "enforcementLevel": {
              "description": "WIP enforcement level.See the Enum definition for supported values. Possible values are: noProtection, encryptAndAuditOnly, encryptAuditAndPrompt, encryptAuditAndBlock."
            },
            "enterpriseDomain": {
              "description": "Primary enterprise domain",
              "type": "string"
            },
            "enterpriseProtectedDomainNames": {
              "description": "List of enterprise domains to be protected",
              "type": "array",
              "items": { }
            },
            "protectionUnderLockConfigRequired": {
              "description": "Specifies whether the protection under lock feature (also known as encrypt under pin) should be configured",
              "type": "boolean"
            },
            "dataRecoveryCertificate": {
              "description": "Specifies a recovery certificate that can be used for data recovery of encrypted files. This is the same as the data recovery agent(DRA) certificate for encrypting file system(EFS)"
            },
            "revokeOnUnenrollDisabled": {
              "description": "This policy controls whether to revoke the WIP keys when a device unenrolls from the management service. If set to 1 (Don't revoke keys), the keys will not be revoked and the user will continue to have access to protected files after unenrollment. If the keys are not revoked, there will be no revoked file cleanup subsequently.",
              "type": "boolean"
            },
            "rightsManagementServicesTemplateId": {
              "format": "uuid",
              "description": "TemplateID GUID to use for RMS encryption. The RMS template allows the IT admin to configure the details about who has access to RMS-protected file and how long they have access",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "azureRightsManagementServicesAllowed": {
              "description": "Specifies whether to allow Azure RMS encryption for WIP",
              "type": "boolean"
            },
            "iconsVisible": {
              "description": "Determines whether overlays are added to icons for WIP protected files in Explorer and enterprise only app tiles in the Start menu. Starting in Windows 10, version 1703 this setting also configures the visibility of the WIP icon in the title bar of a WIP-protected app",
              "type": "boolean"
            },
            "protectedApps": {
              "description": "Protected applications can access enterprise data and the data handled by those applications are protected with encryption",
              "type": "array",
              "items": { }
            },
            "exemptApps": {
              "description": "Exempt applications can also access enterprise data, but the data handled by those applications are not protected. This is because some critical enterprise applications may have compatibility problems with encrypted data.",
              "type": "array",
              "items": { }
            },
            "enterpriseNetworkDomainNames": {
              "description": "This is the list of domains that comprise the boundaries of the enterprise. Data from one of these domains that is sent to a device will be considered enterprise data and protected These locations will be considered a safe destination for enterprise data to be shared to",
              "type": "array",
              "items": { }
            },
            "enterpriseProxiedDomains": {
              "description": "Contains a list of Enterprise resource domains hosted in the cloud that need to be protected. Connections to these resources are considered enterprise data. If a proxy is paired with a cloud resource, traffic to the cloud resource will be routed through the enterprise network via the denoted proxy server (on Port 80). A proxy server used for this purpose must also be configured using the EnterpriseInternalProxyServers policy",
              "type": "array",
              "items": { }
            },
            "enterpriseIPRanges": {
              "description": "Sets the enterprise IP ranges that define the computers in the enterprise network. Data that comes from those computers will be considered part of the enterprise and protected. These locations will be considered a safe destination for enterprise data to be shared to",
              "type": "array",
              "items": { }
            },
            "enterpriseIPRangesAreAuthoritative": {
              "description": "Boolean value that tells the client to accept the configured list and not to use heuristics to attempt to find other subnets. Default is false",
              "type": "boolean"
            },
            "enterpriseProxyServers": {
              "description": "This is a list of proxy servers. Any server not on this list is considered non-enterprise",
              "type": "array",
              "items": { }
            },
            "enterpriseInternalProxyServers": {
              "description": "This is the comma-separated list of internal proxy servers. For example, '157.54.14.28, 157.54.11.118, 10.202.14.167, 157.53.14.163, 157.69.210.59'. These proxies have been configured by the admin to connect to specific resources on the Internet. They are considered to be enterprise network locations. The proxies are only leveraged in configuring the EnterpriseProxiedDomains policy to force traffic to the matched domains through these proxies",
              "type": "array",
              "items": { }
            },
            "enterpriseProxyServersAreAuthoritative": {
              "description": "Boolean value that tells the client to accept the configured list of proxies and not try to detect other work proxies. Default is false",
              "type": "boolean"
            },
            "neutralDomainResources": {
              "description": "List of domain names that can used for work or personal resource",
              "type": "array",
              "items": { }
            },
            "indexingEncryptedStoresOrItemsBlocked": {
              "description": "This switch is for the Windows Search Indexer, to allow or disallow indexing of items",
              "type": "boolean"
            },
            "smbAutoEncryptedFileExtensions": {
              "description": "Specifies a list of file extensions, so that files with these extensions are encrypted when copying from an SMB share within the corporate boundary",
              "type": "array",
              "items": { }
            },
            "isAssigned": {
              "description": "Indicates if the policy is deployed to any inclusion groups or not.",
              "type": "boolean"
            },
            "protectedAppLockerFiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionAppLockerFile"
              }
            },
            "exemptAppLockerFiles": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionAppLockerFile"
              }
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.targetedManagedAppPolicyAssignment"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string",
        "enforcementLevel": {
          "@odata.type": "microsoft.graph.windowsInformationProtectionEnforcementLevel"
        },
        "enterpriseDomain": "string",
        "enterpriseProtectedDomainNames": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "protectionUnderLockConfigRequired": true,
        "dataRecoveryCertificate": {
          "@odata.type": "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
        },
        "revokeOnUnenrollDisabled": true,
        "rightsManagementServicesTemplateId": "string",
        "azureRightsManagementServicesAllowed": true,
        "iconsVisible": true,
        "protectedApps": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
          }
        ],
        "exemptApps": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
          }
        ],
        "enterpriseNetworkDomainNames": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "enterpriseProxiedDomains": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
          }
        ],
        "enterpriseIPRanges": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionIPRangeCollection"
          }
        ],
        "enterpriseIPRangesAreAuthoritative": true,
        "enterpriseProxyServers": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "enterpriseInternalProxyServers": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "enterpriseProxyServersAreAuthoritative": true,
        "neutralDomainResources": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "indexingEncryptedStoresOrItemsBlocked": true,
        "smbAutoEncryptedFileExtensions": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "isAssigned": true,
        "protectedAppLockerFiles": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
          }
        ],
        "exemptAppLockerFiles": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
          }
        ]
      }
    },
    "microsoft.graph.mdmWindowsInformationProtectionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsInformationProtection"
        },
        {
          "title": "mdmWindowsInformationProtectionPolicy",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string",
        "enforcementLevel": {
          "@odata.type": "microsoft.graph.windowsInformationProtectionEnforcementLevel"
        },
        "enterpriseDomain": "string",
        "enterpriseProtectedDomainNames": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "protectionUnderLockConfigRequired": true,
        "dataRecoveryCertificate": {
          "@odata.type": "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
        },
        "revokeOnUnenrollDisabled": true,
        "rightsManagementServicesTemplateId": "string",
        "azureRightsManagementServicesAllowed": true,
        "iconsVisible": true,
        "protectedApps": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
          }
        ],
        "exemptApps": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
          }
        ],
        "enterpriseNetworkDomainNames": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "enterpriseProxiedDomains": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
          }
        ],
        "enterpriseIPRanges": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionIPRangeCollection"
          }
        ],
        "enterpriseIPRangesAreAuthoritative": true,
        "enterpriseProxyServers": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "enterpriseInternalProxyServers": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "enterpriseProxyServersAreAuthoritative": true,
        "neutralDomainResources": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "indexingEncryptedStoresOrItemsBlocked": true,
        "smbAutoEncryptedFileExtensions": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "isAssigned": true,
        "protectedAppLockerFiles": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
          }
        ],
        "exemptAppLockerFiles": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
          }
        ]
      }
    },
    "microsoft.graph.targetedManagedAppConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.managedAppConfiguration"
        },
        {
          "title": "targetedManagedAppConfiguration",
          "type": "object",
          "properties": {
            "deployedAppCount": {
              "format": "int32",
              "description": "Count of apps to which the current policy is deployed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "isAssigned": {
              "description": "Indicates if the policy is deployed to any inclusion groups or not.",
              "type": "boolean"
            },
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedMobileApp"
              }
            },
            "deploymentSummary": { },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.targetedManagedAppPolicyAssignment"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string",
        "customSettings": [
          {
            "@odata.type": "microsoft.graph.keyValuePair"
          }
        ],
        "deployedAppCount": "integer",
        "isAssigned": true,
        "apps": [
          {
            "@odata.type": "microsoft.graph.managedMobileApp"
          }
        ],
        "deploymentSummary": {
          "@odata.type": "microsoft.graph.managedAppPolicyDeploymentSummary"
        },
        "assignments": [
          {
            "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
          }
        ]
      }
    },
    "microsoft.graph.targetedManagedAppPolicyAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "targetedManagedAppPolicyAssignment",
          "type": "object",
          "properties": {
            "target": {
              "description": "Identifier for deployment of a group or app"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "target": {
          "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
        }
      }
    },
    "microsoft.graph.windowsInformationProtectionAppLockerFile": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsInformationProtectionAppLockerFile",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The friendly name",
              "type": "string"
            },
            "fileHash": {
              "description": "SHA256 hash of the file",
              "type": "string"
            },
            "file": {
              "format": "base64url",
              "description": "File as a byte array",
              "type": "string"
            },
            "version": {
              "description": "Version of the entity.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "fileHash": "string",
        "file": "string",
        "version": "string"
      }
    },
    "microsoft.graph.windowsInformationProtectionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.windowsInformationProtection"
        },
        {
          "title": "windowsInformationProtectionPolicy",
          "type": "object",
          "properties": {
            "revokeOnMdmHandoffDisabled": {
              "description": "New property in RS2, pending documentation",
              "type": "boolean"
            },
            "mdmEnrollmentUrl": {
              "description": "Enrollment url for the MDM",
              "type": "string"
            },
            "windowsHelloForBusinessBlocked": {
              "description": "Boolean value that sets Windows Hello for Business as a method for signing into Windows.",
              "type": "boolean"
            },
            "pinMinimumLength": {
              "format": "int32",
              "description": "Integer value that sets the minimum number of characters required for the PIN. Default value is 4. The lowest number you can configure for this policy setting is 4. The largest number you can configure must be less than the number configured in the Maximum PIN length policy setting or the number 127, whichever is the lowest.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pinUppercaseLetters": {
              "description": "Integer value that configures the use of uppercase letters in the Windows Hello for Business PIN. Default is NotAllow. Possible values are: notAllow, requireAtLeastOne, allow."
            },
            "pinLowercaseLetters": {
              "description": "Integer value that configures the use of lowercase letters in the Windows Hello for Business PIN. Default is NotAllow. Possible values are: notAllow, requireAtLeastOne, allow."
            },
            "pinSpecialCharacters": {
              "description": "Integer value that configures the use of special characters in the Windows Hello for Business PIN. Valid special characters for Windows Hello for Business PIN gestures include: ! ' # $ % & ' ( )  + , - . / : ; < = > ? @ [ / ] ^  ` {"
            },
            "pinExpirationDays": {
              "format": "int32",
              "description": "Integer value specifies the period of time (in days) that a PIN can be used before the system requires the user to change it. The largest number you can configure for this policy setting is 730. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then the user's PIN will never expire. This node was added in Windows 10, version 1511. Default is 0.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "numberOfPastPinsRemembered": {
              "format": "int32",
              "description": "Integer value that specifies the number of past PINs that can be associated to a user account that can't be reused. The largest number you can configure for this policy setting is 50. The lowest number you can configure for this policy setting is 0. If this policy is set to 0, then storage of previous PINs is not required. This node was added in Windows 10, version 1511. Default is 0.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "passwordMaximumAttemptCount": {
              "format": "int32",
              "description": "The number of authentication failures allowed before the device will be wiped. A value of 0 disables device wipe functionality. Range is an integer X where 4 <= X <= 16 for desktop and 0 <= X <= 999 for mobile devices.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "minutesOfInactivityBeforeDeviceLock": {
              "format": "int32",
              "description": "Specifies the maximum amount of time (in minutes) allowed after the device is idle that will cause the device to become PIN or password locked.   Range is an integer X where 0 <= X <= 999.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "daysWithoutContactBeforeUnenroll": {
              "format": "int32",
              "description": "Offline interval before app data is wiped (days)",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "string",
        "enforcementLevel": {
          "@odata.type": "microsoft.graph.windowsInformationProtectionEnforcementLevel"
        },
        "enterpriseDomain": "string",
        "enterpriseProtectedDomainNames": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "protectionUnderLockConfigRequired": true,
        "dataRecoveryCertificate": {
          "@odata.type": "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate"
        },
        "revokeOnUnenrollDisabled": true,
        "rightsManagementServicesTemplateId": "string",
        "azureRightsManagementServicesAllowed": true,
        "iconsVisible": true,
        "protectedApps": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
          }
        ],
        "exemptApps": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionApp"
          }
        ],
        "enterpriseNetworkDomainNames": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "enterpriseProxiedDomains": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionProxiedDomainCollection"
          }
        ],
        "enterpriseIPRanges": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionIPRangeCollection"
          }
        ],
        "enterpriseIPRangesAreAuthoritative": true,
        "enterpriseProxyServers": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "enterpriseInternalProxyServers": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "enterpriseProxyServersAreAuthoritative": true,
        "neutralDomainResources": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "indexingEncryptedStoresOrItemsBlocked": true,
        "smbAutoEncryptedFileExtensions": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionResourceCollection"
          }
        ],
        "isAssigned": true,
        "protectedAppLockerFiles": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
          }
        ],
        "exemptAppLockerFiles": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionAppLockerFile"
          }
        ],
        "assignments": [
          {
            "@odata.type": "microsoft.graph.targetedManagedAppPolicyAssignment"
          }
        ],
        "revokeOnMdmHandoffDisabled": true,
        "mdmEnrollmentUrl": "string",
        "windowsHelloForBusinessBlocked": true,
        "pinMinimumLength": "integer",
        "pinUppercaseLetters": {
          "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
        },
        "pinLowercaseLetters": {
          "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
        },
        "pinSpecialCharacters": {
          "@odata.type": "microsoft.graph.windowsInformationProtectionPinCharacterRequirements"
        },
        "pinExpirationDays": "integer",
        "numberOfPastPinsRemembered": "integer",
        "passwordMaximumAttemptCount": "integer",
        "minutesOfInactivityBeforeDeviceLock": "integer",
        "daysWithoutContactBeforeUnenroll": "integer"
      }
    },
    "microsoft.graph.localizedNotificationMessage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "localizedNotificationMessage",
          "type": "object",
          "properties": {
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "locale": {
              "description": "The Locale for which this message is destined.",
              "type": "string"
            },
            "subject": {
              "description": "The Message Template Subject.",
              "type": "string"
            },
            "messageTemplate": {
              "description": "The Message Template content.",
              "type": "string"
            },
            "isDefault": {
              "description": "Flag to indicate whether or not this is the default locale for language fallback. This flag can only be set. To unset, set this property to true on another Localized Notification Message.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "locale": "string",
        "subject": "string",
        "messageTemplate": "string",
        "isDefault": true
      }
    },
    "microsoft.graph.notificationMessageTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "notificationMessageTemplate",
          "type": "object",
          "properties": {
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "DateTime the object was last modified.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "displayName": {
              "description": "Display name for the Notification Message Template.",
              "type": "string"
            },
            "defaultLocale": {
              "description": "The default locale to fallback onto when the requested locale is not available.",
              "type": "string"
            },
            "brandingOptions": {
              "description": "The Message Template Branding Options. Branding is defined in the Intune Admin Console. Possible values are: none, includeCompanyLogo, includeCompanyName, includeContactInformation."
            },
            "localizedNotificationMessages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.localizedNotificationMessage"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedDateTime": "string (timestamp)",
        "displayName": "string",
        "defaultLocale": "string",
        "brandingOptions": {
          "@odata.type": "microsoft.graph.notificationTemplateBrandingOptions"
        },
        "localizedNotificationMessages": [
          {
            "@odata.type": "microsoft.graph.localizedNotificationMessage"
          }
        ]
      }
    },
    "microsoft.graph.deviceEnrollmentConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceEnrollmentConfiguration",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Not yet documented",
              "type": "string"
            },
            "description": {
              "description": "Not yet documented",
              "type": "string"
            },
            "priority": {
              "format": "int32",
              "description": "Not yet documented",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Not yet documented",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Not yet documented",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "version": {
              "format": "int32",
              "description": "Not yet documented",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "assignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.enrollmentConfigurationAssignment"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "priority": "integer",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
          }
        ]
      }
    },
    "microsoft.graph.deviceEnrollmentLimitConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceEnrollmentConfiguration"
        },
        {
          "title": "deviceEnrollmentLimitConfiguration",
          "type": "object",
          "properties": {
            "limit": {
              "format": "int32",
              "description": "Not yet documented",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "priority": "integer",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
          }
        ],
        "limit": "integer"
      }
    },
    "microsoft.graph.deviceEnrollmentPlatformRestrictionsConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceEnrollmentConfiguration"
        },
        {
          "title": "deviceEnrollmentPlatformRestrictionsConfiguration",
          "type": "object",
          "properties": {
            "iosRestriction": {
              "description": "Not yet documented"
            },
            "windowsRestriction": {
              "description": "Not yet documented"
            },
            "windowsMobileRestriction": {
              "description": "Not yet documented"
            },
            "androidRestriction": {
              "description": "Not yet documented"
            },
            "macOSRestriction": {
              "description": "Not yet documented"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "priority": "integer",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
          }
        ],
        "iosRestriction": {
          "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
        },
        "windowsRestriction": {
          "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
        },
        "windowsMobileRestriction": {
          "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
        },
        "androidRestriction": {
          "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
        },
        "macOSRestriction": {
          "@odata.type": "microsoft.graph.deviceEnrollmentPlatformRestriction"
        }
      }
    },
    "microsoft.graph.deviceEnrollmentWindowsHelloForBusinessConfiguration": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceEnrollmentConfiguration"
        },
        {
          "title": "deviceEnrollmentWindowsHelloForBusinessConfiguration",
          "type": "object",
          "properties": {
            "pinMinimumLength": {
              "format": "int32",
              "description": "Not yet documented",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pinMaximumLength": {
              "format": "int32",
              "description": "Not yet documented",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pinUppercaseCharactersUsage": {
              "description": "Not yet documented. Possible values are: allowed, required, disallowed."
            },
            "pinLowercaseCharactersUsage": {
              "description": "Not yet documented. Possible values are: allowed, required, disallowed."
            },
            "pinSpecialCharactersUsage": {
              "description": "Not yet documented. Possible values are: allowed, required, disallowed."
            },
            "state": {
              "description": "Not yet documented. Possible values are: notConfigured, enabled, disabled."
            },
            "securityDeviceRequired": {
              "description": "Not yet documented",
              "type": "boolean"
            },
            "unlockWithBiometricsEnabled": {
              "description": "Not yet documented",
              "type": "boolean"
            },
            "remotePassportEnabled": {
              "description": "Not yet documented",
              "type": "boolean"
            },
            "pinPreviousBlockCount": {
              "format": "int32",
              "description": "Not yet documented",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "pinExpirationInDays": {
              "format": "int32",
              "description": "Not yet documented",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "enhancedBiometricsState": {
              "description": "Not yet documented. Possible values are: notConfigured, enabled, disabled."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "priority": "integer",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "version": "integer",
        "assignments": [
          {
            "@odata.type": "microsoft.graph.enrollmentConfigurationAssignment"
          }
        ],
        "pinMinimumLength": "integer",
        "pinMaximumLength": "integer",
        "pinUppercaseCharactersUsage": {
          "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
        },
        "pinLowercaseCharactersUsage": {
          "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
        },
        "pinSpecialCharactersUsage": {
          "@odata.type": "microsoft.graph.windowsHelloForBusinessPinUsage"
        },
        "state": {
          "@odata.type": "microsoft.graph.enablement"
        },
        "securityDeviceRequired": true,
        "unlockWithBiometricsEnabled": true,
        "remotePassportEnabled": true,
        "pinPreviousBlockCount": "integer",
        "pinExpirationInDays": "integer",
        "enhancedBiometricsState": {
          "@odata.type": "microsoft.graph.enablement"
        }
      }
    },
    "microsoft.graph.deviceManagementExchangeConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementExchangeConnector",
          "type": "object",
          "properties": {
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "Last sync time for the Exchange Connector",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Exchange Connector Status. Possible values are: none, connectionPending, connected, disconnected."
            },
            "primarySmtpAddress": {
              "description": "Email address used to configure the Service To Service Exchange Connector.",
              "type": "string"
            },
            "serverName": {
              "description": "The name of the Exchange server.",
              "type": "string"
            },
            "connectorServerName": {
              "description": "The name of the server hosting the Exchange Connector.",
              "type": "string"
            },
            "exchangeConnectorType": {
              "description": "The type of Exchange Connector Configured. Possible values are: onPremises, hosted, serviceToService, dedicated."
            },
            "version": {
              "description": "The version of the ExchangeConnectorAgent",
              "type": "string"
            },
            "exchangeAlias": {
              "description": "An alias assigned to the Exchange server",
              "type": "string"
            },
            "exchangeOrganization": {
              "description": "Exchange Organization to the Exchange server",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastSyncDateTime": "string (timestamp)",
        "status": {
          "@odata.type": "microsoft.graph.deviceManagementExchangeConnectorStatus"
        },
        "primarySmtpAddress": "string",
        "serverName": "string",
        "connectorServerName": "string",
        "exchangeConnectorType": {
          "@odata.type": "microsoft.graph.deviceManagementExchangeConnectorType"
        },
        "version": "string",
        "exchangeAlias": "string",
        "exchangeOrganization": "string"
      }
    },
    "microsoft.graph.deviceManagementPartner": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementPartner",
          "type": "object",
          "properties": {
            "lastHeartbeatDateTime": {
              "format": "date-time",
              "description": "Timestamp of last heartbeat after admin enabled option Connect to Device management Partner",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "partnerState": {
              "description": "Partner state of this tenant. Possible values are: unknown, unavailable, enabled, terminated, rejected, unresponsive."
            },
            "partnerAppType": {
              "description": "Partner App type. Possible values are: unknown, singleTenantApp, multiTenantApp."
            },
            "singleTenantAppId": {
              "description": "Partner Single tenant App id",
              "type": "string"
            },
            "displayName": {
              "description": "Partner display name",
              "type": "string"
            },
            "isConfigured": {
              "description": "Whether device management partner is configured or not",
              "type": "boolean"
            },
            "whenPartnerDevicesWillBeRemovedDateTime": {
              "format": "date-time",
              "description": "DateTime in UTC when PartnerDevices will be removed",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "whenPartnerDevicesWillBeMarkedAsNonCompliantDateTime": {
              "format": "date-time",
              "description": "DateTime in UTC when PartnerDevices will be marked as NonCompliant",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastHeartbeatDateTime": "string (timestamp)",
        "partnerState": {
          "@odata.type": "microsoft.graph.deviceManagementPartnerTenantState"
        },
        "partnerAppType": {
          "@odata.type": "microsoft.graph.deviceManagementPartnerAppType"
        },
        "singleTenantAppId": "string",
        "displayName": "string",
        "isConfigured": true,
        "whenPartnerDevicesWillBeRemovedDateTime": "string (timestamp)",
        "whenPartnerDevicesWillBeMarkedAsNonCompliantDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.enrollmentConfigurationAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "enrollmentConfigurationAssignment",
          "type": "object",
          "properties": {
            "target": {
              "description": "Not yet documented"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "target": {
          "@odata.type": "microsoft.graph.deviceAndAppManagementAssignmentTarget"
        }
      }
    },
    "microsoft.graph.mobileThreatDefenseConnector": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mobileThreatDefenseConnector",
          "type": "object",
          "properties": {
            "lastHeartbeatDateTime": {
              "format": "date-time",
              "description": "DateTime of last Heartbeat recieved from the Data Sync Partner",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "partnerState": {
              "description": "Data Sync Partner state for this account. Possible values are: unavailable, available, enabled, unresponsive."
            },
            "androidEnabled": {
              "description": "For Android, set whether data from the data sync partner should be used during compliance evaluations",
              "type": "boolean"
            },
            "iosEnabled": {
              "description": "For IOS, get or set whether data from the data sync partner should be used during compliance evaluations",
              "type": "boolean"
            },
            "androidDeviceBlockedOnMissingPartnerData": {
              "description": "For Android, set whether Intune must receive data from the data sync partner prior to marking a device compliant",
              "type": "boolean"
            },
            "iosDeviceBlockedOnMissingPartnerData": {
              "description": "For IOS, set whether Intune must receive data from the data sync partner prior to marking a device compliant",
              "type": "boolean"
            },
            "partnerUnsupportedOsVersionBlocked": {
              "description": "Get or set whether to block devices on the enabled platforms that do not meet the minimum version requirements of the Data Sync Partner",
              "type": "boolean"
            },
            "partnerUnresponsivenessThresholdInDays": {
              "format": "int32",
              "description": "Get or Set days the per tenant tolerance to unresponsiveness for this partner integration",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastHeartbeatDateTime": "string (timestamp)",
        "partnerState": {
          "@odata.type": "microsoft.graph.mobileThreatPartnerTenantState"
        },
        "androidEnabled": true,
        "iosEnabled": true,
        "androidDeviceBlockedOnMissingPartnerData": true,
        "iosDeviceBlockedOnMissingPartnerData": true,
        "partnerUnsupportedOsVersionBlocked": true,
        "partnerUnresponsivenessThresholdInDays": "integer"
      }
    },
    "microsoft.graph.onPremisesConditionalAccessSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "onPremisesConditionalAccessSettings",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Indicates if on premises conditional access is enabled for this organization",
              "type": "boolean"
            },
            "includedGroups": {
              "description": "User groups that will be targeted by on premises conditional access. All users in these groups will be required to have mobile device managed and compliant for mail access.",
              "type": "array",
              "items": {
                "format": "uuid",
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string"
              }
            },
            "excludedGroups": {
              "description": "User groups that will be exempt by on premises conditional access. All users in these groups will be exempt from the conditional access policy.",
              "type": "array",
              "items": {
                "format": "uuid",
                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                "type": "string"
              }
            },
            "overrideDefaultRule": {
              "description": "Override the default access rule when allowing a device to ensure access is granted.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "enabled": true,
        "includedGroups": [
          "string"
        ],
        "excludedGroups": [
          "string"
        ],
        "overrideDefaultRule": true
      }
    },
    "microsoft.graph.organization": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "organization",
          "type": "object",
          "properties": {
            "mobileDeviceManagementAuthority": {
              "description": "Mobile device management authority. Possible values are: unknown, intune, sccm, office365."
            },
            "assignedPlans": {
              "description": "The collection of service plans associated with the tenant. Not nullable.",
              "type": "array",
              "items": { }
            },
            "businessPhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "city": {
              "description": "City name of the address for the organization",
              "type": "string"
            },
            "companyLastDirSyncTime": {
              "format": "date-time",
              "description": "The time and date at which the tenant was last synced with the on-premise directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "country": {
              "description": "Country/region name of the address for the organization",
              "type": "string"
            },
            "countryLetterCode": {
              "description": "Country/region abbreviation for the organization",
              "type": "string"
            },
            "deletionTimestamp": {
              "format": "date-time",
              "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "dirSyncEnabled": {
              "description": "true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default).",
              "type": "boolean"
            },
            "displayName": {
              "description": "The display name for the tenant.",
              "type": "string"
            },
            "marketingNotificationEmails": {
              "description": "Not nullable.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "objectType": {
              "description": "A string that identifies the object type. For tenants the value is always 'Company'.",
              "type": "string"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "type": "boolean"
            },
            "postalCode": {
              "description": "Postal code of the address for the organization",
              "type": "string"
            },
            "preferredLanguage": {
              "description": "The preferred language for the organization. Should follow ISO 639-1 Code; for example 'en'.",
              "type": "string"
            },
            "privacyProfile": {
              "description": "The privacy profile of an organization."
            },
            "provisionedPlans": {
              "description": "Not nullable.",
              "type": "array",
              "items": { }
            },
            "securityComplianceNotificationMails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "securityComplianceNotificationPhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "state": {
              "description": "State name of the address for the organization",
              "type": "string"
            },
            "street": {
              "description": "Street name of the address for organization",
              "type": "string"
            },
            "technicalNotificationMails": {
              "description": "Not nullable.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "telephoneNumber": {
              "description": "Telephone number for the organization",
              "type": "string"
            },
            "verifiedDomains": {
              "description": "The collection of domains associated with this tenant. Not nullable.",
              "type": "array",
              "items": { }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "mobileDeviceManagementAuthority": {
          "@odata.type": "microsoft.graph.mdmAuthority"
        },
        "assignedPlans": [
          {
            "@odata.type": "microsoft.graph.assignedPlan"
          }
        ],
        "businessPhones": [
          "string"
        ],
        "city": "string",
        "companyLastDirSyncTime": "string (timestamp)",
        "country": "string",
        "countryLetterCode": "string",
        "deletionTimestamp": "string (timestamp)",
        "dirSyncEnabled": true,
        "displayName": "string",
        "marketingNotificationEmails": [
          "string"
        ],
        "objectType": "string",
        "onPremisesLastSyncDateTime": "string (timestamp)",
        "onPremisesSyncEnabled": true,
        "postalCode": "string",
        "preferredLanguage": "string",
        "privacyProfile": {
          "@odata.type": "microsoft.graph.privacyProfile"
        },
        "provisionedPlans": [
          {
            "@odata.type": "microsoft.graph.provisionedPlan"
          }
        ],
        "securityComplianceNotificationMails": [
          "string"
        ],
        "securityComplianceNotificationPhones": [
          "string"
        ],
        "state": "string",
        "street": "string",
        "technicalNotificationMails": [
          "string"
        ],
        "telephoneNumber": "string",
        "verifiedDomains": [
          {
            "@odata.type": "microsoft.graph.verifiedDomain"
          }
        ],
        "extensions": [
          {
            "@odata.type": "microsoft.graph.extension"
          }
        ]
      }
    },
    "microsoft.graph.vppToken": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "vppToken",
          "type": "object",
          "properties": {
            "organizationName": {
              "description": "The organization associated with the Apple Volume Purchase Program Token",
              "type": "string"
            },
            "vppTokenAccountType": {
              "description": "The type of volume purchase program which the given Apple Volume Purchase Program Token is associated with. Possible values are: business, education. Possible values are: business, education."
            },
            "appleId": {
              "description": "The apple Id associated with the given Apple Volume Purchase Program Token.",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "The expiration date time of the Apple Volume Purchase Program Token.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastSyncDateTime": {
              "format": "date-time",
              "description": "The last time when an application sync was done with the Apple volume purchase program service using the the Apple Volume Purchase Program Token.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "token": {
              "description": "The Apple Volume Purchase Program Token string downloaded from the Apple Volume Purchase Program.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Last modification date time associated with the Apple Volume Purchase Program Token.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "state": {
              "description": "Current state of the Apple Volume Purchase Program Token. Possible values are: unknown, valid, expired, invalid, assignedToExternalMDM. Possible values are: unknown, valid, expired, invalid, assignedToExternalMDM."
            },
            "lastSyncStatus": {
              "description": "Current sync status of the last application sync which was triggered using the Apple Volume Purchase Program Token. Possible values are: none, inProgress, completed, failed. Possible values are: none, inProgress, completed, failed."
            },
            "automaticallyUpdateApps": {
              "description": "Whether or not apps for the VPP token will be automatically updated.",
              "type": "boolean"
            },
            "countryOrRegion": {
              "description": "Whether or not apps for the VPP token will be automatically updated.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "organizationName": "string",
        "vppTokenAccountType": {
          "@odata.type": "microsoft.graph.vppTokenAccountType"
        },
        "appleId": "string",
        "expirationDateTime": "string (timestamp)",
        "lastSyncDateTime": "string (timestamp)",
        "token": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "state": {
          "@odata.type": "microsoft.graph.vppTokenState"
        },
        "lastSyncStatus": {
          "@odata.type": "microsoft.graph.vppTokenSyncStatus"
        },
        "automaticallyUpdateApps": true,
        "countryOrRegion": "string"
      }
    },
    "microsoft.graph.roleAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "roleAssignment",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The display or friendly name of the role Assignment.",
              "type": "string"
            },
            "description": {
              "description": "Description of the Role Assignment.",
              "type": "string"
            },
            "resourceScopes": {
              "description": "List of ids of role scope member security groups.  These are IDs from Azure Active Directory.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "roleDefinition": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "resourceScopes": [
          "string"
        ],
        "roleDefinition": {
          "@odata.type": "microsoft.graph.roleDefinition"
        }
      }
    },
    "microsoft.graph.deviceAndAppManagementRoleAssignment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.roleAssignment"
        },
        {
          "title": "deviceAndAppManagementRoleAssignment",
          "type": "object",
          "properties": {
            "members": {
              "description": "The list of ids of role member security groups. These are IDs from Azure Active Directory.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "resourceScopes": [
          "string"
        ],
        "roleDefinition": {
          "@odata.type": "microsoft.graph.roleDefinition"
        },
        "members": [
          "string"
        ]
      }
    },
    "microsoft.graph.roleDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "roleDefinition",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display Name of the Role definition.",
              "type": "string"
            },
            "description": {
              "description": "Description of the Role definition.",
              "type": "string"
            },
            "rolePermissions": {
              "description": "List of Role Permissions this role is allowed to perform. These must match the actionName that is defined as part of the rolePermission.",
              "type": "array",
              "items": { }
            },
            "isBuiltIn": {
              "description": "Type of Role. Set to True if it is built-in, or set to False if it is a custom role definition.",
              "type": "boolean"
            },
            "roleAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.roleAssignment"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "rolePermissions": [
          {
            "@odata.type": "microsoft.graph.rolePermission"
          }
        ],
        "isBuiltIn": true,
        "roleAssignments": [
          {
            "@odata.type": "microsoft.graph.roleAssignment"
          }
        ]
      }
    },
    "microsoft.graph.deviceAndAppManagementRoleDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.roleDefinition"
        },
        {
          "title": "deviceAndAppManagementRoleDefinition",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string",
        "rolePermissions": [
          {
            "@odata.type": "microsoft.graph.rolePermission"
          }
        ],
        "isBuiltIn": true,
        "roleAssignments": [
          {
            "@odata.type": "microsoft.graph.roleAssignment"
          }
        ]
      }
    },
    "microsoft.graph.resourceOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "resourceOperation",
          "type": "object",
          "properties": {
            "resourceName": {
              "description": "Name of the Resource this operation is performed on.",
              "type": "string"
            },
            "actionName": {
              "description": "Type of action this operation is going to perform. The actionName should be concise and limited to as few words as possible.",
              "type": "string"
            },
            "description": {
              "description": "Description of the resource operation. The description is used in mouse-over text for the operation when shown in the Azure Portal.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "resourceName": "string",
        "actionName": "string",
        "description": "string"
      }
    },
    "microsoft.graph.remoteAssistancePartner": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "remoteAssistancePartner",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display name of the partner.",
              "type": "string"
            },
            "onboardingUrl": {
              "description": "URL of the partner's onboarding portal, where an administrator can configure their Remote Assistance service.",
              "type": "string"
            },
            "onboardingStatus": {
              "description": "TBD. Possible values are: notOnboarded, onboarding, onboarded."
            },
            "lastConnectionDateTime": {
              "format": "date-time",
              "description": "Timestamp of the last request sent to Intune by the TEM partner.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "onboardingUrl": "string",
        "onboardingStatus": {
          "@odata.type": "microsoft.graph.remoteAssistanceOnboardingStatus"
        },
        "lastConnectionDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.deviceAppManagement": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceAppManagement",
          "type": "object",
          "properties": {
            "microsoftStoreForBusinessLastSuccessfulSyncDateTime": {
              "format": "date-time",
              "description": "The last time the apps from the Microsoft Store for Business were synced successfully for the account.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "isEnabledForMicrosoftStoreForBusiness": {
              "description": "Whether the account is enabled for syncing applications from the Microsoft Store for Business.",
              "type": "boolean"
            },
            "microsoftStoreForBusinessLanguage": {
              "description": "The locale information used to sync applications from the Microsoft Store for Business. Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is -<country/regioncode2>, where  is a lowercase two-letter code derived from ISO 639-1 and <country/regioncode2> is an uppercase two-letter code derived from ISO 3166. For example, en-US for English (United States) is a specific culture.",
              "type": "string"
            },
            "microsoftStoreForBusinessLastCompletedApplicationSyncTime": {
              "format": "date-time",
              "description": "The last time an application sync from the Microsoft Store for Business was completed.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "mobileAppCategories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileAppCategory"
              }
            },
            "mobileAppConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDeviceMobileAppConfiguration"
              }
            },
            "mobileApps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileApp"
              }
            },
            "managedEBooks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedEBook"
              }
            },
            "androidManagedAppProtections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.androidManagedAppProtection"
              }
            },
            "defaultManagedAppProtections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.defaultManagedAppProtection"
              }
            },
            "iosManagedAppProtections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.iosManagedAppProtection"
              }
            },
            "managedAppPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppPolicy"
              }
            },
            "managedAppRegistrations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
              }
            },
            "managedAppStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppStatus"
              }
            },
            "mdmWindowsInformationProtectionPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mdmWindowsInformationProtectionPolicy"
              }
            },
            "targetedManagedAppConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.targetedManagedAppConfiguration"
              }
            },
            "windowsInformationProtectionPolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionPolicy"
              }
            },
            "vppTokens": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.vppToken"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "microsoftStoreForBusinessLastSuccessfulSyncDateTime": "string (timestamp)",
        "isEnabledForMicrosoftStoreForBusiness": true,
        "microsoftStoreForBusinessLanguage": "string",
        "microsoftStoreForBusinessLastCompletedApplicationSyncTime": "string (timestamp)",
        "mobileAppCategories": [
          {
            "@odata.type": "microsoft.graph.mobileAppCategory"
          }
        ],
        "mobileAppConfigurations": [
          {
            "@odata.type": "microsoft.graph.managedDeviceMobileAppConfiguration"
          }
        ],
        "mobileApps": [
          {
            "@odata.type": "microsoft.graph.mobileApp"
          }
        ],
        "managedEBooks": [
          {
            "@odata.type": "microsoft.graph.managedEBook"
          }
        ],
        "androidManagedAppProtections": [
          {
            "@odata.type": "microsoft.graph.androidManagedAppProtection"
          }
        ],
        "defaultManagedAppProtections": [
          {
            "@odata.type": "microsoft.graph.defaultManagedAppProtection"
          }
        ],
        "iosManagedAppProtections": [
          {
            "@odata.type": "microsoft.graph.iosManagedAppProtection"
          }
        ],
        "managedAppPolicies": [
          {
            "@odata.type": "microsoft.graph.managedAppPolicy"
          }
        ],
        "managedAppRegistrations": [
          {
            "@odata.type": "microsoft.graph.managedAppRegistration"
          }
        ],
        "managedAppStatuses": [
          {
            "@odata.type": "microsoft.graph.managedAppStatus"
          }
        ],
        "mdmWindowsInformationProtectionPolicies": [
          {
            "@odata.type": "microsoft.graph.mdmWindowsInformationProtectionPolicy"
          }
        ],
        "targetedManagedAppConfigurations": [
          {
            "@odata.type": "microsoft.graph.targetedManagedAppConfiguration"
          }
        ],
        "windowsInformationProtectionPolicies": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionPolicy"
          }
        ],
        "vppTokens": [
          {
            "@odata.type": "microsoft.graph.vppToken"
          }
        ]
      }
    },
    "microsoft.graph.deviceCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceCategory",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display name for the device category.",
              "type": "string"
            },
            "description": {
              "description": "Optional description for the device category.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "description": "string"
      }
    },
    "microsoft.graph.deviceManagement": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagement",
          "type": "object",
          "properties": {
            "intuneBrand": {
              "description": "intuneBrand contains data which is used in customizing the appearance of the Company Portal applications as well as the end user web portal."
            },
            "subscriptionState": {
              "description": "Tenant mobile device management subscription state. The possible values are: pending, active, warning, disabled, deleted, blocked, lockedOut.",
              "type": "string"
            },
            "settings": {
              "description": "Account level settings."
            },
            "auditEvents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.auditEvent"
              }
            },
            "termsAndConditions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.termsAndConditions"
              }
            },
            "deviceCompliancePolicies": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicy"
              }
            },
            "deviceCompliancePolicyDeviceStateSummary": { },
            "deviceCompliancePolicySettingStateSummaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceCompliancePolicySettingStateSummary"
              }
            },
            "deviceConfigurationDeviceStateSummaries": { },
            "deviceConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceConfiguration"
              }
            },
            "iosUpdateStatuses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.iosUpdateDeviceStatus"
              }
            },
            "softwareUpdateStatusSummary": { },
            "applePushNotificationCertificate": { },
            "detectedApps": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.detectedApp"
              }
            },
            "managedDeviceOverview": { },
            "managedDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDevice"
              }
            },
            "importedWindowsAutopilotDeviceIdentities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.importedWindowsAutopilotDeviceIdentity"
              }
            },
            "importedWindowsAutopilotDeviceIdentityUploads": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload"
              }
            },
            "notificationMessageTemplates": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.notificationMessageTemplate"
              }
            },
            "conditionalAccessSettings": { },
            "deviceCategories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceCategory"
              }
            },
            "deviceEnrollmentConfigurations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceEnrollmentConfiguration"
              }
            },
            "deviceManagementPartners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementPartner"
              }
            },
            "exchangeConnectors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementExchangeConnector"
              }
            },
            "mobileThreatDefenseConnectors": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mobileThreatDefenseConnector"
              }
            },
            "resourceOperations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.resourceOperation"
              }
            },
            "roleAssignments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceAndAppManagementRoleAssignment"
              }
            },
            "roleDefinitions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.roleDefinition"
              }
            },
            "remoteAssistancePartners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.remoteAssistancePartner"
              }
            },
            "telecomExpenseManagementPartners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.telecomExpenseManagementPartner"
              }
            },
            "troubleshootingEvents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
              }
            },
            "windowsInformationProtectionAppLearningSummaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionAppLearningSummary"
              }
            },
            "windowsInformationProtectionNetworkLearningSummaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.windowsInformationProtectionNetworkLearningSummary"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "intuneBrand": {
          "@odata.type": "microsoft.graph.intuneBrand"
        },
        "subscriptionState": "string",
        "settings": {
          "@odata.type": "microsoft.graph.deviceManagementSettings"
        },
        "auditEvents": [
          {
            "@odata.type": "microsoft.graph.auditEvent"
          }
        ],
        "termsAndConditions": [
          {
            "@odata.type": "microsoft.graph.termsAndConditions"
          }
        ],
        "deviceCompliancePolicies": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicy"
          }
        ],
        "deviceCompliancePolicyDeviceStateSummary": {
          "@odata.type": "microsoft.graph.deviceCompliancePolicyDeviceStateSummary"
        },
        "deviceCompliancePolicySettingStateSummaries": [
          {
            "@odata.type": "microsoft.graph.deviceCompliancePolicySettingStateSummary"
          }
        ],
        "deviceConfigurationDeviceStateSummaries": {
          "@odata.type": "microsoft.graph.deviceConfigurationDeviceStateSummary"
        },
        "deviceConfigurations": [
          {
            "@odata.type": "microsoft.graph.deviceConfiguration"
          }
        ],
        "iosUpdateStatuses": [
          {
            "@odata.type": "microsoft.graph.iosUpdateDeviceStatus"
          }
        ],
        "softwareUpdateStatusSummary": {
          "@odata.type": "microsoft.graph.softwareUpdateStatusSummary"
        },
        "applePushNotificationCertificate": {
          "@odata.type": "microsoft.graph.applePushNotificationCertificate"
        },
        "detectedApps": [
          {
            "@odata.type": "microsoft.graph.detectedApp"
          }
        ],
        "managedDeviceOverview": {
          "@odata.type": "microsoft.graph.managedDeviceOverview"
        },
        "managedDevices": [
          {
            "@odata.type": "microsoft.graph.managedDevice"
          }
        ],
        "importedWindowsAutopilotDeviceIdentities": [
          {
            "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentity"
          }
        ],
        "importedWindowsAutopilotDeviceIdentityUploads": [
          {
            "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload"
          }
        ],
        "notificationMessageTemplates": [
          {
            "@odata.type": "microsoft.graph.notificationMessageTemplate"
          }
        ],
        "conditionalAccessSettings": {
          "@odata.type": "microsoft.graph.onPremisesConditionalAccessSettings"
        },
        "deviceCategories": [
          {
            "@odata.type": "microsoft.graph.deviceCategory"
          }
        ],
        "deviceEnrollmentConfigurations": [
          {
            "@odata.type": "microsoft.graph.deviceEnrollmentConfiguration"
          }
        ],
        "deviceManagementPartners": [
          {
            "@odata.type": "microsoft.graph.deviceManagementPartner"
          }
        ],
        "exchangeConnectors": [
          {
            "@odata.type": "microsoft.graph.deviceManagementExchangeConnector"
          }
        ],
        "mobileThreatDefenseConnectors": [
          {
            "@odata.type": "microsoft.graph.mobileThreatDefenseConnector"
          }
        ],
        "resourceOperations": [
          {
            "@odata.type": "microsoft.graph.resourceOperation"
          }
        ],
        "roleAssignments": [
          {
            "@odata.type": "microsoft.graph.deviceAndAppManagementRoleAssignment"
          }
        ],
        "roleDefinitions": [
          {
            "@odata.type": "microsoft.graph.roleDefinition"
          }
        ],
        "remoteAssistancePartners": [
          {
            "@odata.type": "microsoft.graph.remoteAssistancePartner"
          }
        ],
        "telecomExpenseManagementPartners": [
          {
            "@odata.type": "microsoft.graph.telecomExpenseManagementPartner"
          }
        ],
        "troubleshootingEvents": [
          {
            "@odata.type": "microsoft.graph.deviceManagementTroubleshootingEvent"
          }
        ],
        "windowsInformationProtectionAppLearningSummaries": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionAppLearningSummary"
          }
        ],
        "windowsInformationProtectionNetworkLearningSummaries": [
          {
            "@odata.type": "microsoft.graph.windowsInformationProtectionNetworkLearningSummary"
          }
        ]
      }
    },
    "microsoft.graph.reportRoot": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "reportRoot",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)"
      }
    },
    "microsoft.graph.user": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "user",
          "type": "object",
          "properties": {
            "deviceEnrollmentLimit": {
              "format": "int32",
              "description": "The limit on the maximum number of devices that the user is permitted to enroll. Allowed values are 5 or 1000.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "aboutMe": {
              "description": "A freeform text entry field for the user to describe themselves.",
              "type": "string"
            },
            "accountEnabled": {
              "description": "true if the account is enabled; otherwise, false. This property is required when a user is created. Supports $filter.",
              "type": "boolean"
            },
            "ageGroup": {
              "description": "Sets the age group of the user. Allowed values: null, minor, notAdult and adult. Refer to the legal age group property definitions for further information.",
              "type": "string"
            },
            "assignedLicenses": {
              "description": "The licenses that are assigned to the user. Not nullable.",
              "type": "array",
              "items": { }
            },
            "assignedPlans": {
              "description": "The plans that are assigned to the user. Read-only. Not nullable.",
              "type": "array",
              "items": { }
            },
            "birthday": {
              "format": "date-time",
              "description": "The birthday of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "businessPhones": {
              "description": "The telephone numbers for the user. NOTE: Although this is a string collection, only one number can be set for this property.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "city": {
              "description": "The city in which the user is located. Supports $filter.",
              "type": "string"
            },
            "companyName": {
              "description": "The company name which the user is associated. Read-only.",
              "type": "string"
            },
            "consentProvidedForMinor": {
              "description": "Sets whether consent has been obtained for minors. Allowed values: null, granted, denied and notRequired. Refer to the legal age group property definitions for further information.",
              "type": "string"
            },
            "country": {
              "description": "The country/region in which the user is located; for example, 'US' or 'UK'. Supports $filter.",
              "type": "string"
            },
            "department": {
              "description": "The name for the department in which the user works. Supports $filter.",
              "type": "string"
            },
            "displayName": {
              "description": "The name displayed in the address book for the user. This is usually the combination of the user's first name, middle initial and last name. This property is required when a user is created and it cannot be cleared during updates. Supports $filter and $orderby.",
              "type": "string"
            },
            "givenName": {
              "description": "The given name (first name) of the user. Supports $filter.",
              "type": "string"
            },
            "hireDate": {
              "format": "date-time",
              "description": "The hire date of the user. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "imAddresses": {
              "description": "The instant message voice over IP (VOIP) session initiation protocol (SIP) addresses for the user. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "interests": {
              "description": "A list for the user to describe their interests.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "jobTitle": {
              "description": "The user’s job title. Supports $filter.",
              "type": "string"
            },
            "legalAgeGroupClassification": {
              "description": "Used by enterprise applications to determine the legal age group of the user. This property is read-only and calculated based on ageGroup and consentProvidedForMinor properties. Allowed values: null, minorWithOutParentalConsent, minorWithParentalConsent, minorNoParentalConsentRequired, notAdult and adult. Refer to the legal age group property definitions for further information.)",
              "type": "string"
            },
            "mail": {
              "description": "The SMTP address for the user, for example, 'jeff@contoso.onmicrosoft.com'. Read-Only. Supports $filter.",
              "type": "string"
            },
            "mailboxSettings": {
              "description": "Settings for the primary mailbox of the signed-in user. You can get or update settings for sending automatic replies to incoming messages, locale and time zone."
            },
            "mailNickname": {
              "description": "The mail alias for the user. This property must be specified when a user is created. Supports $filter.",
              "type": "string"
            },
            "mobilePhone": {
              "description": "The primary cellular telephone number for the user.",
              "type": "string"
            },
            "mySite": {
              "description": "The URL for the user's personal site.",
              "type": "string"
            },
            "officeLocation": {
              "description": "The office location in the user's place of business.",
              "type": "string"
            },
            "onPremisesDomainName": {
              "description": "Contains the on-premises domainFQDN, also called dnsDomainName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.",
              "type": "string"
            },
            "onPremisesExtensionAttributes": {
              "description": "Contains extensionAttributes 1-15 for the user. Note that the individual extension attributes are neither selectable nor filterable. For an onPremisesSyncEnabled user, this set of properties is mastered on-premises and is read-only. For a cloud-only user (where onPremisesSyncEnabled is false), these properties may be set during creation or update."
            },
            "onPremisesImmutableId": {
              "description": "This property is used to associate an on-premises Active Directory user account to their Azure AD user object. This property must be specified when creating a new user account in the Graph if you are using a federated domain for the user’s userPrincipalName (UPN) property. Important: The $ and  characters cannot be used when specifying this property. Supports $filter.",
              "type": "string"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "description": "Indicates the last time at which the object was synced with the on-premises directory; for example: '2013-02-16T03:04:54Z'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesProvisioningErrors": {
              "description": "Errors when using Microsoft synchronization product during provisioning.",
              "type": "array",
              "items": { }
            },
            "onPremisesSamAccountName": {
              "description": "Contains the on-premises samAccountName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.",
              "type": "string"
            },
            "onPremisesSecurityIdentifier": {
              "description": "Contains the on-premises security identifier (SID) for the user that was synchronized from on-premises to the cloud. Read-only.",
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "description": "true if this object is synced from an on-premises directory; false if this object was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Read-only",
              "type": "boolean"
            },
            "onPremisesUserPrincipalName": {
              "description": "Contains the on-premises userPrincipalName synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect. Read-only.",
              "type": "string"
            },
            "passwordPolicies": {
              "description": "Specifies password policies for the user. This value is an enumeration with one possible value being 'DisableStrongPassword', which allows weaker passwords than the default policy to be specified. 'DisablePasswordExpiration' can also be specified. The two may be specified together; for example: 'DisablePasswordExpiration, DisableStrongPassword'.",
              "type": "string"
            },
            "passwordProfile": {
              "description": "Specifies the password profile for the user. The profile contains the user’s password. This property is required when a user is created. The password in the profile must satisfy minimum requirements as specified by the passwordPolicies property. By default, a strong password is required."
            },
            "pastProjects": {
              "description": "A list for the user to enumerate their past projects.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "postalCode": {
              "description": "The postal code for the user's postal address. The postal code is specific to the user's country/region. In the United States of America, this attribute contains the ZIP code.",
              "type": "string"
            },
            "preferredLanguage": {
              "description": "The preferred language for the user. Should follow ISO 639-1 Code; for example 'en-US'.",
              "type": "string"
            },
            "preferredName": {
              "description": "The preferred name for the user.",
              "type": "string"
            },
            "provisionedPlans": {
              "description": "The plans that are provisioned for the user. Read-only. Not nullable.",
              "type": "array",
              "items": { }
            },
            "proxyAddresses": {
              "description": "For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com'] The any operator is required for filter expressions on multi-valued properties. Read-only, Not nullable. Supports $filter.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "responsibilities": {
              "description": "A list for the user to enumerate their responsibilities.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schools": {
              "description": "A list for the user to enumerate the schools they have attended.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "skills": {
              "description": "A list for the user to enumerate their skills.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "state": {
              "description": "The state or province in the user's address. Supports $filter.",
              "type": "string"
            },
            "streetAddress": {
              "description": "The street address of the user's place of business.",
              "type": "string"
            },
            "surname": {
              "description": "The user's surname (family name or last name). Supports $filter.",
              "type": "string"
            },
            "usageLocation": {
              "description": "A two letter country code (ISO standard 3166). Required for users that will be assigned licenses due to legal requirement to check for availability of services in countries.  Examples include: 'US', 'JP', and 'GB'. Not nullable. Supports $filter.",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "The user principal name (UPN) of the user. The UPN is an Internet-style login name for the user based on the Internet standard RFC 822. By convention, this should map to the user's email name. The general format is alias@domain, where domain must be present in the tenant’s collection of verified domains. This property is required when a user is created. The verified domains for the tenant can be accessed from the verifiedDomains property of organization. Supports $filter and $orderby.",
              "type": "string"
            },
            "userType": {
              "description": "A string value that can be used to classify user types in your directory, such as 'Member' and 'Guest'. Supports $filter.",
              "type": "string"
            },
            "managedDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedDevice"
              }
            },
            "managedAppRegistrations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.managedAppRegistration"
              }
            },
            "deviceManagementTroubleshootingEvents": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
              }
            },
            "calendar": { },
            "calendarGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.calendarGroup"
              }
            },
            "calendarView": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "calendars": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.calendar"
              }
            },
            "contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contact"
              }
            },
            "contactFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contactFolder"
              }
            },
            "createdObjects": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "directReports": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "drive": { },
            "drives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.drive"
              }
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "inferenceClassification": { },
            "mailFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mailFolder"
              }
            },
            "manager": { },
            "memberOf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.message"
              }
            },
            "outlook": { },
            "ownedDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "ownedObjects": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "photo": { },
            "registeredDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "activities": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.userActivity"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "licenseDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.licenseDetails"
              }
            },
            "onenote": { },
            "people": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.person"
              }
            },
            "planner": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "deviceEnrollmentLimit": "integer",
        "aboutMe": "string",
        "accountEnabled": true,
        "ageGroup": "string",
        "assignedLicenses": [
          {
            "@odata.type": "microsoft.graph.assignedLicense"
          }
        ],
        "assignedPlans": [
          {
            "@odata.type": "microsoft.graph.assignedPlan"
          }
        ],
        "birthday": "string (timestamp)",
        "businessPhones": [
          "string"
        ],
        "city": "string",
        "companyName": "string",
        "consentProvidedForMinor": "string",
        "country": "string",
        "department": "string",
        "displayName": "string",
        "givenName": "string",
        "hireDate": "string (timestamp)",
        "imAddresses": [
          "string"
        ],
        "interests": [
          "string"
        ],
        "jobTitle": "string",
        "legalAgeGroupClassification": "string",
        "mail": "string",
        "mailboxSettings": {
          "@odata.type": "microsoft.graph.mailboxSettings"
        },
        "mailNickname": "string",
        "mobilePhone": "string",
        "mySite": "string",
        "officeLocation": "string",
        "onPremisesDomainName": "string",
        "onPremisesExtensionAttributes": {
          "@odata.type": "microsoft.graph.onPremisesExtensionAttributes"
        },
        "onPremisesImmutableId": "string",
        "onPremisesLastSyncDateTime": "string (timestamp)",
        "onPremisesProvisioningErrors": [
          {
            "@odata.type": "microsoft.graph.onPremisesProvisioningError"
          }
        ],
        "onPremisesSamAccountName": "string",
        "onPremisesSecurityIdentifier": "string",
        "onPremisesSyncEnabled": true,
        "onPremisesUserPrincipalName": "string",
        "passwordPolicies": "string",
        "passwordProfile": {
          "@odata.type": "microsoft.graph.passwordProfile"
        },
        "pastProjects": [
          "string"
        ],
        "postalCode": "string",
        "preferredLanguage": "string",
        "preferredName": "string",
        "provisionedPlans": [
          {
            "@odata.type": "microsoft.graph.provisionedPlan"
          }
        ],
        "proxyAddresses": [
          "string"
        ],
        "responsibilities": [
          "string"
        ],
        "schools": [
          "string"
        ],
        "skills": [
          "string"
        ],
        "state": "string",
        "streetAddress": "string",
        "surname": "string",
        "usageLocation": "string",
        "userPrincipalName": "string",
        "userType": "string",
        "managedDevices": [
          {
            "@odata.type": "microsoft.graph.managedDevice"
          }
        ],
        "managedAppRegistrations": [
          {
            "@odata.type": "microsoft.graph.managedAppRegistration"
          }
        ],
        "deviceManagementTroubleshootingEvents": [
          {
            "@odata.type": "microsoft.graph.deviceManagementTroubleshootingEvent"
          }
        ],
        "calendar": {
          "@odata.type": "microsoft.graph.calendar"
        },
        "calendarGroups": [
          {
            "@odata.type": "microsoft.graph.calendarGroup"
          }
        ],
        "calendarView": [
          {
            "@odata.type": "microsoft.graph.event"
          }
        ],
        "calendars": [
          {
            "@odata.type": "microsoft.graph.calendar"
          }
        ],
        "contacts": [
          {
            "@odata.type": "microsoft.graph.contact"
          }
        ],
        "contactFolders": [
          {
            "@odata.type": "microsoft.graph.contactFolder"
          }
        ],
        "createdObjects": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "directReports": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "drive": {
          "@odata.type": "microsoft.graph.drive"
        },
        "drives": [
          {
            "@odata.type": "microsoft.graph.drive"
          }
        ],
        "events": [
          {
            "@odata.type": "microsoft.graph.event"
          }
        ],
        "inferenceClassification": {
          "@odata.type": "microsoft.graph.inferenceClassification"
        },
        "mailFolders": [
          {
            "@odata.type": "microsoft.graph.mailFolder"
          }
        ],
        "manager": {
          "@odata.type": "microsoft.graph.directoryObject"
        },
        "memberOf": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "messages": [
          {
            "@odata.type": "microsoft.graph.message"
          }
        ],
        "outlook": {
          "@odata.type": "microsoft.graph.outlookUser"
        },
        "ownedDevices": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "ownedObjects": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "photo": {
          "@odata.type": "microsoft.graph.profilePhoto"
        },
        "registeredDevices": [
          {
            "@odata.type": "microsoft.graph.directoryObject"
          }
        ],
        "activities": [
          {
            "@odata.type": "microsoft.graph.userActivity"
          }
        ],
        "extensions": [
          {
            "@odata.type": "microsoft.graph.extension"
          }
        ],
        "licenseDetails": [
          {
            "@odata.type": "microsoft.graph.licenseDetails"
          }
        ],
        "onenote": {
          "@odata.type": "microsoft.graph.onenote"
        },
        "people": [
          {
            "@odata.type": "microsoft.graph.person"
          }
        ],
        "planner": {
          "@odata.type": "microsoft.graph.plannerUser"
        }
      }
    },
    "microsoft.graph.telecomExpenseManagementPartner": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "telecomExpenseManagementPartner",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "Display name of the TEM partner.",
              "type": "string"
            },
            "url": {
              "description": "URL of the TEM partner's administrative control panel, where an administrator can configure their TEM service.",
              "type": "string"
            },
            "appAuthorized": {
              "description": "Whether the partner's AAD app has been authorized to access Intune.",
              "type": "boolean"
            },
            "enabled": {
              "description": "Whether Intune's connection to the TEM service is currently enabled or disabled.",
              "type": "boolean"
            },
            "lastConnectionDateTime": {
              "format": "date-time",
              "description": "Timestamp of the last request sent to Intune by the TEM partner.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "displayName": "string",
        "url": "string",
        "appAuthorized": true,
        "enabled": true,
        "lastConnectionDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.deviceManagementTroubleshootingEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "deviceManagementTroubleshootingEvent",
          "type": "object",
          "properties": {
            "eventDateTime": {
              "format": "date-time",
              "description": "Time when the event occurred .",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "correlationId": {
              "description": "Id used for tracing the failure in the service.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "eventDateTime": "string (timestamp)",
        "correlationId": "string"
      }
    },
    "microsoft.graph.enrollmentTroubleshootingEvent": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.deviceManagementTroubleshootingEvent"
        },
        {
          "title": "enrollmentTroubleshootingEvent",
          "type": "object",
          "properties": {
            "managedDeviceIdentifier": {
              "description": "Device identifier created or collected by Intune.",
              "type": "string"
            },
            "operatingSystem": {
              "description": "Operating System.",
              "type": "string"
            },
            "osVersion": {
              "description": "OS Version.",
              "type": "string"
            },
            "userId": {
              "description": "Identifier for the user that tried to enroll the device.",
              "type": "string"
            },
            "deviceId": {
              "description": "Azure AD device identifier.",
              "type": "string"
            },
            "enrollmentType": {
              "description": "Type of the enrollment. Possible values are: unknown, userEnrollment, deviceEnrollmentManager, appleBulkWithUser, appleBulkWithoutUser, windowsAzureADJoin, windowsBulkUserless, windowsAutoEnrollment, windowsBulkAzureDomainJoin, windowsCoManagement."
            },
            "failureCategory": {
              "description": "Highlevel failure category. Possible values are: unknown, authentication, authorization, accountValidation, userValidation, deviceNotSupported, inMaintenance, badRequest, featureNotSupported, enrollmentRestrictionsEnforced, clientDisconnected, userAbandonment."
            },
            "failureReason": {
              "description": "Detailed failure reason.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "eventDateTime": "string (timestamp)",
        "correlationId": "string",
        "managedDeviceIdentifier": "string",
        "operatingSystem": "string",
        "osVersion": "string",
        "userId": "string",
        "deviceId": "string",
        "enrollmentType": {
          "@odata.type": "microsoft.graph.deviceEnrollmentType"
        },
        "failureCategory": {
          "@odata.type": "microsoft.graph.deviceEnrollmentFailureReason"
        },
        "failureReason": "string"
      }
    },
    "microsoft.graph.windowsInformationProtectionAppLearningSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsInformationProtectionAppLearningSummary",
          "type": "object",
          "properties": {
            "applicationName": {
              "description": "Application Name",
              "type": "string"
            },
            "applicationType": {
              "description": "Application Type. Possible values are: universal, desktop."
            },
            "deviceCount": {
              "format": "int32",
              "description": "Device Count",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "applicationName": "string",
        "applicationType": {
          "@odata.type": "microsoft.graph.applicationType"
        },
        "deviceCount": "integer"
      }
    },
    "microsoft.graph.windowsInformationProtectionNetworkLearningSummary": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "windowsInformationProtectionNetworkLearningSummary",
          "type": "object",
          "properties": {
            "url": {
              "description": "Website url",
              "type": "string"
            },
            "deviceCount": {
              "format": "int32",
              "description": "Device Count",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "url": "string",
        "deviceCount": "integer"
      }
    },
    "microsoft.graph.invitation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "invitation",
          "type": "object",
          "properties": {
            "invitedUserDisplayName": {
              "description": "The display name of the user being invited.",
              "type": "string"
            },
            "invitedUserEmailAddress": {
              "description": "The email address of the user being invited. Required.",
              "type": "string"
            },
            "invitedUserMessageInfo": {
              "description": "Additional configuration for the message being sent to the invited user, including customizing message text, language and cc recipient list."
            },
            "sendInvitationMessage": {
              "description": "Indicates whether an email should be sent to the user being invited or not. The default is false.",
              "type": "boolean"
            },
            "inviteRedirectUrl": {
              "description": "The URL user should be redirected to once the invitation is redeemed. Required.",
              "type": "string"
            },
            "inviteRedeemUrl": {
              "description": "The URL user can use to redeem his invitation. Read-Only",
              "type": "string"
            },
            "status": {
              "description": "The status of the invitation. Possible values: PendingAcceptance, Completed, InProgress, and Error",
              "type": "string"
            },
            "invitedUserType": {
              "description": "The userType of the user being invited. By default, this is Guest. You can invite as Member if you are a company administrator.",
              "type": "string"
            },
            "invitedUser": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "invitedUserDisplayName": "string",
        "invitedUserEmailAddress": "string",
        "invitedUserMessageInfo": {
          "@odata.type": "microsoft.graph.invitedUserMessageInfo"
        },
        "sendInvitationMessage": true,
        "inviteRedirectUrl": "string",
        "inviteRedeemUrl": "string",
        "status": "string",
        "invitedUserType": "string",
        "invitedUser": {
          "@odata.type": "microsoft.graph.user"
        }
      }
    },
    "microsoft.graph.itemAttachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attachment"
        },
        {
          "title": "itemAttachment",
          "type": "object",
          "properties": {
            "item": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "contentType": "string",
        "isInline": true,
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "size": "integer",
        "item": {
          "@odata.type": "microsoft.graph.outlookItem"
        }
      }
    },
    "microsoft.graph.licenseDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "licenseDetails",
          "type": "object",
          "properties": {
            "servicePlans": {
              "description": "Information about the service plans assigned with the license. Read-only, Not nullable",
              "type": "array",
              "items": { }
            },
            "skuId": {
              "format": "uuid",
              "description": "Unique identifier (GUID) for the service SKU. Equal to the skuId property on the related SubscribedSku object. Read-only",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "skuPartNumber": {
              "description": "Unique SKU display name. Equal to the skuPartNumber on the related SubscribedSku object; for example: 'AAD_Premium'. Read-only",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "servicePlans": [
          {
            "@odata.type": "microsoft.graph.servicePlanInfo"
          }
        ],
        "skuId": "string",
        "skuPartNumber": "string"
      }
    },
    "microsoft.graph.list": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "list",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The displayable title of the list.",
              "type": "string"
            },
            "list": {
              "description": "Provides additional details about the list."
            },
            "system": {
              "description": "If present, indicates that this is a system-managed list. Read-only."
            },
            "sharepointIds": {
              "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only."
            },
            "columns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.columnDefinition"
              }
            },
            "contentTypes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contentType"
              }
            },
            "drive": { },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.listItem"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "eTag": "string",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "parentReference": {
          "@odata.type": "microsoft.graph.itemReference"
        },
        "webUrl": "string",
        "createdByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "lastModifiedByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "displayName": "string",
        "list": {
          "@odata.type": "microsoft.graph.listInfo"
        },
        "system": {
          "@odata.type": "microsoft.graph.systemFacet"
        },
        "sharepointIds": {
          "@odata.type": "microsoft.graph.sharepointIds"
        },
        "columns": [
          {
            "@odata.type": "microsoft.graph.columnDefinition"
          }
        ],
        "contentTypes": [
          {
            "@odata.type": "microsoft.graph.contentType"
          }
        ],
        "drive": {
          "@odata.type": "microsoft.graph.drive"
        },
        "items": [
          {
            "@odata.type": "microsoft.graph.listItem"
          }
        ]
      }
    },
    "microsoft.graph.listItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "listItem",
          "type": "object",
          "properties": {
            "contentType": {
              "description": "The content type of this list item"
            },
            "sharepointIds": {
              "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only."
            },
            "fields": { },
            "driveItem": { },
            "versions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.listItemVersion"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "eTag": "string",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "parentReference": {
          "@odata.type": "microsoft.graph.itemReference"
        },
        "webUrl": "string",
        "createdByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "lastModifiedByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "contentType": {
          "@odata.type": "microsoft.graph.contentTypeInfo"
        },
        "sharepointIds": {
          "@odata.type": "microsoft.graph.sharepointIds"
        },
        "fields": {
          "@odata.type": "microsoft.graph.fieldValueSet"
        },
        "driveItem": {
          "@odata.type": "microsoft.graph.driveItem"
        },
        "versions": [
          {
            "@odata.type": "microsoft.graph.listItemVersion"
          }
        ]
      }
    },
    "microsoft.graph.listItemVersion": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItemVersion"
        },
        {
          "title": "listItemVersion",
          "type": "object",
          "properties": {
            "published": {
              "description": "Indicates the publication status of this particular version. Read-only."
            },
            "fields": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "publication": {
          "@odata.type": "microsoft.graph.publicationFacet"
        },
        "published": {
          "@odata.type": "microsoft.graph.publicationFacet"
        },
        "fields": {
          "@odata.type": "microsoft.graph.fieldValueSet"
        }
      }
    },
    "microsoft.graph.mailFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mailFolder",
          "type": "object",
          "properties": {
            "childFolderCount": {
              "format": "int32",
              "description": "The number of immediate child mailFolders in the current mailFolder.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "displayName": {
              "description": "The mailFolder's display name.",
              "type": "string"
            },
            "parentFolderId": {
              "description": "The unique identifier for the mailFolder's parent mailFolder.",
              "type": "string"
            },
            "totalItemCount": {
              "format": "int32",
              "description": "The number of items in the mailFolder.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unreadItemCount": {
              "format": "int32",
              "description": "The number of items in the mailFolder marked as unread.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "childFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mailFolder"
              }
            },
            "messageRules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.messageRule"
              }
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.message"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "childFolderCount": "integer",
        "displayName": "string",
        "parentFolderId": "string",
        "totalItemCount": "integer",
        "unreadItemCount": "integer",
        "childFolders": [
          {
            "@odata.type": "microsoft.graph.mailFolder"
          }
        ],
        "messageRules": [
          {
            "@odata.type": "microsoft.graph.messageRule"
          }
        ],
        "messages": [
          {
            "@odata.type": "microsoft.graph.message"
          }
        ],
        "multiValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
          }
        ],
        "singleValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
          }
        ]
      }
    },
    "microsoft.graph.messageRule": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "messageRule",
          "type": "object",
          "properties": {
            "actions": {
              "description": "Actions to be taken on a message when the corresponding conditions are fulfilled."
            },
            "conditions": {
              "description": "Conditions that when fulfilled, will trigger the corresponding actions for that rule."
            },
            "displayName": {
              "description": "The display name of the rule.",
              "type": "string"
            },
            "exceptions": {
              "description": "Exception conditions for the rule."
            },
            "hasError": {
              "description": "Indicates whether the rule is in an error condition. Read-only.",
              "type": "boolean"
            },
            "isEnabled": {
              "description": "Indicates whether the rule is enabled to be applied to messages.",
              "type": "boolean"
            },
            "isReadOnly": {
              "description": "Indicates if the rule is read-only and cannot be modified or deleted by the rules REST API.",
              "type": "boolean"
            },
            "sequence": {
              "format": "int32",
              "description": "Indicates the order in which the rule is executed, among other rules.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "actions": {
          "@odata.type": "microsoft.graph.messageRuleActions"
        },
        "conditions": {
          "@odata.type": "microsoft.graph.messageRulePredicates"
        },
        "displayName": "string",
        "exceptions": {
          "@odata.type": "microsoft.graph.messageRulePredicates"
        },
        "hasError": true,
        "isEnabled": true,
        "isReadOnly": true,
        "sequence": "integer"
      }
    },
    "microsoft.graph.multiValueLegacyExtendedProperty": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "multiValueLegacyExtendedProperty",
          "type": "object",
          "properties": {
            "value": {
              "description": "A collection of property values.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "value": [
          "string"
        ]
      }
    },
    "microsoft.graph.workbookNamedItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookNamedItem",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the object. Read-only.",
              "type": "string"
            },
            "comment": {
              "description": "Represents the comment associated with this name.",
              "type": "string"
            },
            "scope": {
              "description": "Indicates whether the name is scoped to the workbook or to a specific worksheet. Read-only.",
              "type": "string"
            },
            "type": {
              "description": "Indicates what type of reference is associated with the name. The possible values are: String, Integer, Double, Boolean, Range. Read-only.",
              "type": "string"
            },
            "value": {
              "description": "Represents the formula that the name is defined to refer to. E.g. =Sheet14!$B$2:$H$12, =4.75, etc. Read-only."
            },
            "visible": {
              "description": "Specifies whether the object is visible or not.",
              "type": "boolean"
            },
            "worksheet": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "name": "string",
        "comment": "string",
        "scope": "string",
        "type": "string",
        "value": {
          "@odata.type": "microsoft.graph.Json"
        },
        "visible": true,
        "worksheet": {
          "@odata.type": "microsoft.graph.workbookWorksheet"
        }
      }
    },
    "microsoft.graph.onenoteEntityBaseModel": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "onenoteEntityBaseModel",
          "type": "object",
          "properties": {
            "self": {
              "description": "The endpoint where you can get details about the page. Read-only.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "self": "string"
      }
    },
    "microsoft.graph.onenoteEntitySchemaObjectModel": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityBaseModel"
        },
        {
          "title": "onenoteEntitySchemaObjectModel",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "description": "The date and time when the page was created. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "self": "string",
        "createdDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.onenoteEntityHierarchyModel": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntitySchemaObjectModel"
        },
        {
          "title": "onenoteEntityHierarchyModel",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "The name of the notebook.",
              "type": "string"
            },
            "createdBy": {
              "description": "Identity of the user, device, and application which created the item. Read-only."
            },
            "lastModifiedBy": {
              "description": "Identity of the user, device, and application which created the item. Read-only."
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "self": "string",
        "createdDateTime": "string (timestamp)",
        "displayName": "string",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.notebook": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityHierarchyModel"
        },
        {
          "title": "notebook",
          "type": "object",
          "properties": {
            "isDefault": {
              "description": "Indicates whether this is the user's default notebook. Read-only.",
              "type": "boolean"
            },
            "isShared": {
              "description": "Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only.",
              "type": "boolean"
            },
            "links": {
              "description": "Links for opening the notebook. The oneNoteClientURL link opens the notebook in the OneNote native client if it's installed. The oneNoteWebURL link opens the notebook in OneNote Online."
            },
            "sectionGroupsUrl": {
              "description": "The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only.",
              "type": "string"
            },
            "sectionsUrl": {
              "description": "The URL for the sections navigation property, which returns all the sections in the notebook. Read-only.",
              "type": "string"
            },
            "userRole": {
              "description": "Possible values are: Owner, Contributor, Reader, None. Owner represents owner-level access to the notebook. Contributor represents read/write access to the notebook. Reader represents read-only access to the notebook. Read-only."
            },
            "sectionGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sectionGroup"
              }
            },
            "sections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteSection"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "self": "string",
        "createdDateTime": "string (timestamp)",
        "displayName": "string",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "isDefault": true,
        "isShared": true,
        "links": {
          "@odata.type": "microsoft.graph.notebookLinks"
        },
        "sectionGroupsUrl": "string",
        "sectionsUrl": "string",
        "userRole": {
          "@odata.type": "microsoft.graph.onenoteUserRole"
        },
        "sectionGroups": [
          {
            "@odata.type": "microsoft.graph.sectionGroup"
          }
        ],
        "sections": [
          {
            "@odata.type": "microsoft.graph.onenoteSection"
          }
        ]
      }
    },
    "microsoft.graph.onenote": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "onenote",
          "type": "object",
          "properties": {
            "notebooks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.notebook"
              }
            },
            "operations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteOperation"
              }
            },
            "pages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenotePage"
              }
            },
            "resources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteResource"
              }
            },
            "sectionGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sectionGroup"
              }
            },
            "sections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteSection"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "notebooks": [
          {
            "@odata.type": "microsoft.graph.notebook"
          }
        ],
        "operations": [
          {
            "@odata.type": "microsoft.graph.onenoteOperation"
          }
        ],
        "pages": [
          {
            "@odata.type": "microsoft.graph.onenotePage"
          }
        ],
        "resources": [
          {
            "@odata.type": "microsoft.graph.onenoteResource"
          }
        ],
        "sectionGroups": [
          {
            "@odata.type": "microsoft.graph.sectionGroup"
          }
        ],
        "sections": [
          {
            "@odata.type": "microsoft.graph.onenoteSection"
          }
        ]
      }
    },
    "microsoft.graph.operation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "operation",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "description": "The start time of the operation.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastActionDateTime": {
              "format": "date-time",
              "description": "The time of the last action of the operation.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "The current status of the operation: notStarted, running, completed, failed"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "lastActionDateTime": "string (timestamp)",
        "status": {
          "@odata.type": "microsoft.graph.operationStatus"
        }
      }
    },
    "microsoft.graph.onenoteOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.operation"
        },
        {
          "title": "onenoteOperation",
          "type": "object",
          "properties": {
            "error": {
              "description": "The error returned by the operation."
            },
            "resourceId": {
              "description": "The resource id.",
              "type": "string"
            },
            "resourceLocation": {
              "description": "The resource URI for the object. For example, the resource URI for a copied page or section.",
              "type": "string"
            },
            "percentComplete": {
              "description": "The operation percent complete if the operation is still in running status",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdDateTime": "string (timestamp)",
        "lastActionDateTime": "string (timestamp)",
        "status": {
          "@odata.type": "microsoft.graph.operationStatus"
        },
        "error": {
          "@odata.type": "microsoft.graph.onenoteOperationError"
        },
        "resourceId": "string",
        "resourceLocation": "string",
        "percentComplete": "string"
      }
    },
    "microsoft.graph.openTypeExtension": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.extension"
        },
        {
          "title": "openTypeExtension",
          "type": "object",
          "properties": {
            "extensionName": {
              "description": "A unique text identifier for an open type open extension. Required.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "extensionName": "string"
      }
    },
    "microsoft.graph.outlookCategory": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "outlookCategory",
          "type": "object",
          "properties": {
            "color": {
              "description": "A pre-set color constant that characterizes a category, and that is mapped to one of 25 predefined colors. See the note below."
            },
            "displayName": {
              "description": "A unique name that identifies a category in the user's mailbox. After a category is created, the name cannot be changed. Read-only.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "color": {
          "@odata.type": "microsoft.graph.categoryColor"
        },
        "displayName": "string"
      }
    },
    "microsoft.graph.outlookUser": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "outlookUser",
          "type": "object",
          "properties": {
            "masterCategories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.outlookCategory"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "masterCategories": [
          {
            "@odata.type": "microsoft.graph.outlookCategory"
          }
        ]
      }
    },
    "microsoft.graph.onenotePage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntitySchemaObjectModel"
        },
        {
          "title": "onenotePage",
          "type": "object",
          "properties": {
            "content": {
              "format": "base64url",
              "description": "The page's HTML content.",
              "type": "string"
            },
            "contentUrl": {
              "description": "The URL for the page's HTML content.  Read-only.",
              "type": "string"
            },
            "createdByAppId": {
              "description": "The unique identifier of the application that created the page. Read-only.",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "The date and time when the page was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "level": {
              "format": "int32",
              "description": "The indentation level of the page. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "links": {
              "description": "Links for opening the page. The oneNoteClientURL link opens the page in the OneNote native client if it 's installed. The oneNoteWebUrl link opens the page in OneNote Online. Read-only."
            },
            "order": {
              "format": "int32",
              "description": "The order of the page within its parent section. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "title": {
              "description": "The title of the page.",
              "type": "string"
            },
            "parentNotebook": { },
            "parentSection": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "self": "string",
        "createdDateTime": "string (timestamp)",
        "content": "string",
        "contentUrl": "string",
        "createdByAppId": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "level": "integer",
        "links": {
          "@odata.type": "microsoft.graph.pageLinks"
        },
        "order": "integer",
        "title": "string",
        "parentNotebook": {
          "@odata.type": "microsoft.graph.notebook"
        },
        "parentSection": {
          "@odata.type": "microsoft.graph.onenoteSection"
        }
      }
    },
    "microsoft.graph.permission": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "permission",
          "type": "object",
          "properties": {
            "grantedTo": {
              "description": "For user type permissions, the details of the users & applications for this permission. Read-only."
            },
            "inheritedFrom": {
              "description": "Provides a reference to the ancestor of the current permission, if it is inherited from an ancestor. Read-only."
            },
            "invitation": {
              "description": "Details of any associated sharing invitation for this permission. Read-only."
            },
            "link": {
              "description": "Provides the link details of the current permission, if it is a link type permissions. Read-only."
            },
            "roles": {
              "description": "The type of permission, e.g. read. See below for the full list of roles. Read-only.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "shareId": {
              "description": "A unique token that can be used to access this shared item via the **shares** API. Read-only.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "grantedTo": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "inheritedFrom": {
          "@odata.type": "microsoft.graph.itemReference"
        },
        "invitation": {
          "@odata.type": "microsoft.graph.sharingInvitation"
        },
        "link": {
          "@odata.type": "microsoft.graph.sharingLink"
        },
        "roles": [
          "string"
        ],
        "shareId": "string"
      }
    },
    "microsoft.graph.person": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "person",
          "type": "object",
          "properties": {
            "birthday": {
              "description": "The person's birthday.",
              "type": "string"
            },
            "companyName": {
              "description": "The name of the person's company.",
              "type": "string"
            },
            "department": {
              "description": "The person's department.",
              "type": "string"
            },
            "displayName": {
              "description": "The person's display name.",
              "type": "string"
            },
            "scoredEmailAddresses": {
              "description": "The person's email addresses.",
              "type": "array",
              "items": { }
            },
            "givenName": {
              "description": "The person's given name.",
              "type": "string"
            },
            "imAddress": {
              "description": "The instant message voice over IP (VOIP) session initiation protocol (SIP) address for the user. Read-only.",
              "type": "string"
            },
            "isFavorite": {
              "description": "true if the user has flagged this person as a favorite.",
              "type": "boolean"
            },
            "jobTitle": {
              "description": "The person's job title.",
              "type": "string"
            },
            "officeLocation": {
              "description": "The location of the person's office.",
              "type": "string"
            },
            "personNotes": {
              "description": "Free-form notes that the user has taken about this person.",
              "type": "string"
            },
            "personType": {
              "description": "The type of person."
            },
            "phones": {
              "description": "The person's phone numbers.",
              "type": "array",
              "items": { }
            },
            "postalAddresses": {
              "description": "The person's addresses.",
              "type": "array",
              "items": { }
            },
            "profession": {
              "description": "The person's profession.",
              "type": "string"
            },
            "surname": {
              "description": "The person's surname.",
              "type": "string"
            },
            "userPrincipalName": {
              "description": "The user principal name (UPN) of the person. The UPN is an Internet-style login name for the person based on the Internet standard RFC 822. By convention, this should map to the person's email name. The general format is alias@domain.",
              "type": "string"
            },
            "websites": {
              "description": "The person's websites.",
              "type": "array",
              "items": { }
            },
            "yomiCompany": {
              "description": "The phonetic Japanese name of the person's company.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "birthday": "string",
        "companyName": "string",
        "department": "string",
        "displayName": "string",
        "scoredEmailAddresses": [
          {
            "@odata.type": "microsoft.graph.scoredEmailAddress"
          }
        ],
        "givenName": "string",
        "imAddress": "string",
        "isFavorite": true,
        "jobTitle": "string",
        "officeLocation": "string",
        "personNotes": "string",
        "personType": {
          "@odata.type": "microsoft.graph.personType"
        },
        "phones": [
          {
            "@odata.type": "microsoft.graph.phone"
          }
        ],
        "postalAddresses": [
          {
            "@odata.type": "microsoft.graph.location"
          }
        ],
        "profession": "string",
        "surname": "string",
        "userPrincipalName": "string",
        "websites": [
          {
            "@odata.type": "microsoft.graph.website"
          }
        ],
        "yomiCompany": "string"
      }
    },
    "microsoft.graph.planner": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "planner",
          "type": "object",
          "properties": {
            "buckets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerBucket"
              }
            },
            "plans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerPlan"
              }
            },
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "buckets": [
          {
            "@odata.type": "microsoft.graph.plannerBucket"
          }
        ],
        "plans": [
          {
            "@odata.type": "microsoft.graph.plannerPlan"
          }
        ],
        "tasks": [
          {
            "@odata.type": "microsoft.graph.plannerTask"
          }
        ]
      }
    },
    "microsoft.graph.plannerAssignedToTaskBoardTaskFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerAssignedToTaskBoardTaskFormat",
          "type": "object",
          "properties": {
            "orderHintsByAssignee": {
              "description": "Dictionary of hints used to order tasks on the AssignedTo view of the Task Board. The key of each entry is one of the users the task is assigned to and the value is the order hint. The format of each value is defined as outlined here."
            },
            "unassignedOrderHint": {
              "description": "Hint value used to order the task on the AssignedTo view of the Task Board when the task is not assigned to anyone, or if the orderHintsByAssignee dictionary does not provide an order hint for the user the task is assigned to. The format is defined as outlined here.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "orderHintsByAssignee": {
          "@odata.type": "microsoft.graph.plannerOrderHintsByAssignee"
        },
        "unassignedOrderHint": "string"
      }
    },
    "microsoft.graph.plannerBucket": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerBucket",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the bucket.",
              "type": "string"
            },
            "orderHint": {
              "description": "Hint used to order items of this type in a list view. The format is defined as outlined here.",
              "type": "string"
            },
            "planId": {
              "description": "Plan ID to which the bucket belongs.",
              "type": "string"
            },
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "name": "string",
        "orderHint": "string",
        "planId": "string",
        "tasks": [
          {
            "@odata.type": "microsoft.graph.plannerTask"
          }
        ]
      }
    },
    "microsoft.graph.plannerBucketTaskBoardTaskFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerBucketTaskBoardTaskFormat",
          "type": "object",
          "properties": {
            "orderHint": {
              "description": "Hint used to order tasks in the Bucket view of the Task Board. The format is defined as outlined here.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "orderHint": "string"
      }
    },
    "microsoft.graph.plannerGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerGroup",
          "type": "object",
          "properties": {
            "plans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerPlan"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "plans": [
          {
            "@odata.type": "microsoft.graph.plannerPlan"
          }
        ]
      }
    },
    "microsoft.graph.plannerPlan": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerPlan",
          "type": "object",
          "properties": {
            "createdBy": {
              "description": "Read-only. The user who created the plan."
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Read-only. Date and time at which the plan is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "owner": {
              "description": "ID of the Group that owns the plan. A valid group must exist before this field can be set. Once set, this can only be updated by the owner.",
              "type": "string"
            },
            "title": {
              "description": "Required. Title of the plan.",
              "type": "string"
            },
            "buckets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerBucket"
              }
            },
            "details": { },
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "createdDateTime": "string (timestamp)",
        "owner": "string",
        "title": "string",
        "buckets": [
          {
            "@odata.type": "microsoft.graph.plannerBucket"
          }
        ],
        "details": {
          "@odata.type": "microsoft.graph.plannerPlanDetails"
        },
        "tasks": [
          {
            "@odata.type": "microsoft.graph.plannerTask"
          }
        ]
      }
    },
    "microsoft.graph.plannerPlanDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerPlanDetails",
          "type": "object",
          "properties": {
            "categoryDescriptions": {
              "description": "An object that specifies the descriptions of the six categories that can be associated with tasks in the plan"
            },
            "sharedWith": {
              "description": "Set of user ids that this plan is shared with. If you are leveraging Office 365 Groups, use the Groups API to manage group membership to share the group's plan. You can also add existing members of the group to this collection though it is not required for them to access the plan owned by the group."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "categoryDescriptions": {
          "@odata.type": "microsoft.graph.plannerCategoryDescriptions"
        },
        "sharedWith": {
          "@odata.type": "microsoft.graph.plannerUserIds"
        }
      }
    },
    "microsoft.graph.plannerProgressTaskBoardTaskFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerProgressTaskBoardTaskFormat",
          "type": "object",
          "properties": {
            "orderHint": {
              "description": "Hint value used to order the task on the Progress view of the Task Board. The format is defined as outlined here.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "orderHint": "string"
      }
    },
    "microsoft.graph.plannerTask": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerTask",
          "type": "object",
          "properties": {
            "activeChecklistItemCount": {
              "format": "int32",
              "description": "Number of checklist items with value set to 'false', representing incomplete items.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "appliedCategories": {
              "description": "The categories to which the task has been applied. See applied Categories for possible values."
            },
            "assigneePriority": {
              "description": "Hint used to order items of this type in a list view. The format is defined as outlined here.",
              "type": "string"
            },
            "assignments": {
              "description": "The set of assignees the task is assigned to."
            },
            "bucketId": {
              "description": "Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It is 28 characters long and case-sensitive. Format validation is done on the service.",
              "type": "string"
            },
            "checklistItemCount": {
              "format": "int32",
              "description": "Number of checklist items that are present on the task.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "completedBy": {
              "description": "Identity of the user that completed the task."
            },
            "completedDateTime": {
              "format": "date-time",
              "description": "Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "conversationThreadId": {
              "description": "Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group.",
              "type": "string"
            },
            "createdBy": {
              "description": "Identity of the user that created the task."
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "dueDateTime": {
              "format": "date-time",
              "description": "Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "hasDescription": {
              "description": "Read-only. Value is true if the details object of the task has a non-empty description and false otherwise.",
              "type": "boolean"
            },
            "orderHint": {
              "description": "Hint used to order items of this type in a list view. The format is defined as outlined here.",
              "type": "string"
            },
            "percentComplete": {
              "format": "int32",
              "description": "Percentage of task completion. When set to 100, the task is considered completed.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "planId": {
              "description": "Plan ID to which the task belongs.",
              "type": "string"
            },
            "previewType": {
              "description": "This sets the type of preview that shows up on the task. The possible values are: automatic, noPreview, checklist, description, reference."
            },
            "referenceCount": {
              "format": "int32",
              "description": "Number of external references that exist on the task.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "startDateTime": {
              "format": "date-time",
              "description": "Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "title": {
              "description": "Title of the task.",
              "type": "string"
            },
            "assignedToTaskBoardFormat": { },
            "bucketTaskBoardFormat": { },
            "details": { },
            "progressTaskBoardFormat": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "activeChecklistItemCount": "integer",
        "appliedCategories": {
          "@odata.type": "microsoft.graph.plannerAppliedCategories"
        },
        "assigneePriority": "string",
        "assignments": {
          "@odata.type": "microsoft.graph.plannerAssignments"
        },
        "bucketId": "string",
        "checklistItemCount": "integer",
        "completedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "completedDateTime": "string (timestamp)",
        "conversationThreadId": "string",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "createdDateTime": "string (timestamp)",
        "dueDateTime": "string (timestamp)",
        "hasDescription": true,
        "orderHint": "string",
        "percentComplete": "integer",
        "planId": "string",
        "previewType": {
          "@odata.type": "microsoft.graph.plannerPreviewType"
        },
        "referenceCount": "integer",
        "startDateTime": "string (timestamp)",
        "title": "string",
        "assignedToTaskBoardFormat": {
          "@odata.type": "microsoft.graph.plannerAssignedToTaskBoardTaskFormat"
        },
        "bucketTaskBoardFormat": {
          "@odata.type": "microsoft.graph.plannerBucketTaskBoardTaskFormat"
        },
        "details": {
          "@odata.type": "microsoft.graph.plannerTaskDetails"
        },
        "progressTaskBoardFormat": {
          "@odata.type": "microsoft.graph.plannerProgressTaskBoardTaskFormat"
        }
      }
    },
    "microsoft.graph.plannerTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerTaskDetails",
          "type": "object",
          "properties": {
            "checklist": {
              "description": "The collection of checklist items on the task."
            },
            "description": {
              "description": "Description of the task",
              "type": "string"
            },
            "previewType": {
              "description": "This sets the type of preview that shows up on the task. The possible values are: automatic, noPreview, checklist, description, reference. When set to automatic the displayed preview is chosen by the app viewing the task.",
              "type": "string"
            },
            "references": {
              "description": "The collection of references on the task."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "checklist": {
          "@odata.type": "microsoft.graph.plannerChecklistItems"
        },
        "description": "string",
        "previewType": "string",
        "references": {
          "@odata.type": "microsoft.graph.plannerExternalReferences"
        }
      }
    },
    "microsoft.graph.plannerUser": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerUser",
          "type": "object",
          "properties": {
            "plans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerPlan"
              }
            },
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "plans": [
          {
            "@odata.type": "microsoft.graph.plannerPlan"
          }
        ],
        "tasks": [
          {
            "@odata.type": "microsoft.graph.plannerTask"
          }
        ]
      }
    },
    "microsoft.graph.post": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "post",
          "type": "object",
          "properties": {
            "body": {
              "description": "The contents of the post. This is a default property. This property can be null."
            },
            "conversationId": {
              "description": "Unique ID of the conversation. Read-only.",
              "type": "string"
            },
            "conversationThreadId": {
              "description": "Unique ID of the conversation thread. Read-only.",
              "type": "string"
            },
            "from": {
              "description": "Used in delegate access scenarios. Indicates who posted the message on behalf of another user. This is a default property."
            },
            "hasAttachments": {
              "description": "Indicates whether the post has at least one attachment. This is a default property.",
              "type": "boolean"
            },
            "newParticipants": {
              "description": "Conversation participants that were added to the thread as part of this post.",
              "type": "array",
              "items": { }
            },
            "receivedDateTime": {
              "format": "date-time",
              "description": "Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "sender": {
              "description": "Contains the address of the sender. The value of Sender is assumed to be the address of the authenticated user in the case when Sender is not specified. This is a default property."
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.attachment"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "inReplyTo": { },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "categories": [
          "string"
        ],
        "changeKey": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "body": {
          "@odata.type": "microsoft.graph.itemBody"
        },
        "conversationId": "string",
        "conversationThreadId": "string",
        "from": {
          "@odata.type": "microsoft.graph.recipient"
        },
        "hasAttachments": true,
        "newParticipants": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "receivedDateTime": "string (timestamp)",
        "sender": {
          "@odata.type": "microsoft.graph.recipient"
        },
        "attachments": [
          {
            "@odata.type": "microsoft.graph.attachment"
          }
        ],
        "extensions": [
          {
            "@odata.type": "microsoft.graph.extension"
          }
        ],
        "inReplyTo": {
          "@odata.type": "microsoft.graph.post"
        },
        "multiValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.multiValueLegacyExtendedProperty"
          }
        ],
        "singleValueExtendedProperties": [
          {
            "@odata.type": "microsoft.graph.singleValueLegacyExtendedProperty"
          }
        ]
      }
    },
    "microsoft.graph.profilePhoto": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "profilePhoto",
          "type": "object",
          "properties": {
            "height": {
              "format": "int32",
              "description": "The height of the photo. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "width": {
              "format": "int32",
              "description": "The width of the photo. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "height": "integer",
        "width": "integer"
      }
    },
    "microsoft.graph.userActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "userActivity",
          "type": "object",
          "properties": {
            "appActivityId": {
              "description": "Required. The unique activity ID in the context of the app - supplied by caller and immutable thereafter.",
              "type": "string"
            },
            "activitySourceHost": {
              "description": "Required. URL for the domain representing the cross-platform identity mapping for the app. Mapping is stored either as a JSON file hosted on the domain or configurable via Windows Dev Center. The JSON file is named cross-platform-app-identifiers and is hosted at root of your HTTPS domain, either at the top level domain or include a sub domain. For example: https://contoso.com or https://myapp.contoso.com but NOT https://myapp.contoso.com/somepath. You must have a unique file and domain (or sub domain) per cross-platform app identity. For example, a separate file and domain is needed for Word vs. PowerPoint.",
              "type": "string"
            },
            "userTimezone": {
              "description": "Optional. The timezone in which the user's device used to generate the activity was located at activity creation time; values supplied as Olson IDs in order to support cross-platform representation.",
              "type": "string"
            },
            "appDisplayName": {
              "description": "Optional. Short text description of the app used to generate the activity for use in cases when the app is not installed on the user’s local device.",
              "type": "string"
            },
            "activationUrl": {
              "description": "Required. URL used to launch the activity in the best native experience represented by the appId. Might launch a web-based app if no native app exists.",
              "type": "string"
            },
            "contentUrl": {
              "description": "Optional. Used in the event the content can be rendered outside of a native or web-based app experience (for example, a pointer to an item in an RSS feed).",
              "type": "string"
            },
            "fallbackUrl": {
              "description": "Optional. URL used to launch the activity in a web-based app, if available.",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Set by the server. DateTime in UTC when the object was created on the server.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Set by the server. DateTime in UTC when the object was modified on the server.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "Set by the server. DateTime in UTC when the object expired on the server.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "status": {
              "description": "Set by the server. A status code used to identify valid objects. Values: active, updated, deleted, ignored."
            },
            "contentInfo": {
              "description": "Optional. A custom piece of data - JSON-LD extensible description of content according to schema.org syntax."
            },
            "visualElements": {
              "description": "Required. The object containing information to render the activity in the UX."
            },
            "historyItems": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.activityHistoryItem"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "appActivityId": "string",
        "activitySourceHost": "string",
        "userTimezone": "string",
        "appDisplayName": "string",
        "activationUrl": "string",
        "contentUrl": "string",
        "fallbackUrl": "string",
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "expirationDateTime": "string (timestamp)",
        "status": {
          "@odata.type": "microsoft.graph.status"
        },
        "contentInfo": {
          "@odata.type": "microsoft.graph.Json"
        },
        "visualElements": {
          "@odata.type": "microsoft.graph.visualInfo"
        },
        "historyItems": [
          {
            "@odata.type": "microsoft.graph.activityHistoryItem"
          }
        ]
      }
    },
    "microsoft.graph.activityHistoryItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "activityHistoryItem",
          "type": "object",
          "properties": {
            "status": {
              "description": "Set by the server. A status code used to identify valid objects. Values: active, updated, deleted, ignored."
            },
            "createdDateTime": {
              "format": "date-time",
              "description": "Set by the server. DateTime in UTC when the object was created on the server.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "description": "Set by the server. DateTime in UTC when the object was modified on the server.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "Optional. UTC DateTime when the historyItem will undergo hard-delete. Can be set by the client.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "startedDateTime": {
              "format": "date-time",
              "description": "Required. UTC DateTime when the historyItem (activity session) was started. Required for timeline history.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "userTimezone": {
              "description": "Optional. The timezone in which the user's device used to generate the activity was located at activity creation time. Values supplied as Olson IDs in order to support cross-platform representation.",
              "type": "string"
            },
            "lastActiveDateTime": {
              "format": "date-time",
              "description": "Optional. UTC DateTime when the historyItem (activity session) was last understood as active or finished - if null, historyItem status should be Ongoing.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "activeDurationSeconds": {
              "format": "int32",
              "description": "Optional. The duration of active user engagement. if not supplied, this is calculated from the startedDateTime and lastActiveDateTime.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "activity": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "status": {
          "@odata.type": "microsoft.graph.status"
        },
        "createdDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)",
        "expirationDateTime": "string (timestamp)",
        "startedDateTime": "string (timestamp)",
        "userTimezone": "string",
        "lastActiveDateTime": "string (timestamp)",
        "activeDurationSeconds": "integer",
        "activity": {
          "@odata.type": "microsoft.graph.userActivity"
        }
      }
    },
    "microsoft.graph.workbookRange": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRange",
          "type": "object",
          "properties": {
            "address": {
              "description": "Represents the range reference in A1-style. Address value will contain the Sheet reference (e.g. Sheet1!A1:B4). Read-only.",
              "type": "string"
            },
            "addressLocal": {
              "description": "Represents range reference for the specified range in the language of the user. Read-only.",
              "type": "string"
            },
            "cellCount": {
              "format": "int32",
              "description": "Number of cells in the range. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "columnCount": {
              "format": "int32",
              "description": "Represents the total number of columns in the range. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "columnHidden": {
              "description": "Represents if all columns of the current range are hidden.",
              "type": "boolean"
            },
            "columnIndex": {
              "format": "int32",
              "description": "Represents the column number of the first cell in the range. Zero-indexed. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "formulas": {
              "description": "Represents the formula in A1-style notation."
            },
            "formulasLocal": {
              "description": "Represents the formula in A1-style notation, in the user's language and number-formatting locale.  For example, the English '=SUM(A1, 1.5)' formula would become '=SUMME(A1; 1,5)' in German."
            },
            "formulasR1C1": {
              "description": "Represents the formula in R1C1-style notation."
            },
            "hidden": {
              "description": "Represents if all cells of the current range are hidden. Read-only.",
              "type": "boolean"
            },
            "numberFormat": {
              "description": "Represents Excel's number format code for the given cell."
            },
            "rowCount": {
              "format": "int32",
              "description": "Returns the total number of rows in the range. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "rowHidden": {
              "description": "Represents if all rows of the current range are hidden.",
              "type": "boolean"
            },
            "rowIndex": {
              "format": "int32",
              "description": "Returns the row number of the first cell in the range. Zero-indexed. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "text": {
              "description": "Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API. Read-only."
            },
            "valueTypes": {
              "description": "Represents the type of data of each cell. The possible values are: Unknown, Empty, String, Integer, Double, Boolean, Error. Read-only."
            },
            "values": {
              "description": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string."
            },
            "format": { },
            "sort": { },
            "worksheet": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "address": "string",
        "addressLocal": "string",
        "cellCount": "integer",
        "columnCount": "integer",
        "columnHidden": true,
        "columnIndex": "integer",
        "formulas": {
          "@odata.type": "microsoft.graph.Json"
        },
        "formulasLocal": {
          "@odata.type": "microsoft.graph.Json"
        },
        "formulasR1C1": {
          "@odata.type": "microsoft.graph.Json"
        },
        "hidden": true,
        "numberFormat": {
          "@odata.type": "microsoft.graph.Json"
        },
        "rowCount": "integer",
        "rowHidden": true,
        "rowIndex": "integer",
        "text": {
          "@odata.type": "microsoft.graph.Json"
        },
        "valueTypes": {
          "@odata.type": "microsoft.graph.Json"
        },
        "values": {
          "@odata.type": "microsoft.graph.Json"
        },
        "format": {
          "@odata.type": "microsoft.graph.workbookRangeFormat"
        },
        "sort": {
          "@odata.type": "microsoft.graph.workbookRangeSort"
        },
        "worksheet": {
          "@odata.type": "microsoft.graph.workbookWorksheet"
        }
      }
    },
    "microsoft.graph.workbookRangeBorder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeBorder",
          "type": "object",
          "properties": {
            "color": {
              "description": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. 'FFA500') or as a named HTML color (e.g. 'orange').",
              "type": "string"
            },
            "sideIndex": {
              "description": "Constant value that indicates the specific side of the border. The possible values are: EdgeTop, EdgeBottom, EdgeLeft, EdgeRight, InsideVertical, InsideHorizontal, DiagonalDown, DiagonalUp. Read-only.",
              "type": "string"
            },
            "style": {
              "description": "One of the constants of line style specifying the line style for the border. The possible values are: None, Continuous, Dash, DashDot, DashDotDot, Dot, Double, SlantDashDot.",
              "type": "string"
            },
            "weight": {
              "description": "Specifies the weight of the border around a range. The possible values are: Hairline, Thin, Medium, Thick.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "color": "string",
        "sideIndex": "string",
        "style": "string",
        "weight": "string"
      }
    },
    "microsoft.graph.workbookRangeFill": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeFill",
          "type": "object",
          "properties": {
            "color": {
              "description": "HTML color code representing the color of the border line, of the form #RRGGBB (e.g. 'FFA500') or as a named HTML color (e.g. 'orange')",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "color": "string"
      }
    },
    "microsoft.graph.workbookRangeFont": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeFont",
          "type": "object",
          "properties": {
            "bold": {
              "description": "Represents the bold status of font.",
              "type": "boolean"
            },
            "color": {
              "description": "HTML color code representation of the text color. E.g. #FF0000 represents Red.",
              "type": "string"
            },
            "italic": {
              "description": "Represents the italic status of the font.",
              "type": "boolean"
            },
            "name": {
              "description": "Font name (e.g. 'Calibri')",
              "type": "string"
            },
            "size": {
              "format": "double",
              "description": "Font size."
            },
            "underline": {
              "description": "Type of underline applied to the font. The possible values are: None, Single, Double, SingleAccountant, DoubleAccountant.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "bold": true,
        "color": "string",
        "italic": true,
        "name": "string",
        "size": "double",
        "underline": "string"
      }
    },
    "microsoft.graph.workbookRangeFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeFormat",
          "type": "object",
          "properties": {
            "columnWidth": {
              "format": "double",
              "description": "Gets or sets the width of all colums within the range. If the column widths are not uniform, null will be returned."
            },
            "horizontalAlignment": {
              "description": "Represents the horizontal alignment for the specified object. The possible values are: General, Left, Center, Right, Fill, Justify, CenterAcrossSelection, Distributed.",
              "type": "string"
            },
            "rowHeight": {
              "format": "double",
              "description": "Gets or sets the height of all rows in the range. If the row heights are not uniform null will be returned."
            },
            "verticalAlignment": {
              "description": "Represents the vertical alignment for the specified object. The possible values are: Top, Center, Bottom, Justify, Distributed.",
              "type": "string"
            },
            "wrapText": {
              "description": "Indicates if Excel wraps the text in the object. A null value indicates that the entire range doesn't have uniform wrap setting",
              "type": "boolean"
            },
            "borders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookRangeBorder"
              }
            },
            "fill": { },
            "font": { },
            "protection": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "columnWidth": "double",
        "horizontalAlignment": "string",
        "rowHeight": "double",
        "verticalAlignment": "string",
        "wrapText": true,
        "borders": [
          {
            "@odata.type": "microsoft.graph.workbookRangeBorder"
          }
        ],
        "fill": {
          "@odata.type": "microsoft.graph.workbookRangeFill"
        },
        "font": {
          "@odata.type": "microsoft.graph.workbookRangeFont"
        },
        "protection": {
          "@odata.type": "microsoft.graph.workbookFormatProtection"
        }
      }
    },
    "microsoft.graph.workbookRangeSort": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeSort",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)"
      }
    },
    "microsoft.graph.referenceAttachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attachment"
        },
        {
          "title": "referenceAttachment",
          "type": "object"
        }
      ],
      "example": {
        "id": "string (identifier)",
        "contentType": "string",
        "isInline": true,
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "size": "integer"
      }
    },
    "microsoft.graph.onenoteResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityBaseModel"
        },
        {
          "title": "onenoteResource",
          "type": "object",
          "properties": {
            "content": {
              "format": "base64url",
              "description": "The content stream",
              "type": "string"
            },
            "contentUrl": {
              "description": "The URL for downloading the content",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "self": "string",
        "content": "string",
        "contentUrl": "string"
      }
    },
    "microsoft.graph.schemaExtension": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "schemaExtension",
          "type": "object",
          "properties": {
            "description": {
              "description": "Description for the schema extension.",
              "type": "string"
            },
            "owner": {
              "description": "The appId of the application that is the owner of the schema extension. This property can be supplied on creation, to set the owner.  If not supplied, then the calling application's appId will be set as the owner. In either case, the signed-in user must be the owner of the application. Once set, this property is read-only and cannot be changed.",
              "type": "string"
            },
            "properties": {
              "description": "The collection of property names and types that make up the schema extension definition.",
              "type": "array",
              "items": { }
            },
            "status": {
              "description": "The lifecycle state of the schema extension. Possible states are InDevelopment, Available, and Deprecated. Automatically set to InDevelopment on creation. Schema extensions provides more information on the possible state transitions and behaviors.",
              "type": "string"
            },
            "targetTypes": {
              "description": "Set of Microsoft Graph types (that can support extensions) that the schema extension can be applied to. Select from contact, device, event, group, message, organization, post, or user.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "description": "string",
        "owner": "string",
        "properties": [
          {
            "@odata.type": "microsoft.graph.extensionSchemaProperty"
          }
        ],
        "status": "string",
        "targetTypes": [
          "string"
        ]
      }
    },
    "microsoft.graph.onenoteSection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityHierarchyModel"
        },
        {
          "title": "onenoteSection",
          "type": "object",
          "properties": {
            "isDefault": {
              "description": "Indicates whether this is the user's default section. Read-only.",
              "type": "boolean"
            },
            "links": {
              "description": "Links for opening the section. The oneNoteClientURL link opens the section in the OneNote native client if it's installed. The oneNoteWebURL link opens the section in OneNote Online."
            },
            "pagesUrl": {
              "description": "The pages endpoint where you can get details for all the pages in the section. Read-only.",
              "type": "string"
            },
            "pages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenotePage"
              }
            },
            "parentNotebook": { },
            "parentSectionGroup": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "self": "string",
        "createdDateTime": "string (timestamp)",
        "displayName": "string",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "isDefault": true,
        "links": {
          "@odata.type": "microsoft.graph.sectionLinks"
        },
        "pagesUrl": "string",
        "pages": [
          {
            "@odata.type": "microsoft.graph.onenotePage"
          }
        ],
        "parentNotebook": {
          "@odata.type": "microsoft.graph.notebook"
        },
        "parentSectionGroup": {
          "@odata.type": "microsoft.graph.sectionGroup"
        }
      }
    },
    "microsoft.graph.sectionGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityHierarchyModel"
        },
        {
          "title": "sectionGroup",
          "type": "object",
          "properties": {
            "sectionGroupsUrl": {
              "description": "The URL for the sectionGroups navigation property, which returns all the section groups in the section group. Read-only.",
              "type": "string"
            },
            "sectionsUrl": {
              "description": "The URL for the sections navigation property, which returns all the sections in the section group. Read-only.",
              "type": "string"
            },
            "parentNotebook": { },
            "parentSectionGroup": { },
            "sectionGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sectionGroup"
              }
            },
            "sections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteSection"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "self": "string",
        "createdDateTime": "string (timestamp)",
        "displayName": "string",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "sectionGroupsUrl": "string",
        "sectionsUrl": "string",
        "parentNotebook": {
          "@odata.type": "microsoft.graph.notebook"
        },
        "parentSectionGroup": {
          "@odata.type": "microsoft.graph.sectionGroup"
        },
        "sectionGroups": [
          {
            "@odata.type": "microsoft.graph.sectionGroup"
          }
        ],
        "sections": [
          {
            "@odata.type": "microsoft.graph.onenoteSection"
          }
        ]
      }
    },
    "microsoft.graph.security": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "security",
          "type": "object",
          "properties": {
            "alerts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.alert"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "alerts": [
          {
            "@odata.type": "microsoft.graph.alert"
          }
        ]
      }
    },
    "microsoft.graph.sharedDriveItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "sharedDriveItem",
          "type": "object",
          "properties": {
            "owner": {
              "description": "Information about the owner of the shared item being referenced."
            },
            "driveItem": { },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            },
            "list": { },
            "listItem": { },
            "root": { },
            "site": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "eTag": "string",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "parentReference": {
          "@odata.type": "microsoft.graph.itemReference"
        },
        "webUrl": "string",
        "createdByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "lastModifiedByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "owner": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "driveItem": {
          "@odata.type": "microsoft.graph.driveItem"
        },
        "items": [
          {
            "@odata.type": "microsoft.graph.driveItem"
          }
        ],
        "list": {
          "@odata.type": "microsoft.graph.list"
        },
        "listItem": {
          "@odata.type": "microsoft.graph.listItem"
        },
        "root": {
          "@odata.type": "microsoft.graph.driveItem"
        },
        "site": {
          "@odata.type": "microsoft.graph.site"
        }
      }
    },
    "microsoft.graph.singleValueLegacyExtendedProperty": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "singleValueLegacyExtendedProperty",
          "type": "object",
          "properties": {
            "value": {
              "description": "A property value.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "value": "string"
      }
    },
    "microsoft.graph.site": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "site",
          "type": "object",
          "properties": {
            "root": {
              "description": "If present, indicates that this is the root site in the site collection. Read-only."
            },
            "sharepointIds": {
              "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only."
            },
            "siteCollection": {
              "description": "Provides details about the site's site collection. Available only on the root site. Read-only."
            },
            "displayName": {
              "description": "The full title for the site. Read-only.",
              "type": "string"
            },
            "contentTypes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contentType"
              }
            },
            "drive": { },
            "drives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.drive"
              }
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.baseItem"
              }
            },
            "lists": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.list"
              }
            },
            "sites": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.site"
              }
            },
            "columns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.columnDefinition"
              }
            },
            "onenote": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "eTag": "string",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "parentReference": {
          "@odata.type": "microsoft.graph.itemReference"
        },
        "webUrl": "string",
        "createdByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "lastModifiedByUser": {
          "@odata.type": "microsoft.graph.user"
        },
        "root": {
          "@odata.type": "microsoft.graph.root"
        },
        "sharepointIds": {
          "@odata.type": "microsoft.graph.sharepointIds"
        },
        "siteCollection": {
          "@odata.type": "microsoft.graph.siteCollection"
        },
        "displayName": "string",
        "contentTypes": [
          {
            "@odata.type": "microsoft.graph.contentType"
          }
        ],
        "drive": {
          "@odata.type": "microsoft.graph.drive"
        },
        "drives": [
          {
            "@odata.type": "microsoft.graph.drive"
          }
        ],
        "items": [
          {
            "@odata.type": "microsoft.graph.baseItem"
          }
        ],
        "lists": [
          {
            "@odata.type": "microsoft.graph.list"
          }
        ],
        "sites": [
          {
            "@odata.type": "microsoft.graph.site"
          }
        ],
        "columns": [
          {
            "@odata.type": "microsoft.graph.columnDefinition"
          }
        ],
        "onenote": {
          "@odata.type": "microsoft.graph.onenote"
        }
      }
    },
    "microsoft.graph.subscribedSku": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "subscribedSku",
          "type": "object",
          "properties": {
            "appliesTo": {
              "description": "For example, 'User' or 'Company'.",
              "type": "string"
            },
            "capabilityStatus": {
              "description": "For example, 'Enabled'.",
              "type": "string"
            },
            "consumedUnits": {
              "format": "int32",
              "description": "The number of licenses that have been assigned.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "prepaidUnits": {
              "description": "Information about the number and status of prepaid licenses."
            },
            "servicePlans": {
              "description": "Information about the service plans that are available with the SKU. Not nullable",
              "type": "array",
              "items": { }
            },
            "skuId": {
              "format": "uuid",
              "description": "The unique identifier (GUID) for the service SKU.",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "skuPartNumber": {
              "description": "The SKU part number; for example: 'AAD_PREMIUM' or 'RMSBASIC'.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "appliesTo": "string",
        "capabilityStatus": "string",
        "consumedUnits": "integer",
        "prepaidUnits": {
          "@odata.type": "microsoft.graph.licenseUnitsDetail"
        },
        "servicePlans": [
          {
            "@odata.type": "microsoft.graph.servicePlanInfo"
          }
        ],
        "skuId": "string",
        "skuPartNumber": "string"
      }
    },
    "microsoft.graph.subscription": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "subscription",
          "type": "object",
          "properties": {
            "changeType": {
              "description": "Required. Indicates the type of change in the subscribed resource that will raise a notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list.Note: Drive root item notifications support only the updated changeType. User and group notifications support updated and deleted changeType.",
              "type": "string"
            },
            "notificationUrl": {
              "description": "Required. The URL of the endpoint that will receive the notifications. This URL must make use of the HTTPS protocol.",
              "type": "string"
            },
            "resource": {
              "description": "Required. Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/v1.0/).",
              "type": "string"
            },
            "applicationId": {
              "description": "Identifier of the application used to create the subscription. Read-only.",
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "description": "Required. Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to.  See the table below for maximum supported subscription length of time.",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "clientState": {
              "description": "Optional. Specifies the value of the clientState property sent by the service in each notification. The maximum length is 128 characters. The client can check that the notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each notification.",
              "type": "string"
            },
            "creatorId": {
              "description": "Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the id of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the id of the service principal corresponding to the app. Read-only.",
              "type": "string"
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "changeType": "string",
        "notificationUrl": "string",
        "resource": "string",
        "applicationId": "string",
        "expirationDateTime": "string (timestamp)",
        "clientState": "string",
        "creatorId": "string"
      }
    },
    "microsoft.graph.workbookTable": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTable",
          "type": "object",
          "properties": {
            "highlightFirstColumn": {
              "description": "Indicates whether the first column contains special formatting.",
              "type": "boolean"
            },
            "highlightLastColumn": {
              "description": "Indicates whether the last column contains special formatting.",
              "type": "boolean"
            },
            "name": {
              "description": "Name of the table.",
              "type": "string"
            },
            "showBandedColumns": {
              "description": "Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.",
              "type": "boolean"
            },
            "showBandedRows": {
              "description": "Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.",
              "type": "boolean"
            },
            "showFilterButton": {
              "description": "Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.",
              "type": "boolean"
            },
            "showHeaders": {
              "description": "Indicates whether the header row is visible or not. This value can be set to show or remove the header row.",
              "type": "boolean"
            },
            "showTotals": {
              "description": "Indicates whether the total row is visible or not. This value can be set to show or remove the total row.",
              "type": "boolean"
            },
            "style": {
              "description": "Constant value that represents the Table style. The possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.",
              "type": "string"
            },
            "legacyId": {
              "description": "Legacy Id used in older Excle clients. The value of the identifier remains the same even when the table is renamed. This property should be interpreted as an opaque string value and should not be parsed to any other type. Read-only.",
              "type": "string"
            },
            "columns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTableColumn"
              }
            },
            "rows": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTableRow"
              }
            },
            "sort": { },
            "worksheet": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "highlightFirstColumn": true,
        "highlightLastColumn": true,
        "name": "string",
        "showBandedColumns": true,
        "showBandedRows": true,
        "showFilterButton": true,
        "showHeaders": true,
        "showTotals": true,
        "style": "string",
        "legacyId": "string",
        "columns": [
          {
            "@odata.type": "microsoft.graph.workbookTableColumn"
          }
        ],
        "rows": [
          {
            "@odata.type": "microsoft.graph.workbookTableRow"
          }
        ],
        "sort": {
          "@odata.type": "microsoft.graph.workbookTableSort"
        },
        "worksheet": {
          "@odata.type": "microsoft.graph.workbookWorksheet"
        }
      }
    },
    "microsoft.graph.workbookTableColumn": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTableColumn",
          "type": "object",
          "properties": {
            "index": {
              "format": "int32",
              "description": "Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "name": {
              "description": "Returns the name of the table column. Read-only.",
              "type": "string"
            },
            "values": {
              "description": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string."
            },
            "filter": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "index": "integer",
        "name": "string",
        "values": {
          "@odata.type": "microsoft.graph.Json"
        },
        "filter": {
          "@odata.type": "microsoft.graph.workbookFilter"
        }
      }
    },
    "microsoft.graph.workbookTableRow": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTableRow",
          "type": "object",
          "properties": {
            "index": {
              "format": "int32",
              "description": "Returns the index number of the row within the rows collection of the table. Zero-indexed. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "values": {
              "description": "Represents the raw values of the specified range. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "index": "integer",
        "values": {
          "@odata.type": "microsoft.graph.Json"
        }
      }
    },
    "microsoft.graph.workbookTableSort": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTableSort",
          "type": "object",
          "properties": {
            "matchCase": {
              "description": "Represents whether the casing impacted the last sort of the table. Read-only.",
              "type": "boolean"
            },
            "method": {
              "description": "Represents Chinese character ordering method last used to sort the table. The possible values are: PinYin, StrokeCount. Read-only.",
              "type": "string"
            },
            "fields": {
              "description": "Represents the current conditions used to last sort the table. Read-only.",
              "type": "array",
              "items": { }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "matchCase": true,
        "method": "string",
        "fields": [
          {
            "@odata.type": "microsoft.graph.workbookSortField"
          }
        ]
      }
    },
    "microsoft.graph.thumbnailSet": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "thumbnailSet",
          "type": "object",
          "properties": {
            "large": {
              "description": "A 1920x1920 scaled thumbnail."
            },
            "medium": {
              "description": "A 176x176 scaled thumbnail."
            },
            "small": {
              "description": "A 48x48 cropped thumbnail."
            },
            "source": {
              "description": "A custom thumbnail image or the original image used to generate other thumbnails."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "large": {
          "@odata.type": "microsoft.graph.thumbnail"
        },
        "medium": {
          "@odata.type": "microsoft.graph.thumbnail"
        },
        "small": {
          "@odata.type": "microsoft.graph.thumbnail"
        },
        "source": {
          "@odata.type": "microsoft.graph.thumbnail"
        }
      }
    },
    "microsoft.graph.workbook": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbook",
          "type": "object",
          "properties": {
            "names": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookNamedItem"
              }
            },
            "tables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTable"
              }
            },
            "worksheets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookWorksheet"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "names": [
          {
            "@odata.type": "microsoft.graph.workbookNamedItem"
          }
        ],
        "tables": [
          {
            "@odata.type": "microsoft.graph.workbookTable"
          }
        ],
        "worksheets": [
          {
            "@odata.type": "microsoft.graph.workbookWorksheet"
          }
        ]
      }
    },
    "microsoft.graph.workbookPivotTable": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookPivotTable",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the PivotTable.",
              "type": "string"
            },
            "worksheet": { }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "name": "string",
        "worksheet": {
          "@odata.type": "microsoft.graph.workbookWorksheet"
        }
      }
    },
    "microsoft.graph.workbookRangeView": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeView",
          "type": "object",
          "properties": {
            "cellAddresses": {
              "description": "Represents the cell addresses"
            },
            "columnCount": {
              "format": "int32",
              "description": "Returns the number of visible columns. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "formulas": {
              "description": "Represents the formula in A1-style notation."
            },
            "formulasLocal": {
              "description": "Represents the formula in A1-style notation, in the user's language and number-formatting locale. For example, the English '=SUM(A1, 1.5)' formula would become '=SUMME(A1; 1,5)' in German."
            },
            "formulasR1C1": {
              "description": "Represents the formula in R1C1-style notation."
            },
            "index": {
              "format": "int32",
              "description": "Index of the range.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "numberFormat": {
              "description": "Represents Excel's number format code for the given cell. Read-only."
            },
            "rowCount": {
              "format": "int32",
              "description": "Returns the number of visible rows. Read-only.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "text": {
              "description": "Text values of the specified range. The Text value will not depend on the cell width. The # sign substitution that happens in Excel UI will not affect the text value returned by the API. Read-only."
            },
            "valueTypes": {
              "description": "Represents the type of data of each cell. Read-only. The possible values are: Unknown, Empty, String, Integer, Double, Boolean, Error."
            },
            "values": {
              "description": "Represents the raw values of the specified range view. The data returned could be of type string, number, or a boolean. Cell that contain an error will return the error string."
            },
            "rows": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookRangeView"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "cellAddresses": {
          "@odata.type": "microsoft.graph.Json"
        },
        "columnCount": "integer",
        "formulas": {
          "@odata.type": "microsoft.graph.Json"
        },
        "formulasLocal": {
          "@odata.type": "microsoft.graph.Json"
        },
        "formulasR1C1": {
          "@odata.type": "microsoft.graph.Json"
        },
        "index": "integer",
        "numberFormat": {
          "@odata.type": "microsoft.graph.Json"
        },
        "rowCount": "integer",
        "text": {
          "@odata.type": "microsoft.graph.Json"
        },
        "valueTypes": {
          "@odata.type": "microsoft.graph.Json"
        },
        "values": {
          "@odata.type": "microsoft.graph.Json"
        },
        "rows": [
          {
            "@odata.type": "microsoft.graph.workbookRangeView"
          }
        ]
      }
    },
    "microsoft.graph.workbookWorksheet": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookWorksheet",
          "type": "object",
          "properties": {
            "name": {
              "description": "The display name of the worksheet.",
              "type": "string"
            },
            "position": {
              "format": "int32",
              "description": "The zero-based position of the worksheet within the workbook.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "visibility": {
              "description": "The Visibility of the worksheet. The possible values are: Visible, Hidden, VeryHidden.",
              "type": "string"
            },
            "charts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookChart"
              }
            },
            "names": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookNamedItem"
              }
            },
            "pivotTables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookPivotTable"
              }
            },
            "protection": { },
            "tables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTable"
              }
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "name": "string",
        "position": "integer",
        "visibility": "string",
        "charts": [
          {
            "@odata.type": "microsoft.graph.workbookChart"
          }
        ],
        "names": [
          {
            "@odata.type": "microsoft.graph.workbookNamedItem"
          }
        ],
        "pivotTables": [
          {
            "@odata.type": "microsoft.graph.workbookPivotTable"
          }
        ],
        "protection": {
          "@odata.type": "microsoft.graph.workbookWorksheetProtection"
        },
        "tables": [
          {
            "@odata.type": "microsoft.graph.workbookTable"
          }
        ]
      }
    },
    "microsoft.graph.workbookWorksheetProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookWorksheetProtection",
          "type": "object",
          "properties": {
            "protected": {
              "description": "Indicates if the worksheet is protected.  Read-only.",
              "type": "boolean"
            },
            "options": {
              "description": "Sheet protection options. Read-only."
            }
          }
        }
      ],
      "example": {
        "id": "string (identifier)",
        "protected": true,
        "options": {
          "@odata.type": "microsoft.graph.workbookWorksheetProtectionOptions"
        }
      }
    },
    "microsoft.graph.driveItemUploadableProperties": {
      "title": "driveItemUploadableProperties",
      "type": "object",
      "properties": {
        "description": {
          "description": "Provides a user-visible description of the item. Read-write. Only on OneDrive Personal",
          "type": "string"
        },
        "fileSystemInfo": {
          "description": "File system information on client. Read-write."
        },
        "name": {
          "description": "The name of the item (filename and extension). Read-write.",
          "type": "string"
        }
      },
      "example": {
        "description": "string",
        "fileSystemInfo": {
          "@odata.type": "microsoft.graph.fileSystemInfo"
        },
        "name": "string"
      }
    },
    "microsoft.graph.alert": {
      "title": "alert",
      "type": "object",
      "properties": {
        "activityGroupName": {
          "description": "Name or alias of the activity group (attacker) this alert is attributed to.",
          "type": "string"
        },
        "assignedTo": {
          "description": "Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).",
          "type": "string"
        },
        "azureSubscriptionId": {
          "description": "Azure subscription ID, present if this alert is related to an Azure resource.",
          "type": "string"
        },
        "azureTenantId": {
          "description": "Azure Active Directory tenant ID.",
          "type": "string"
        },
        "category": {
          "description": "Category of the alert (for example, credentialTheft, ransomware, etc.).",
          "type": "string"
        },
        "closedDateTime": {
          "format": "date-time",
          "description": "Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z' (supports update).",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "cloudAppStates": {
          "description": "Security-related stateful information generated by the provider about the cloud application/s related to this alert.",
          "type": "array",
          "items": { }
        },
        "comments": {
          "description": "Customer-provided comments on alert (for customer alert management) (supports update).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "confidence": {
          "format": "int32",
          "description": "Confidence of the detection logic (percentage between 1-100).",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "description": {
          "description": "Alert description.",
          "type": "string"
        },
        "detectionIds": {
          "description": "Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "eventDateTime": {
          "format": "date-time",
          "description": "Time at which the event(s) that served as the trigger(s) to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "feedback": {
          "description": "Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. (supports update)"
        },
        "fileStates": {
          "description": "Security-related stateful information generated by the provider about the file(s) related to this alert.",
          "type": "array",
          "items": { }
        },
        "hostStates": {
          "description": "Security-related stateful information generated by the provider about the host(s) related to this alert.",
          "type": "array",
          "items": { }
        },
        "id": {
          "description": "Provider-generated GUID/unique identifier. (Read-only)",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "malwareStates": {
          "description": "Threat Intelligence pertaining to malware related to this alert.",
          "type": "array",
          "items": { }
        },
        "networkConnections": {
          "description": "Security-related stateful information generated by the provider about the network connection(s) related to this alert.",
          "type": "array",
          "items": { }
        },
        "processes": {
          "description": "Security-related stateful information generated by the provider about the process or processes related to this alert.",
          "type": "array",
          "items": { }
        },
        "recommendedActions": {
          "description": "Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "registryKeyStates": {
          "description": "Security-related stateful information generated by the provider about the registry keys related to this alert.",
          "type": "array",
          "items": { }
        },
        "severity": {
          "description": "Alert severity - set by vendor/provider. Possible values are: unknown, informational, low, medium, high."
        },
        "sourceMaterials": {
          "description": "Hyperlinks (URIs) to the source material related to the alert, for example, provider's user interface for alerts or log search, etc.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "Alert lifecycle status (stage). Possible values are: unknown, newAlert, inProgress, resolved. (supports update)"
        },
        "tags": {
          "description": "User-definable labels that can be applied to an alert and can serve as filter conditions (for example 'HVA', 'SAW', etc.) (supports update).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "description": "Alert title.",
          "type": "string"
        },
        "triggers": {
          "description": "Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation.",
          "type": "array",
          "items": { }
        },
        "userStates": {
          "description": "Security-related stateful information generated by the provider about the user accounts related to this alert.",
          "type": "array",
          "items": { }
        },
        "vendorInformation": {
          "description": "Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker)."
        },
        "vulnerabilityStates": {
          "description": "Threat intelligence pertaining to one or more vulnerabilities related to this alert.",
          "type": "array",
          "items": { }
        }
      },
      "example": {
        "activityGroupName": "string",
        "assignedTo": "string",
        "azureSubscriptionId": "string",
        "azureTenantId": "string",
        "category": "string",
        "closedDateTime": "string (timestamp)",
        "cloudAppStates": [
          {
            "@odata.type": "microsoft.graph.cloudAppSecurityState"
          }
        ],
        "comments": [
          "string"
        ],
        "confidence": "integer",
        "createdDateTime": "string (timestamp)",
        "description": "string",
        "detectionIds": [
          "string"
        ],
        "eventDateTime": "string (timestamp)",
        "feedback": {
          "@odata.type": "microsoft.graph.alertFeedback"
        },
        "fileStates": [
          {
            "@odata.type": "microsoft.graph.fileSecurityState"
          }
        ],
        "hostStates": [
          {
            "@odata.type": "microsoft.graph.hostSecurityState"
          }
        ],
        "id": "string",
        "lastModifiedDateTime": "string (timestamp)",
        "malwareStates": [
          {
            "@odata.type": "microsoft.graph.malwareState"
          }
        ],
        "networkConnections": [
          {
            "@odata.type": "microsoft.graph.networkConnection"
          }
        ],
        "processes": [
          {
            "@odata.type": "microsoft.graph.process"
          }
        ],
        "recommendedActions": [
          "string"
        ],
        "registryKeyStates": [
          {
            "@odata.type": "microsoft.graph.registryKeyState"
          }
        ],
        "severity": {
          "@odata.type": "microsoft.graph.alertSeverity"
        },
        "sourceMaterials": [
          "string"
        ],
        "status": {
          "@odata.type": "microsoft.graph.alertStatus"
        },
        "tags": [
          "string"
        ],
        "title": "string",
        "triggers": [
          {
            "@odata.type": "microsoft.graph.alertTrigger"
          }
        ],
        "userStates": [
          {
            "@odata.type": "microsoft.graph.userSecurityState"
          }
        ],
        "vendorInformation": {
          "@odata.type": "microsoft.graph.securityVendorInformation"
        },
        "vulnerabilityStates": [
          {
            "@odata.type": "microsoft.graph.vulnerabilityState"
          }
        ]
      }
    },
    "microsoft.graph.alertTrigger": {
      "title": "alertTrigger",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the property serving as a detection trigger.",
          "type": "string"
        },
        "type": {
          "description": "Type of the property in the key:value pair for interpretation. For example, String, Boolean, etc.",
          "type": "string"
        },
        "value": {
          "description": "Value of the property serving as a detection trigger.",
          "type": "string"
        }
      },
      "example": {
        "name": "string",
        "type": "string",
        "value": "string"
      }
    },
    "microsoft.graph.alternativeSecurityId": {
      "title": "alternativeSecurityId",
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "description": "For internal use only",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "identityProvider": {
          "description": "For internal use only",
          "type": "string"
        },
        "key": {
          "format": "base64url",
          "description": "For internal use only",
          "type": "string"
        }
      },
      "example": {
        "type": "integer",
        "identityProvider": "string",
        "key": "string"
      }
    },
    "microsoft.graph.assignedLicense": {
      "title": "assignedLicense",
      "type": "object",
      "properties": {
        "disabledPlans": {
          "description": "A collection of the unique identifiers for plans that have been disabled.",
          "type": "array",
          "items": {
            "format": "uuid",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string"
          }
        },
        "skuId": {
          "format": "uuid",
          "description": "The unique identifier for the SKU.",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        }
      },
      "example": {
        "disabledPlans": [
          "string"
        ],
        "skuId": "string"
      }
    },
    "microsoft.graph.assignedPlan": {
      "title": "assignedPlan",
      "type": "object",
      "properties": {
        "assignedDateTime": {
          "format": "date-time",
          "description": "The date and time at which the plan was assigned; for example: 2013-01-02T19:32:30Z. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "capabilityStatus": {
          "description": "For example, 'Enabled'.",
          "type": "string"
        },
        "service": {
          "description": "The name of the service; for example, 'Exchange'.",
          "type": "string"
        },
        "servicePlanId": {
          "format": "uuid",
          "description": "A GUID that identifies the service plan.",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        }
      },
      "example": {
        "assignedDateTime": "string (timestamp)",
        "capabilityStatus": "string",
        "service": "string",
        "servicePlanId": "string"
      }
    },
    "microsoft.graph.recipient": {
      "title": "recipient",
      "type": "object",
      "properties": {
        "emailAddress": {
          "description": "The recipient's email address."
        }
      },
      "example": {
        "emailAddress": {
          "@odata.type": "microsoft.graph.emailAddress"
        }
      }
    },
    "microsoft.graph.attendeeBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.recipient"
        },
        {
          "title": "attendeeBase",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type of attendee. The possible values are: required, optional, resource. Currently if the attendee is a person, findMeetingTimes always considers the person is of the Required type."
            }
          }
        }
      ],
      "example": {
        "emailAddress": {
          "@odata.type": "microsoft.graph.emailAddress"
        },
        "type": {
          "@odata.type": "microsoft.graph.attendeeType"
        }
      }
    },
    "microsoft.graph.attendee": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attendeeBase"
        },
        {
          "title": "attendee",
          "type": "object",
          "properties": {
            "status": {
              "description": "The attendee's response (none, accepted, declined, etc.) for the event and date-time that the response was sent."
            }
          }
        }
      ],
      "example": {
        "emailAddress": {
          "@odata.type": "microsoft.graph.emailAddress"
        },
        "type": {
          "@odata.type": "microsoft.graph.attendeeType"
        },
        "status": {
          "@odata.type": "microsoft.graph.responseStatus"
        }
      }
    },
    "microsoft.graph.attendeeAvailability": {
      "title": "attendeeAvailability",
      "type": "object",
      "properties": {
        "attendee": {
          "description": "The type of attendee - whether it's a person or a resource, and whether required or optional if it's a person."
        },
        "availability": {
          "description": "The availability status of the attendee. The possible values are: free, tentative, busy, oof, workingElsewhere, unknown."
        }
      },
      "example": {
        "attendee": {
          "@odata.type": "microsoft.graph.attendeeBase"
        },
        "availability": {
          "@odata.type": "microsoft.graph.freeBusyStatus"
        }
      }
    },
    "microsoft.graph.audio": {
      "title": "audio",
      "type": "object",
      "properties": {
        "album": {
          "description": "The title of the album for this audio file.",
          "type": "string"
        },
        "albumArtist": {
          "description": "The artist named on the album for the audio file.",
          "type": "string"
        },
        "artist": {
          "description": "The performing artist for the audio file.",
          "type": "string"
        },
        "bitrate": {
          "format": "int64",
          "description": "Bitrate expressed in kbps.",
          "type": "integer"
        },
        "composers": {
          "description": "The name of the composer of the audio file.",
          "type": "string"
        },
        "copyright": {
          "description": "Copyright information for the audio file.",
          "type": "string"
        },
        "disc": {
          "format": "int16",
          "description": "The number of the disc this audio file came from.",
          "maximum": 32767,
          "minimum": -32768,
          "type": "integer"
        },
        "discCount": {
          "format": "int16",
          "description": "The total number of discs in this album.",
          "maximum": 32767,
          "minimum": -32768,
          "type": "integer"
        },
        "duration": {
          "format": "int64",
          "description": "Duration of the audio file, expressed in milliseconds",
          "type": "integer"
        },
        "genre": {
          "description": "The genre of this audio file.",
          "type": "string"
        },
        "hasDrm": {
          "description": "Indicates if the file is protected with digital rights management.",
          "type": "boolean"
        },
        "isVariableBitrate": {
          "description": "Indicates if the file is encoded with a variable bitrate.",
          "type": "boolean"
        },
        "title": {
          "description": "The title of the audio file.",
          "type": "string"
        },
        "track": {
          "format": "int32",
          "description": "The number of the track on the original disc for this audio file.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "trackCount": {
          "format": "int32",
          "description": "The total number of tracks on the original disc for this audio file.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "The year the audio file was recorded.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "album": "string",
        "albumArtist": "string",
        "artist": "string",
        "bitrate": "integer",
        "composers": "string",
        "copyright": "string",
        "disc": "integer",
        "discCount": "integer",
        "duration": "integer",
        "genre": "string",
        "hasDrm": true,
        "isVariableBitrate": true,
        "title": "string",
        "track": "integer",
        "trackCount": "integer",
        "year": "integer"
      }
    },
    "microsoft.graph.automaticRepliesMailTips": {
      "title": "automaticRepliesMailTips",
      "type": "object",
      "properties": {
        "message": {
          "description": "The automatic reply message.",
          "type": "string"
        },
        "messageLanguage": {
          "description": "The language that the automatic reply message is in."
        },
        "scheduledEndTime": {
          "description": "The date and time that automatic replies are set to end."
        },
        "scheduledStartTime": {
          "description": "The date and time that automatic replies are set to begin."
        }
      },
      "example": {
        "message": "string",
        "messageLanguage": {
          "@odata.type": "microsoft.graph.localeInfo"
        },
        "scheduledEndTime": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        },
        "scheduledStartTime": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        }
      }
    },
    "microsoft.graph.automaticRepliesSetting": {
      "title": "automaticRepliesSetting",
      "type": "object",
      "properties": {
        "externalAudience": {
          "description": "The set of audience external to the signed-in user's organization who will receive the ExternalReplyMessage, if Status is AlwaysEnabled or Scheduled. The possible values are: none, contactsOnly, all."
        },
        "externalReplyMessage": {
          "description": "The automatic reply to send to the specified external audience, if Status is AlwaysEnabled or Scheduled.",
          "type": "string"
        },
        "internalReplyMessage": {
          "description": "The automatic reply to send to the audience internal to the signed-in user's organization, if Status is AlwaysEnabled or Scheduled.",
          "type": "string"
        },
        "scheduledEndDateTime": {
          "description": "The date and time that automatic replies are set to end, if Status is set to Scheduled."
        },
        "scheduledStartDateTime": {
          "description": "The date and time that automatic replies are set to begin, if Status is set to Scheduled."
        },
        "status": {
          "description": "Configurations status for automatic replies. The possible values are: disabled, alwaysEnabled, scheduled."
        }
      },
      "example": {
        "externalAudience": {
          "@odata.type": "microsoft.graph.externalAudienceScope"
        },
        "externalReplyMessage": "string",
        "internalReplyMessage": "string",
        "scheduledEndDateTime": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        },
        "scheduledStartDateTime": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        },
        "status": {
          "@odata.type": "microsoft.graph.automaticRepliesStatus"
        }
      }
    },
    "microsoft.graph.booleanColumn": {
      "title": "booleanColumn",
      "type": "object"
    },
    "microsoft.graph.calculatedColumn": {
      "title": "calculatedColumn",
      "type": "object",
      "properties": {
        "format": {
          "description": "For dateTime output types, the format of the value. Must be one of dateOnly or dateTime.",
          "type": "string"
        },
        "formula": {
          "description": "The formula used to compute the value for this column.",
          "type": "string"
        },
        "outputType": {
          "description": "The output type used to format values in this column. Must be one of boolean, currency, dateTime, number, or text.",
          "type": "string"
        }
      },
      "example": {
        "format": "string",
        "formula": "string",
        "outputType": "string"
      }
    },
    "microsoft.graph.choiceColumn": {
      "title": "choiceColumn",
      "type": "object",
      "properties": {
        "allowTextEntry": {
          "description": "If true, allows custom values that aren't in the configured choices.",
          "type": "boolean"
        },
        "choices": {
          "description": "The list of values available for this column.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayAs": {
          "description": "How the choices are to be presented in the UX. Must be one of checkBoxes, dropDownMenu, or radioButtons",
          "type": "string"
        }
      },
      "example": {
        "allowTextEntry": true,
        "choices": [
          "string"
        ],
        "displayAs": "string"
      }
    },
    "microsoft.graph.cloudAppSecurityState": {
      "title": "cloudAppSecurityState",
      "type": "object",
      "properties": {
        "destinationServiceIp": {
          "description": "Destination IP Address of the connection to the cloud application/service.",
          "type": "string"
        },
        "destinationServiceName": {
          "description": "Cloud application/service name (for example 'Salesforce', 'DropBox', etc.).",
          "type": "string"
        },
        "riskScore": {
          "description": "Provider-generated/calculated risk score of the Cloud Application/Service. Recommended value range of 0-1, which equates to a percentage.",
          "type": "string"
        }
      },
      "example": {
        "destinationServiceIp": "string",
        "destinationServiceName": "string",
        "riskScore": "string"
      }
    },
    "microsoft.graph.contentTypeInfo": {
      "title": "contentTypeInfo",
      "type": "object",
      "properties": {
        "id": {
          "description": "The id of the content type.",
          "type": "string"
        }
      },
      "example": {
        "id": "string"
      }
    },
    "microsoft.graph.contentTypeOrder": {
      "title": "contentTypeOrder",
      "type": "object",
      "properties": {
        "default": {
          "description": "Whether this is the default Content Type",
          "type": "boolean"
        },
        "position": {
          "format": "int32",
          "description": "Specifies the position in which the Content Type appears in the selection UI.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "default": true,
        "position": "integer"
      }
    },
    "microsoft.graph.currencyColumn": {
      "title": "currencyColumn",
      "type": "object",
      "properties": {
        "locale": {
          "description": "Specifies the locale from which to infer the currency symbol.",
          "type": "string"
        }
      },
      "example": {
        "locale": "string"
      }
    },
    "microsoft.graph.timeZoneBase": {
      "title": "timeZoneBase",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of a time zone. It can be a standard time zone name such as 'Hawaii-Aleutian Standard Time', or 'Customized Time Zone' for a custom time zone.",
          "type": "string"
        }
      },
      "example": {
        "name": "string"
      }
    },
    "microsoft.graph.customTimeZone": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.timeZoneBase"
        },
        {
          "title": "customTimeZone",
          "type": "object",
          "properties": {
            "bias": {
              "format": "int32",
              "description": "The time offset of the time zone from Coordinated Universal Time (UTC). This value is in minutes. Time zones that are ahead of UTC have a positive offset; time zones that are behind UTC have a negative offset.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "daylightOffset": {
              "description": "Specifies when the time zone switches from standard time to daylight saving time."
            },
            "standardOffset": {
              "description": "Specifies when the time zone switches from daylight saving time to standard time."
            }
          }
        }
      ],
      "example": {
        "name": "string",
        "bias": "integer",
        "daylightOffset": {
          "@odata.type": "microsoft.graph.daylightTimeZoneOffset"
        },
        "standardOffset": {
          "@odata.type": "microsoft.graph.standardTimeZoneOffset"
        }
      }
    },
    "microsoft.graph.dateTimeColumn": {
      "title": "dateTimeColumn",
      "type": "object",
      "properties": {
        "displayAs": {
          "description": "How the value should be presented in the UX. Must be one of default, friendly, or standard. See below for more details. If unspecified, treated as default.",
          "type": "string"
        },
        "format": {
          "description": "Indicates whether the value should be presented as a date only or a date and time. Must be one of dateOnly or dateTime",
          "type": "string"
        }
      },
      "example": {
        "displayAs": "string",
        "format": "string"
      }
    },
    "microsoft.graph.dateTimeTimeZone": {
      "title": "dateTimeTimeZone",
      "type": "object",
      "properties": {
        "dateTime": {
          "description": "A single point of time in a combined date and time representation (<date>T<time>).",
          "type": "string"
        },
        "timeZone": {
          "description": "One of the following time zone names.",
          "type": "string"
        }
      },
      "example": {
        "dateTime": "string",
        "timeZone": "string"
      }
    },
    "microsoft.graph.standardTimeZoneOffset": {
      "title": "standardTimeZoneOffset",
      "type": "object",
      "properties": {
        "dayOccurrence": {
          "format": "int32",
          "description": "Represents the nth occurrence of the day of week that the transition from daylight saving time to standard time occurs.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "dayOfWeek": {
          "description": "Represents the day of the week when the transition from daylight saving time to standard time."
        },
        "month": {
          "format": "int32",
          "description": "Represents the month of the year when the transition from daylight saving time to standard time occurs.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "time": {
          "format": "time",
          "description": "Represents the time of day when the transition from daylight saving time to standard time occurs.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        },
        "year": {
          "format": "int32",
          "description": "Represents how frequently in terms of years the change from daylight saving time to standard time occurs. For example, a value of 0 means every year.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "dayOccurrence": "integer",
        "dayOfWeek": {
          "@odata.type": "microsoft.graph.dayOfWeek"
        },
        "month": "integer",
        "time": "string (timestamp)",
        "year": "integer"
      }
    },
    "microsoft.graph.daylightTimeZoneOffset": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.standardTimeZoneOffset"
        },
        {
          "title": "daylightTimeZoneOffset",
          "type": "object",
          "properties": {
            "daylightBias": {
              "format": "int32",
              "description": "The time offset from Coordinated Universal Time (UTC) for daylight saving time. This value is in minutes.",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ],
      "example": {
        "dayOccurrence": "integer",
        "dayOfWeek": {
          "@odata.type": "microsoft.graph.dayOfWeek"
        },
        "month": "integer",
        "time": "string (timestamp)",
        "year": "integer",
        "daylightBias": "integer"
      }
    },
    "microsoft.graph.defaultColumnValue": {
      "title": "defaultColumnValue",
      "type": "object",
      "properties": {
        "formula": {
          "description": "The formula used to compute the default value for this column.",
          "type": "string"
        },
        "value": {
          "description": "The direct value to use as the default value for this column.",
          "type": "string"
        }
      },
      "example": {
        "formula": "string",
        "value": "string"
      }
    },
    "microsoft.graph.deleted": {
      "title": "deleted",
      "type": "object",
      "properties": {
        "state": {
          "description": "Represents the state of the deleted item.",
          "type": "string"
        }
      },
      "example": {
        "state": "string"
      }
    },
    "microsoft.graph.domainState": {
      "title": "domainState",
      "type": "object",
      "properties": {
        "lastActionDateTime": {
          "format": "date-time",
          "description": "Timestamp for when the last activity occurred. The value is updated when an operation is scheduled, the asynchronous task starts, and when the operation completes.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "operation": {
          "description": "Type of asynchronous operation. The values can be ForceDelete or Verification",
          "type": "string"
        },
        "status": {
          "description": "Current status of the operation.  Scheduled - Operation has been scheduled but has not started.  InProgress - Task has started and is in progress.  Failed - Operation has failed.",
          "type": "string"
        }
      },
      "example": {
        "lastActionDateTime": "string (timestamp)",
        "operation": "string",
        "status": "string"
      }
    },
    "microsoft.graph.driveRecipient": {
      "title": "driveRecipient",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address for the recipient, if the recipient has an associated email address.",
          "type": "string"
        },
        "alias": {
          "description": "The alias of the domain object, for cases where an email address is unavailable (e.g. security groups).",
          "type": "string"
        },
        "objectId": {
          "description": "The unique identifier for the recipient in the directory.",
          "type": "string"
        }
      },
      "example": {
        "email": "string",
        "alias": "string",
        "objectId": "string"
      }
    },
    "microsoft.graph.educationStudent": {
      "title": "educationStudent",
      "type": "object",
      "properties": {
        "birthDate": {
          "format": "date",
          "description": "Birth date of the student.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "externalId": {
          "description": "ID of the student in the source system.",
          "type": "string"
        },
        "gender": {
          "description": "The possible values are: female, male, other, unknownFutureValue."
        },
        "grade": {
          "description": "Current grade level of the student.",
          "type": "string"
        },
        "graduationYear": {
          "description": "Year the student is graduating from the school.",
          "type": "string"
        },
        "studentNumber": {
          "description": "Student Number.",
          "type": "string"
        }
      },
      "example": {
        "birthDate": "string (timestamp)",
        "externalId": "string",
        "gender": {
          "@odata.type": "microsoft.graph.educationGender"
        },
        "grade": "string",
        "graduationYear": "string",
        "studentNumber": "string"
      }
    },
    "microsoft.graph.educationTeacher": {
      "title": "educationTeacher",
      "type": "object",
      "properties": {
        "externalId": {
          "description": "ID of the teacher in the source system.",
          "type": "string"
        },
        "teacherNumber": {
          "description": "Teacher number.",
          "type": "string"
        }
      },
      "example": {
        "externalId": "string",
        "teacherNumber": "string"
      }
    },
    "microsoft.graph.educationTerm": {
      "title": "educationTerm",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name of the term.",
          "type": "string"
        },
        "externalId": {
          "description": "ID of term in the syncing system.",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "description": "Start of the term.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "endDate": {
          "format": "date",
          "description": "End of the term.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "externalId": "string",
        "startDate": "string (timestamp)",
        "endDate": "string (timestamp)"
      }
    },
    "microsoft.graph.emailAddress": {
      "title": "emailAddress",
      "type": "object",
      "properties": {
        "address": {
          "description": "The email address of the person or entity.",
          "type": "string"
        },
        "name": {
          "description": "The display name of the person or entity.",
          "type": "string"
        }
      },
      "example": {
        "address": "string",
        "name": "string"
      }
    },
    "microsoft.graph.extensionSchemaProperty": {
      "title": "extensionSchemaProperty",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the strongly-typed property defined as part of a schema extension.",
          "type": "string"
        },
        "type": {
          "description": "The type of the property that is defined as part of a schema extension.  Allowed values are Binary, Boolean, DateTime, Integer or String.  See the table below for more details.",
          "type": "string"
        }
      },
      "example": {
        "name": "string",
        "type": "string"
      }
    },
    "microsoft.graph.externalLink": {
      "title": "externalLink",
      "type": "object",
      "properties": {
        "href": {
          "description": "The url of the link.",
          "type": "string"
        }
      },
      "example": {
        "href": "string"
      }
    },
    "microsoft.graph.file": {
      "title": "file",
      "type": "object",
      "properties": {
        "hashes": {
          "description": "Hashes of the file's binary content, if available. Read-only."
        },
        "mimeType": {
          "description": "The MIME type for the file. This is determined by logic on the server and might not be the value provided when the file was uploaded. Read-only.",
          "type": "string"
        }
      },
      "example": {
        "hashes": {
          "@odata.type": "microsoft.graph.hashes"
        },
        "mimeType": "string"
      }
    },
    "microsoft.graph.fileHash": {
      "title": "fileHash",
      "type": "object",
      "properties": {
        "hashType": {
          "description": "File hash type. Possible values are: unknown, sha1, sha256, md5, authenticodeHash256, lsHash, ctph, peSha1, peSha256."
        },
        "hashValue": {
          "description": "Value of the file hash.",
          "type": "string"
        }
      },
      "example": {
        "hashType": {
          "@odata.type": "microsoft.graph.fileHashType"
        },
        "hashValue": "string"
      }
    },
    "microsoft.graph.fileSecurityState": {
      "title": "fileSecurityState",
      "type": "object",
      "properties": {
        "fileHash": {
          "description": "Complex type containing file hashes (cryptographic and location-sensitive)."
        },
        "name": {
          "description": "File name (without path).",
          "type": "string"
        },
        "path": {
          "description": "Full file path of the file/imageFile.",
          "type": "string"
        },
        "riskScore": {
          "description": "Provider generated/calculated risk score of the alert file. Recommended value range of 0-1, which equates to a percentage.",
          "type": "string"
        }
      },
      "example": {
        "fileHash": {
          "@odata.type": "microsoft.graph.fileHash"
        },
        "name": "string",
        "path": "string",
        "riskScore": "string"
      }
    },
    "microsoft.graph.fileSystemInfo": {
      "title": "fileSystemInfo",
      "type": "object",
      "properties": {
        "createdDateTime": {
          "format": "date-time",
          "description": "The UTC date and time the file was created on a client.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastAccessedDateTime": {
          "format": "date-time",
          "description": "The UTC date and time the file was last accessed. Available for the recent file list only.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "The UTC date and time the file was last modified on a client.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      },
      "example": {
        "createdDateTime": "string (timestamp)",
        "lastAccessedDateTime": "string (timestamp)",
        "lastModifiedDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.workbookFilterCriteria": {
      "title": "workbookFilterCriteria",
      "type": "object",
      "properties": {
        "color": {
          "type": "string"
        },
        "criterion1": {
          "type": "string"
        },
        "criterion2": {
          "type": "string"
        },
        "dynamicCriteria": {
          "type": "string"
        },
        "filterOn": {
          "type": "string"
        },
        "icon": { },
        "values": { }
      },
      "example": {
        "color": "string",
        "criterion1": "string",
        "criterion2": "string",
        "dynamicCriteria": "string",
        "filterOn": "string",
        "icon": {
          "@odata.type": "microsoft.graph.workbookIcon"
        },
        "values": {
          "@odata.type": "microsoft.graph.Json"
        }
      }
    },
    "microsoft.graph.workbookFilterDateTime": {
      "title": "workbookFilterDateTime",
      "type": "object",
      "properties": {
        "date": {
          "description": "The date in ISO8601 format used to filter data.",
          "type": "string"
        },
        "specificity": {
          "description": "How specific the date should be used to keep data. For example, if the date is 2005-04-02 and the specifity is set to 'month', the filter operation will keep all rows with a date in the month of april 2009. The possible values are: Year, Monday, Day, Hour, Minute, Second.",
          "type": "string"
        }
      },
      "example": {
        "date": "string",
        "specificity": "string"
      }
    },
    "microsoft.graph.folder": {
      "title": "folder",
      "type": "object",
      "properties": {
        "childCount": {
          "format": "int32",
          "description": "Number of children contained immediately within this container.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "view": {
          "description": "A collection of properties defining the recommended view for the folder."
        }
      },
      "example": {
        "childCount": "integer",
        "view": {
          "@odata.type": "microsoft.graph.folderView"
        }
      }
    },
    "microsoft.graph.folderView": {
      "title": "folderView",
      "type": "object",
      "properties": {
        "sortBy": {
          "description": "The method by which the folder should be sorted.",
          "type": "string"
        },
        "sortOrder": {
          "description": "If true, indicates that items should be sorted in descending order. Otherwise, items should be sorted ascending.",
          "type": "string"
        },
        "viewType": {
          "description": "The type of view that should be used to represent the folder.",
          "type": "string"
        }
      },
      "example": {
        "sortBy": "string",
        "sortOrder": "string",
        "viewType": "string"
      }
    },
    "microsoft.graph.followupFlag": {
      "title": "followupFlag",
      "type": "object",
      "properties": {
        "completedDateTime": {
          "description": "The date and time that the follow-up was finished."
        },
        "dueDateTime": {
          "description": "The date and time that the follow-up is to be finished."
        },
        "flagStatus": {
          "description": "The status for follow-up for an item. Possible values are notFlagged, complete, and flagged."
        },
        "startDateTime": {
          "description": "The date and time that the follow-up is to begin."
        }
      },
      "example": {
        "completedDateTime": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        },
        "dueDateTime": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        },
        "flagStatus": {
          "@odata.type": "microsoft.graph.followupFlagStatus"
        },
        "startDateTime": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        }
      }
    },
    "microsoft.graph.geoCoordinates": {
      "title": "geoCoordinates",
      "type": "object",
      "properties": {
        "altitude": {
          "format": "double",
          "description": "Optional. The altitude (height), in feet,  above sea level for the item. Read-only."
        },
        "latitude": {
          "format": "double",
          "description": "Optional. The latitude, in decimal, for the item. Read-only."
        },
        "longitude": {
          "format": "double",
          "description": "Optional. The longitude, in decimal, for the item. Read-only."
        }
      },
      "example": {
        "altitude": "double",
        "latitude": "double",
        "longitude": "double"
      }
    },
    "microsoft.graph.hashes": {
      "title": "hashes",
      "type": "object",
      "properties": {
        "crc32Hash": {
          "description": "The CRC32 value of the file in little endian (if available). Read-only.",
          "type": "string"
        },
        "sha1Hash": {
          "description": "SHA1 hash for the contents of the file (if available). Read-only.",
          "type": "string"
        },
        "quickXorHash": {
          "description": "A proprietary hash of the file that can be used to determine if the contents of the file have changed (if available). Read-only.",
          "type": "string"
        }
      },
      "example": {
        "crc32Hash": "string",
        "sha1Hash": "string",
        "quickXorHash": "string"
      }
    },
    "microsoft.graph.hostSecurityState": {
      "title": "hostSecurityState",
      "type": "object",
      "properties": {
        "fqdn": {
          "description": "Host FQDN (Fully Qualified Domain Name) (for example, machine.company.com).",
          "type": "string"
        },
        "isAzureAadJoined": {
          "description": "True if the host is domain joined to Azure Active Directory Domain Services.",
          "type": "boolean"
        },
        "isAzureAadRegistered": {
          "description": "True if the host registered with Azure Active Directory Device Registration (BYOD devices - that is, not fully managed by enterprise).",
          "type": "boolean"
        },
        "isHybridAzureDomainJoined": {
          "description": "True if the host is domain joined to an on-premises Active Directory domain.",
          "type": "boolean"
        },
        "netBiosName": {
          "description": "The local host name, without the DNS domain name.",
          "type": "string"
        },
        "os": {
          "description": "Host Operating System. (For example, Windows10, MacOS, RHEL, etc.).",
          "type": "string"
        },
        "privateIpAddress": {
          "description": "Private (not routable) IPv4 or IPv6 address (see RFC 1918) at the time of the alert.",
          "type": "string"
        },
        "publicIpAddress": {
          "description": "Publicly routable IPv4 or IPv6 address (see RFC 1918) at time of the alert.",
          "type": "string"
        },
        "riskScore": {
          "description": "Provider-generated/calculated risk score of the host.  Recommended value range of 0-1, which equates to a percentage.",
          "type": "string"
        }
      },
      "example": {
        "fqdn": "string",
        "isAzureAadJoined": true,
        "isAzureAadRegistered": true,
        "isHybridAzureDomainJoined": true,
        "netBiosName": "string",
        "os": "string",
        "privateIpAddress": "string",
        "publicIpAddress": "string",
        "riskScore": "string"
      }
    },
    "microsoft.graph.workbookIcon": {
      "title": "workbookIcon",
      "type": "object",
      "properties": {
        "index": {
          "format": "int32",
          "description": "Represents the index of the icon in the given set.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "set": {
          "description": "Represents the set that the icon is part of. The possible values are: Invalid, ThreeArrows, ThreeArrowsGray, ThreeFlags, ThreeTrafficLights1, ThreeTrafficLights2, ThreeSigns, ThreeSymbols, ThreeSymbols2, FourArrows, FourArrowsGray, FourRedToBlack, FourRating, FourTrafficLights, FiveArrows, FiveArrowsGray, FiveRating, FiveQuarters, ThreeStars, ThreeTriangles, FiveBoxes.",
          "type": "string"
        }
      },
      "example": {
        "index": "integer",
        "set": "string"
      }
    },
    "microsoft.graph.identity": {
      "title": "identity",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The identity's display name. Note that this may not always be available or up to date. For example, if a user changes their display name, the API may show the new value in a future response, but the items associated with the user won't show up as having changed when using delta.",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier for the identity.",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "id": "string"
      }
    },
    "microsoft.graph.identitySet": {
      "title": "identitySet",
      "type": "object",
      "properties": {
        "application": {
          "description": "Optional. The application associated with this action."
        },
        "device": {
          "description": "Optional. The device associated with this action."
        },
        "user": {
          "description": "Optional. The user associated with this action."
        }
      },
      "example": {
        "application": {
          "@odata.type": "microsoft.graph.identity"
        },
        "device": {
          "@odata.type": "microsoft.graph.identity"
        },
        "user": {
          "@odata.type": "microsoft.graph.identity"
        }
      }
    },
    "microsoft.graph.image": {
      "title": "image",
      "type": "object",
      "properties": {
        "width": {
          "format": "int32",
          "description": "Optional. Width of the image, in pixels. Read-only.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "height": {
          "format": "int32",
          "description": "Optional. Height of the image, in pixels. Read-only.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "width": "integer",
        "height": "integer"
      }
    },
    "microsoft.graph.internetMessageHeader": {
      "title": "internetMessageHeader",
      "type": "object",
      "properties": {
        "name": {
          "description": "Represents the key in a key-value pair.",
          "type": "string"
        },
        "value": {
          "description": "The value in a key-value pair.",
          "type": "string"
        }
      },
      "example": {
        "name": "string",
        "value": "string"
      }
    },
    "microsoft.graph.androidMinimumOperatingSystem": {
      "title": "androidMinimumOperatingSystem",
      "type": "object",
      "properties": {
        "v4_0": {
          "description": "Version 4.0 or later.",
          "type": "boolean"
        },
        "v4_0_3": {
          "description": "Version 4.0.3 or later.",
          "type": "boolean"
        },
        "v4_1": {
          "description": "Version 4.1 or later.",
          "type": "boolean"
        },
        "v4_2": {
          "description": "Version 4.2 or later.",
          "type": "boolean"
        },
        "v4_3": {
          "description": "Version 4.3 or later.",
          "type": "boolean"
        },
        "v4_4": {
          "description": "Version 4.4 or later.",
          "type": "boolean"
        },
        "v5_0": {
          "description": "Version 5.0 or later.",
          "type": "boolean"
        },
        "v5_1": {
          "description": "Version 5.1 or later.",
          "type": "boolean"
        }
      },
      "example": {
        "v4_0": true,
        "v4_0_3": true,
        "v4_1": true,
        "v4_2": true,
        "v4_3": true,
        "v4_4": true,
        "v5_0": true,
        "v5_1": true
      }
    },
    "microsoft.graph.appConfigurationSettingItem": {
      "title": "appConfigurationSettingItem",
      "type": "object",
      "properties": {
        "appConfigKey": {
          "description": "app configuration key.",
          "type": "string"
        },
        "appConfigKeyType": {
          "description": "app configuration key type. Possible values are: stringType, integerType, realType, booleanType, tokenType."
        },
        "appConfigKeyValue": {
          "description": "app configuration key value.",
          "type": "string"
        }
      },
      "example": {
        "appConfigKey": "string",
        "appConfigKeyType": {
          "@odata.type": "microsoft.graph.mdmAppConfigKeyType"
        },
        "appConfigKeyValue": "string"
      }
    },
    "microsoft.graph.fileEncryptionInfo": {
      "title": "fileEncryptionInfo",
      "type": "object",
      "properties": {
        "encryptionKey": {
          "format": "base64url",
          "description": "The key used to encrypt the file content.",
          "type": "string"
        },
        "initializationVector": {
          "format": "base64url",
          "description": "The initialization vector used for the encryption algorithm.",
          "type": "string"
        },
        "mac": {
          "format": "base64url",
          "description": "The hash of the encrypted file content + IV (content hash).",
          "type": "string"
        },
        "macKey": {
          "format": "base64url",
          "description": "The key used to get mac.",
          "type": "string"
        },
        "profileIdentifier": {
          "description": "The the profile identifier.",
          "type": "string"
        },
        "fileDigest": {
          "format": "base64url",
          "description": "The file digest prior to encryption.",
          "type": "string"
        },
        "fileDigestAlgorithm": {
          "description": "The file digest algorithm.",
          "type": "string"
        }
      },
      "example": {
        "encryptionKey": "string",
        "initializationVector": "string",
        "mac": "string",
        "macKey": "string",
        "profileIdentifier": "string",
        "fileDigest": "string",
        "fileDigestAlgorithm": "string"
      }
    },
    "microsoft.graph.iosDeviceType": {
      "title": "iosDeviceType",
      "type": "object",
      "properties": {
        "iPad": {
          "description": "Whether the app should run on iPads.",
          "type": "boolean"
        },
        "iPhoneAndIPod": {
          "description": "Whether the app should run on iPhones and iPods.",
          "type": "boolean"
        }
      },
      "example": {
        "iPad": true,
        "iPhoneAndIPod": true
      }
    },
    "microsoft.graph.iosLobAppAssignmentSettings": {
      "title": "iosLobAppAssignmentSettings",
      "type": "object",
      "properties": {
        "vpnConfigurationId": {
          "description": "The VPN Configuration Id to apply for this app.",
          "type": "string"
        }
      },
      "example": {
        "vpnConfigurationId": "string"
      }
    },
    "microsoft.graph.iosMinimumOperatingSystem": {
      "title": "iosMinimumOperatingSystem",
      "type": "object",
      "properties": {
        "v8_0": {
          "description": "Version 8.0 or later.",
          "type": "boolean"
        },
        "v9_0": {
          "description": "Version 9.0 or later.",
          "type": "boolean"
        },
        "v10_0": {
          "description": "Version 10.0 or later.",
          "type": "boolean"
        },
        "v11_0": {
          "description": "Version 11.0 or later.",
          "type": "boolean"
        }
      },
      "example": {
        "v8_0": true,
        "v9_0": true,
        "v10_0": true,
        "v11_0": true
      }
    },
    "microsoft.graph.iosStoreAppAssignmentSettings": {
      "title": "iosStoreAppAssignmentSettings",
      "type": "object",
      "properties": {
        "vpnConfigurationId": {
          "description": "The VPN Configuration Id to apply for this app.",
          "type": "string"
        }
      },
      "example": {
        "vpnConfigurationId": "string"
      }
    },
    "microsoft.graph.iosVppAppAssignmentSettings": {
      "title": "iosVppAppAssignmentSettings",
      "type": "object",
      "properties": {
        "useDeviceLicensing": {
          "description": "Whether or not to use device licensing.",
          "type": "boolean"
        },
        "vpnConfigurationId": {
          "description": "The VPN Configuration Id to apply for this app.",
          "type": "string"
        }
      },
      "example": {
        "useDeviceLicensing": true,
        "vpnConfigurationId": "string"
      }
    },
    "microsoft.graph.microsoftStoreForBusinessAppAssignmentSettings": {
      "title": "microsoftStoreForBusinessAppAssignmentSettings",
      "type": "object",
      "properties": {
        "useDeviceContext": {
          "description": "Whether or not to use device execution context for Microsoft Store for Business mobile app.",
          "type": "boolean"
        }
      },
      "example": {
        "useDeviceContext": true
      }
    },
    "microsoft.graph.mobileAppAssignmentSettings": {
      "title": "mobileAppAssignmentSettings",
      "type": "object"
    },
    "microsoft.graph.vppLicensingType": {
      "title": "vppLicensingType",
      "type": "object",
      "properties": {
        "supportsUserLicensing": {
          "description": "Whether the program supports the user licensing type.",
          "type": "boolean"
        },
        "supportsDeviceLicensing": {
          "description": "Whether the program supports the device licensing type.",
          "type": "boolean"
        }
      },
      "example": {
        "supportsUserLicensing": true,
        "supportsDeviceLicensing": true
      }
    },
    "microsoft.graph.windowsMinimumOperatingSystem": {
      "title": "windowsMinimumOperatingSystem",
      "type": "object",
      "properties": {
        "v8_0": {
          "description": "Windows version 8.0 or later.",
          "type": "boolean"
        },
        "v8_1": {
          "description": "Windows version 8.1 or later.",
          "type": "boolean"
        },
        "v10_0": {
          "description": "Windows version 10.0 or later.",
          "type": "boolean"
        }
      },
      "example": {
        "v8_0": true,
        "v8_1": true,
        "v10_0": true
      }
    },
    "microsoft.graph.auditActor": {
      "title": "auditActor",
      "type": "object",
      "properties": {
        "type": {
          "description": "Actor Type.",
          "type": "string"
        },
        "userPermissions": {
          "description": "List of user permissions when the audit was performed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "applicationId": {
          "description": "AAD Application Id.",
          "type": "string"
        },
        "applicationDisplayName": {
          "description": "Name of the Application.",
          "type": "string"
        },
        "userPrincipalName": {
          "description": "User Principal Name (UPN).",
          "type": "string"
        },
        "servicePrincipalName": {
          "description": "Service Principal Name (SPN).",
          "type": "string"
        },
        "ipAddress": {
          "description": "IPAddress.",
          "type": "string"
        },
        "userId": {
          "description": "User Id.",
          "type": "string"
        }
      },
      "example": {
        "type": "string",
        "userPermissions": [
          "string"
        ],
        "applicationId": "string",
        "applicationDisplayName": "string",
        "userPrincipalName": "string",
        "servicePrincipalName": "string",
        "ipAddress": "string",
        "userId": "string"
      }
    },
    "microsoft.graph.auditProperty": {
      "title": "auditProperty",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name.",
          "type": "string"
        },
        "oldValue": {
          "description": "Old value.",
          "type": "string"
        },
        "newValue": {
          "description": "New value.",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "oldValue": "string",
        "newValue": "string"
      }
    },
    "microsoft.graph.auditResource": {
      "title": "auditResource",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name.",
          "type": "string"
        },
        "modifiedProperties": {
          "description": "List of modified properties.",
          "type": "array",
          "items": { }
        },
        "type": {
          "description": "Audit resource's type.",
          "type": "string"
        },
        "resourceId": {
          "description": "Audit resource's Id.",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "modifiedProperties": [
          {
            "@odata.type": "microsoft.graph.auditProperty"
          }
        ],
        "type": "string",
        "resourceId": "string"
      }
    },
    "microsoft.graph.appListItem": {
      "title": "appListItem",
      "type": "object",
      "properties": {
        "name": {
          "description": "The application name",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the application",
          "type": "string"
        },
        "appStoreUrl": {
          "description": "The Store URL of the application",
          "type": "string"
        },
        "appId": {
          "description": "The application or bundle identifier of the application",
          "type": "string"
        }
      },
      "example": {
        "name": "string",
        "publisher": "string",
        "appStoreUrl": "string",
        "appId": "string"
      }
    },
    "microsoft.graph.bitLockerRemovableDrivePolicy": {
      "title": "bitLockerRemovableDrivePolicy",
      "type": "object",
      "properties": {
        "encryptionMethod": {
          "description": "Select the encryption method for removable  drives. Possible values are: aesCbc128, aesCbc256, xtsAes128, xtsAes256."
        },
        "requireEncryptionForWriteAccess": {
          "description": "Indicates whether to block write access to devices configured in another organization.  If requireEncryptionForWriteAccess is false, this value does not affect.",
          "type": "boolean"
        },
        "blockCrossOrganizationWriteAccess": {
          "description": "This policy setting determines whether BitLocker protection is required for removable data drives to be writable on a computer.",
          "type": "boolean"
        }
      },
      "example": {
        "encryptionMethod": {
          "@odata.type": "microsoft.graph.bitLockerEncryptionMethod"
        },
        "requireEncryptionForWriteAccess": true,
        "blockCrossOrganizationWriteAccess": true
      }
    },
    "microsoft.graph.defenderDetectedMalwareActions": {
      "title": "defenderDetectedMalwareActions",
      "type": "object",
      "properties": {
        "lowSeverity": {
          "description": "Indicates a Defender action to take for low severity Malware threat detected. Possible values are: deviceDefault, clean, quarantine, remove, allow, userDefined, block."
        },
        "moderateSeverity": {
          "description": "Indicates a Defender action to take for moderate severity Malware threat detected. Possible values are: deviceDefault, clean, quarantine, remove, allow, userDefined, block."
        },
        "highSeverity": {
          "description": "Indicates a Defender action to take for high severity Malware threat detected. Possible values are: deviceDefault, clean, quarantine, remove, allow, userDefined, block."
        },
        "severeSeverity": {
          "description": "Indicates a Defender action to take for severe severity Malware threat detected. Possible values are: deviceDefault, clean, quarantine, remove, allow, userDefined, block."
        }
      },
      "example": {
        "lowSeverity": {
          "@odata.type": "microsoft.graph.defenderThreatAction"
        },
        "moderateSeverity": {
          "@odata.type": "microsoft.graph.defenderThreatAction"
        },
        "highSeverity": {
          "@odata.type": "microsoft.graph.defenderThreatAction"
        },
        "severeSeverity": {
          "@odata.type": "microsoft.graph.defenderThreatAction"
        }
      }
    },
    "microsoft.graph.deviceCompliancePolicySettingState": {
      "title": "deviceCompliancePolicySettingState",
      "type": "object",
      "properties": {
        "setting": {
          "description": "The setting that is being reported",
          "type": "string"
        },
        "settingName": {
          "description": "Localized/user friendly setting name that is being reported",
          "type": "string"
        },
        "instanceDisplayName": {
          "description": "Name of setting instance that is being reported.",
          "type": "string"
        },
        "state": {
          "description": "The compliance state of the setting. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned."
        },
        "errorCode": {
          "format": "int64",
          "description": "Error code for the setting",
          "type": "integer"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        },
        "userId": {
          "description": "UserId",
          "type": "string"
        },
        "userName": {
          "description": "UserName",
          "type": "string"
        },
        "userEmail": {
          "description": "UserEmail",
          "type": "string"
        },
        "userPrincipalName": {
          "description": "UserPrincipalName.",
          "type": "string"
        },
        "sources": {
          "description": "Contributing policies",
          "type": "array",
          "items": { }
        },
        "currentValue": {
          "description": "Current value of setting on device",
          "type": "string"
        }
      },
      "example": {
        "setting": "string",
        "settingName": "string",
        "instanceDisplayName": "string",
        "state": {
          "@odata.type": "microsoft.graph.complianceStatus"
        },
        "errorCode": "integer",
        "errorDescription": "string",
        "userId": "string",
        "userName": "string",
        "userEmail": "string",
        "userPrincipalName": "string",
        "sources": [
          {
            "@odata.type": "microsoft.graph.settingSource"
          }
        ],
        "currentValue": "string"
      }
    },
    "microsoft.graph.deviceConfigurationSettingState": {
      "title": "deviceConfigurationSettingState",
      "type": "object",
      "properties": {
        "setting": {
          "description": "The setting that is being reported",
          "type": "string"
        },
        "settingName": {
          "description": "Localized/user friendly setting name that is being reported",
          "type": "string"
        },
        "instanceDisplayName": {
          "description": "Name of setting instance that is being reported.",
          "type": "string"
        },
        "state": {
          "description": "The compliance state of the setting. Possible values are: unknown, notApplicable, compliant, remediated, nonCompliant, error, conflict, notAssigned."
        },
        "errorCode": {
          "format": "int64",
          "description": "Error code for the setting",
          "type": "integer"
        },
        "errorDescription": {
          "description": "Error description",
          "type": "string"
        },
        "userId": {
          "description": "UserId",
          "type": "string"
        },
        "userName": {
          "description": "UserName",
          "type": "string"
        },
        "userEmail": {
          "description": "UserEmail",
          "type": "string"
        },
        "userPrincipalName": {
          "description": "UserPrincipalName.",
          "type": "string"
        },
        "sources": {
          "description": "Contributing policies",
          "type": "array",
          "items": { }
        },
        "currentValue": {
          "description": "Current value of setting on device",
          "type": "string"
        }
      },
      "example": {
        "setting": "string",
        "settingName": "string",
        "instanceDisplayName": "string",
        "state": {
          "@odata.type": "microsoft.graph.complianceStatus"
        },
        "errorCode": "integer",
        "errorDescription": "string",
        "userId": "string",
        "userName": "string",
        "userEmail": "string",
        "userPrincipalName": "string",
        "sources": [
          {
            "@odata.type": "microsoft.graph.settingSource"
          }
        ],
        "currentValue": "string"
      }
    },
    "microsoft.graph.deviceManagementSettings": {
      "title": "deviceManagementSettings",
      "type": "object",
      "properties": {
        "deviceComplianceCheckinThresholdDays": {
          "format": "int32",
          "description": "The number of days a device is allowed to go without checking in to remain compliant. Valid values 0 to 120",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "isScheduledActionEnabled": {
          "description": "Is feature enabled or not for scheduled action for rule.",
          "type": "boolean"
        },
        "secureByDefault": {
          "description": "Device should be noncompliant when there is no compliance policy targeted when this is true",
          "type": "boolean"
        }
      },
      "example": {
        "deviceComplianceCheckinThresholdDays": "integer",
        "isScheduledActionEnabled": true,
        "secureByDefault": true
      }
    },
    "microsoft.graph.edgeSearchEngine": {
      "title": "edgeSearchEngine",
      "type": "object",
      "properties": {
        "edgeSearchEngineType": {
          "description": "Allows IT admins to set a predefined default search engine for MDM-Controlled devices. Possible values are: default, bing."
        }
      },
      "example": {
        "edgeSearchEngineType": {
          "@odata.type": "microsoft.graph.edgeSearchEngineType"
        }
      }
    },
    "microsoft.graph.edgeSearchEngineBase": {
      "title": "edgeSearchEngineBase",
      "type": "object"
    },
    "microsoft.graph.edgeSearchEngineCustom": {
      "title": "edgeSearchEngineCustom",
      "type": "object",
      "properties": {
        "edgeSearchEngineOpenSearchXmlUrl": {
          "description": "Points to a https link containing the OpenSearch xml file that contains, at minimum, the short name and the URL to the search Engine.",
          "type": "string"
        }
      },
      "example": {
        "edgeSearchEngineOpenSearchXmlUrl": "string"
      }
    },
    "microsoft.graph.iosHomeScreenApp": {
      "title": "iosHomeScreenApp",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of the app Inherited from iosHomeScreenItem",
          "type": "string"
        },
        "bundleID": {
          "description": "BundleID of app",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "bundleID": "string"
      }
    },
    "microsoft.graph.iosHomeScreenFolder": {
      "title": "iosHomeScreenFolder",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of the app Inherited from iosHomeScreenItem",
          "type": "string"
        },
        "pages": {
          "description": "Pages of Home Screen Layout Icons which must be Application Type. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        }
      },
      "example": {
        "displayName": "string",
        "pages": [
          {
            "@odata.type": "microsoft.graph.iosHomeScreenFolderPage"
          }
        ]
      }
    },
    "microsoft.graph.iosHomeScreenFolderPage": {
      "title": "iosHomeScreenFolderPage",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of the folder page",
          "type": "string"
        },
        "apps": {
          "description": "A list of apps to appear on a page within a folder. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        }
      },
      "example": {
        "displayName": "string",
        "apps": [
          {
            "@odata.type": "microsoft.graph.iosHomeScreenApp"
          }
        ]
      }
    },
    "microsoft.graph.iosHomeScreenItem": {
      "title": "iosHomeScreenItem",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of the app",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string"
      }
    },
    "microsoft.graph.iosHomeScreenPage": {
      "title": "iosHomeScreenPage",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Name of the page",
          "type": "string"
        },
        "icons": {
          "description": "A list of apps and folders to appear on a page. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        }
      },
      "example": {
        "displayName": "string",
        "icons": [
          {
            "@odata.type": "microsoft.graph.iosHomeScreenItem"
          }
        ]
      }
    },
    "microsoft.graph.iosNetworkUsageRule": {
      "title": "iosNetworkUsageRule",
      "type": "object",
      "properties": {
        "managedApps": {
          "description": "Information about the managed apps that this rule is going to apply to. This collection can contain a maximum of 500 elements.",
          "type": "array",
          "items": { }
        },
        "cellularDataBlockWhenRoaming": {
          "description": "If set to true, corresponding managed apps will not be allowed to use cellular data when roaming.",
          "type": "boolean"
        },
        "cellularDataBlocked": {
          "description": "If set to true, corresponding managed apps will not be allowed to use cellular data at any time.",
          "type": "boolean"
        }
      },
      "example": {
        "managedApps": [
          {
            "@odata.type": "microsoft.graph.appListItem"
          }
        ],
        "cellularDataBlockWhenRoaming": true,
        "cellularDataBlocked": true
      }
    },
    "microsoft.graph.iosNotificationSettings": {
      "title": "iosNotificationSettings",
      "type": "object",
      "properties": {
        "bundleID": {
          "description": "Bundle id of app to which to apply these notification settings.",
          "type": "string"
        },
        "appName": {
          "description": "Application name to be associated with the bundleID.",
          "type": "string"
        },
        "publisher": {
          "description": "Publisher to be associated with the bundleID.",
          "type": "string"
        },
        "enabled": {
          "description": "Indicates whether notifications are allowed for this app.",
          "type": "boolean"
        },
        "showInNotificationCenter": {
          "description": "Indicates whether notifications can be shown in notification center.",
          "type": "boolean"
        },
        "showOnLockScreen": {
          "description": "Indicates whether notifications can be shown on the lock screen.",
          "type": "boolean"
        },
        "alertType": {
          "description": "Indicates the type of alert for notifications for this app. Possible values are: deviceDefault, banner, modal, none."
        },
        "badgesEnabled": {
          "description": "Indicates whether badges are allowed for this app.",
          "type": "boolean"
        },
        "soundsEnabled": {
          "description": "Indicates whether sounds are allowed for this app.",
          "type": "boolean"
        }
      },
      "example": {
        "bundleID": "string",
        "appName": "string",
        "publisher": "string",
        "enabled": true,
        "showInNotificationCenter": true,
        "showOnLockScreen": true,
        "alertType": {
          "@odata.type": "microsoft.graph.iosNotificationAlertType"
        },
        "badgesEnabled": true,
        "soundsEnabled": true
      }
    },
    "microsoft.graph.mediaContentRatingAustralia": {
      "title": "mediaContentRatingAustralia",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for Australia. Possible values are: allAllowed, allBlocked, general, parentalGuidance, mature, agesAbove15, agesAbove18."
        },
        "tvRating": {
          "description": "TV rating selected for Australia. Possible values are: allAllowed, allBlocked, preschoolers, children, general, parentalGuidance, mature, agesAbove15, agesAbove15AdultViolence."
        }
      },
      "example": {
        "movieRating": {
          "@odata.type": "microsoft.graph.ratingAustraliaMoviesType"
        },
        "tvRating": {
          "@odata.type": "microsoft.graph.ratingAustraliaTelevisionType"
        }
      }
    },
    "microsoft.graph.mediaContentRatingCanada": {
      "title": "mediaContentRatingCanada",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for Canada. Possible values are: allAllowed, allBlocked, general, parentalGuidance, agesAbove14, agesAbove18, restricted."
        },
        "tvRating": {
          "description": "TV rating selected for Canada. Possible values are: allAllowed, allBlocked, children, childrenAbove8, general, parentalGuidance, agesAbove14, agesAbove18."
        }
      },
      "example": {
        "movieRating": {
          "@odata.type": "microsoft.graph.ratingCanadaMoviesType"
        },
        "tvRating": {
          "@odata.type": "microsoft.graph.ratingCanadaTelevisionType"
        }
      }
    },
    "microsoft.graph.mediaContentRatingFrance": {
      "title": "mediaContentRatingFrance",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for France. Possible values are: allAllowed, allBlocked, agesAbove10, agesAbove12, agesAbove16, agesAbove18."
        },
        "tvRating": {
          "description": "TV rating selected for France. Possible values are: allAllowed, allBlocked, agesAbove10, agesAbove12, agesAbove16, agesAbove18."
        }
      },
      "example": {
        "movieRating": {
          "@odata.type": "microsoft.graph.ratingFranceMoviesType"
        },
        "tvRating": {
          "@odata.type": "microsoft.graph.ratingFranceTelevisionType"
        }
      }
    },
    "microsoft.graph.mediaContentRatingGermany": {
      "title": "mediaContentRatingGermany",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for Germany. Possible values are: allAllowed, allBlocked, general, agesAbove6, agesAbove12, agesAbove16, adults."
        },
        "tvRating": {
          "description": "TV rating selected for Germany. Possible values are: allAllowed, allBlocked, general, agesAbove6, agesAbove12, agesAbove16, adults."
        }
      },
      "example": {
        "movieRating": {
          "@odata.type": "microsoft.graph.ratingGermanyMoviesType"
        },
        "tvRating": {
          "@odata.type": "microsoft.graph.ratingGermanyTelevisionType"
        }
      }
    },
    "microsoft.graph.mediaContentRatingIreland": {
      "title": "mediaContentRatingIreland",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for Ireland. Possible values are: allAllowed, allBlocked, general, parentalGuidance, agesAbove12, agesAbove15, agesAbove16, adults."
        },
        "tvRating": {
          "description": "TV rating selected for Ireland. Possible values are: allAllowed, allBlocked, general, children, youngAdults, parentalSupervision, mature."
        }
      },
      "example": {
        "movieRating": {
          "@odata.type": "microsoft.graph.ratingIrelandMoviesType"
        },
        "tvRating": {
          "@odata.type": "microsoft.graph.ratingIrelandTelevisionType"
        }
      }
    },
    "microsoft.graph.mediaContentRatingJapan": {
      "title": "mediaContentRatingJapan",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for Japan. Possible values are: allAllowed, allBlocked, general, parentalGuidance, agesAbove15, agesAbove18."
        },
        "tvRating": {
          "description": "TV rating selected for Japan. Possible values are: allAllowed, allBlocked, explicitAllowed."
        }
      },
      "example": {
        "movieRating": {
          "@odata.type": "microsoft.graph.ratingJapanMoviesType"
        },
        "tvRating": {
          "@odata.type": "microsoft.graph.ratingJapanTelevisionType"
        }
      }
    },
    "microsoft.graph.mediaContentRatingNewZealand": {
      "title": "mediaContentRatingNewZealand",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for New Zealand. Possible values are: allAllowed, allBlocked, general, parentalGuidance, mature, agesAbove13, agesAbove15, agesAbove16, agesAbove18, restricted, agesAbove16Restricted."
        },
        "tvRating": {
          "description": "TV rating selected for New Zealand. Possible values are: allAllowed, allBlocked, general, parentalGuidance, adults."
        }
      },
      "example": {
        "movieRating": {
          "@odata.type": "microsoft.graph.ratingNewZealandMoviesType"
        },
        "tvRating": {
          "@odata.type": "microsoft.graph.ratingNewZealandTelevisionType"
        }
      }
    },
    "microsoft.graph.mediaContentRatingUnitedKingdom": {
      "title": "mediaContentRatingUnitedKingdom",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for United Kingdom. Possible values are: allAllowed, allBlocked, general, universalChildren, parentalGuidance, agesAbove12Video, agesAbove12Cinema, agesAbove15, adults."
        },
        "tvRating": {
          "description": "TV rating selected for United Kingdom. Possible values are: allAllowed, allBlocked, caution."
        }
      },
      "example": {
        "movieRating": {
          "@odata.type": "microsoft.graph.ratingUnitedKingdomMoviesType"
        },
        "tvRating": {
          "@odata.type": "microsoft.graph.ratingUnitedKingdomTelevisionType"
        }
      }
    },
    "microsoft.graph.mediaContentRatingUnitedStates": {
      "title": "mediaContentRatingUnitedStates",
      "type": "object",
      "properties": {
        "movieRating": {
          "description": "Movies rating selected for United States. Possible values are: allAllowed, allBlocked, general, parentalGuidance, parentalGuidance13, restricted, adults."
        },
        "tvRating": {
          "description": "TV rating selected for United States. Possible values are: allAllowed, allBlocked, childrenAll, childrenAbove7, general, parentalGuidance, childrenAbove14, adults."
        }
      },
      "example": {
        "movieRating": {
          "@odata.type": "microsoft.graph.ratingUnitedStatesMoviesType"
        },
        "tvRating": {
          "@odata.type": "microsoft.graph.ratingUnitedStatesTelevisionType"
        }
      }
    },
    "microsoft.graph.omaSetting": {
      "title": "omaSetting",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name.",
          "type": "string"
        },
        "description": {
          "description": "Description.",
          "type": "string"
        },
        "omaUri": {
          "description": "OMA.",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "omaUri": "string"
      }
    },
    "microsoft.graph.omaSettingBase64": {
      "title": "omaSettingBase64",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name. Inherited from omaSetting",
          "type": "string"
        },
        "description": {
          "description": "Description. Inherited from omaSetting",
          "type": "string"
        },
        "omaUri": {
          "description": "OMA. Inherited from omaSetting",
          "type": "string"
        },
        "fileName": {
          "description": "File name associated with the Value property (.cer",
          "type": "string"
        },
        "value": {
          "description": "Value. (Base64 encoded string)",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "omaUri": "string",
        "fileName": "string",
        "value": "string"
      }
    },
    "microsoft.graph.omaSettingBoolean": {
      "title": "omaSettingBoolean",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name. Inherited from omaSetting",
          "type": "string"
        },
        "description": {
          "description": "Description. Inherited from omaSetting",
          "type": "string"
        },
        "omaUri": {
          "description": "OMA. Inherited from omaSetting",
          "type": "string"
        },
        "value": {
          "description": "Value.",
          "type": "boolean"
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "omaUri": "string",
        "value": true
      }
    },
    "microsoft.graph.omaSettingDateTime": {
      "title": "omaSettingDateTime",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name. Inherited from omaSetting",
          "type": "string"
        },
        "description": {
          "description": "Description. Inherited from omaSetting",
          "type": "string"
        },
        "omaUri": {
          "description": "OMA. Inherited from omaSetting",
          "type": "string"
        },
        "value": {
          "format": "date-time",
          "description": "Value.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "omaUri": "string",
        "value": "string (timestamp)"
      }
    },
    "microsoft.graph.omaSettingFloatingPoint": {
      "title": "omaSettingFloatingPoint",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name. Inherited from omaSetting",
          "type": "string"
        },
        "description": {
          "description": "Description. Inherited from omaSetting",
          "type": "string"
        },
        "omaUri": {
          "description": "OMA. Inherited from omaSetting",
          "type": "string"
        },
        "value": {
          "format": "float",
          "description": "Value."
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "omaUri": "string",
        "value": "float"
      }
    },
    "microsoft.graph.omaSettingInteger": {
      "title": "omaSettingInteger",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name. Inherited from omaSetting",
          "type": "string"
        },
        "description": {
          "description": "Description. Inherited from omaSetting",
          "type": "string"
        },
        "omaUri": {
          "description": "OMA. Inherited from omaSetting",
          "type": "string"
        },
        "value": {
          "format": "int32",
          "description": "Value.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "omaUri": "string",
        "value": "integer"
      }
    },
    "microsoft.graph.omaSettingString": {
      "title": "omaSettingString",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name. Inherited from omaSetting",
          "type": "string"
        },
        "description": {
          "description": "Description. Inherited from omaSetting",
          "type": "string"
        },
        "omaUri": {
          "description": "OMA. Inherited from omaSetting",
          "type": "string"
        },
        "value": {
          "description": "Value.",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "omaUri": "string",
        "value": "string"
      }
    },
    "microsoft.graph.omaSettingStringXml": {
      "title": "omaSettingStringXml",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display Name. Inherited from omaSetting",
          "type": "string"
        },
        "description": {
          "description": "Description. Inherited from omaSetting",
          "type": "string"
        },
        "omaUri": {
          "description": "OMA. Inherited from omaSetting",
          "type": "string"
        },
        "fileName": {
          "description": "File name associated with the Value property (.xml).",
          "type": "string"
        },
        "value": {
          "format": "base64url",
          "description": "Value. (UTF8 encoded byte array)",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "omaUri": "string",
        "fileName": "string",
        "value": "string"
      }
    },
    "microsoft.graph.sharedPCAccountManagerPolicy": {
      "title": "sharedPCAccountManagerPolicy",
      "type": "object",
      "properties": {
        "accountDeletionPolicy": {
          "description": "Configures when accounts are deleted. Possible values are: immediate, diskSpaceThreshold, diskSpaceThresholdOrInactiveThreshold."
        },
        "cacheAccountsAboveDiskFreePercentage": {
          "format": "int32",
          "description": "Sets the percentage of available disk space a PC should have before it stops deleting cached shared PC accounts. Only applies when AccountDeletionPolicy is DiskSpaceThreshold or DiskSpaceThresholdOrInactiveThreshold. Valid values 0 to 100",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "inactiveThresholdDays": {
          "format": "int32",
          "description": "Specifies when the accounts will start being deleted when they have not been logged on during the specified period, given as number of days. Only applies when AccountDeletionPolicy is DiskSpaceThreshold or DiskSpaceThresholdOrInactiveThreshold.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "removeAccountsBelowDiskFreePercentage": {
          "format": "int32",
          "description": "Sets the percentage of disk space remaining on a PC before cached accounts will be deleted to free disk space. Accounts that have been inactive the longest will be deleted first. Only applies when AccountDeletionPolicy is DiskSpaceThresholdOrInactiveThreshold. Valid values 0 to 100",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "accountDeletionPolicy": {
          "@odata.type": "microsoft.graph.sharedPCAccountDeletionPolicyType"
        },
        "cacheAccountsAboveDiskFreePercentage": "integer",
        "inactiveThresholdDays": "integer",
        "removeAccountsBelowDiskFreePercentage": "integer"
      }
    },
    "microsoft.graph.windows10NetworkProxyServer": {
      "title": "windows10NetworkProxyServer",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address to the proxy server. Specify an address in the format [':']",
          "type": "string"
        },
        "exceptions": {
          "description": "Addresses that should not use the proxy server. The system will not use the proxy server for addresses beginning with what is specified in this node.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useForLocalAddresses": {
          "description": "Specifies whether the proxy server should be used for local (intranet) addresses.",
          "type": "boolean"
        }
      },
      "example": {
        "address": "string",
        "exceptions": [
          "string"
        ],
        "useForLocalAddresses": true
      }
    },
    "microsoft.graph.windowsFirewallNetworkProfile": {
      "title": "windowsFirewallNetworkProfile",
      "type": "object",
      "properties": {
        "firewallEnabled": {
          "description": "Configures the host device to allow or block the firewall and advanced security enforcement for the network profile. Possible values are: notConfigured, blocked, allowed."
        },
        "stealthModeBlocked": {
          "description": "Prevent the server from operating in stealth mode. When StealthModeRequired and StealthModeBlocked are both true, StealthModeBlocked takes priority.",
          "type": "boolean"
        },
        "incomingTrafficBlocked": {
          "description": "Configures the firewall to block all incoming traffic regardless of other policy settings. When IncomingTrafficRequired and IncomingTrafficBlocked are both true, IncomingTrafficBlocked takes priority.",
          "type": "boolean"
        },
        "unicastResponsesToMulticastBroadcastsBlocked": {
          "description": "Configures the firewall to block unicast responses to multicast broadcast traffic. When UnicastResponsesToMulticastBroadcastsRequired and UnicastResponsesToMulticastBroadcastsBlocked are both true, UnicastResponsesToMulticastBroadcastsBlocked takes priority.",
          "type": "boolean"
        },
        "inboundNotificationsBlocked": {
          "description": "Prevents the firewall from displaying notifications when an application is blocked from listening on a port. When InboundNotificationsRequired and InboundNotificationsBlocked are both true, InboundNotificationsBlocked takes priority.",
          "type": "boolean"
        },
        "authorizedApplicationRulesFromGroupPolicyMerged": {
          "description": "Configures the firewall to merge authorized application rules from group policy with those from local store instead of ignoring the local store rules. When AuthorizedApplicationRulesFromGroupPolicyNotMerged and AuthorizedApplicationRulesFromGroupPolicyMerged are both true, AuthorizedApplicationRulesFromGroupPolicyMerged takes priority.",
          "type": "boolean"
        },
        "globalPortRulesFromGroupPolicyMerged": {
          "description": "Configures the firewall to merge global port rules from group policy with those from local store instead of ignoring the local store rules. When GlobalPortRulesFromGroupPolicyNotMerged and GlobalPortRulesFromGroupPolicyMerged are both true, GlobalPortRulesFromGroupPolicyMerged takes priority.",
          "type": "boolean"
        },
        "connectionSecurityRulesFromGroupPolicyMerged": {
          "description": "Configures the firewall to merge connection security rules from group policy with those from local store instead of ignoring the local store rules. When ConnectionSecurityRulesFromGroupPolicyNotMerged and ConnectionSecurityRulesFromGroupPolicyMerged are both true, ConnectionSecurityRulesFromGroupPolicyMerged takes priority.",
          "type": "boolean"
        },
        "outboundConnectionsBlocked": {
          "description": "Configures the firewall to block all outgoing connections by default. When OutboundConnectionsRequired and OutboundConnectionsBlocked are both true, OutboundConnectionsBlocked takes priority.",
          "type": "boolean"
        },
        "inboundConnectionsBlocked": {
          "description": "Configures the firewall to block all incoming connections by default. When InboundConnectionsRequired and InboundConnectionsBlocked are both true, InboundConnectionsBlocked takes priority.",
          "type": "boolean"
        },
        "securedPacketExemptionAllowed": {
          "description": "Configures the firewall to allow the host computer to respond to unsolicited network traffic of that traffic is secured by IPSec even when stealthModeBlocked is set to true. When SecuredPacketExemptionBlocked and SecuredPacketExemptionAllowed are both true, SecuredPacketExemptionAllowed takes priority.",
          "type": "boolean"
        },
        "policyRulesFromGroupPolicyMerged": {
          "description": "Configures the firewall to merge Firewall Rule policies from group policy with those from local store instead of ignoring the local store rules. When PolicyRulesFromGroupPolicyNotMerged and PolicyRulesFromGroupPolicyMerged are both true, PolicyRulesFromGroupPolicyMerged takes priority.",
          "type": "boolean"
        }
      },
      "example": {
        "firewallEnabled": {
          "@odata.type": "microsoft.graph.stateManagementSetting"
        },
        "stealthModeBlocked": true,
        "incomingTrafficBlocked": true,
        "unicastResponsesToMulticastBroadcastsBlocked": true,
        "inboundNotificationsBlocked": true,
        "authorizedApplicationRulesFromGroupPolicyMerged": true,
        "globalPortRulesFromGroupPolicyMerged": true,
        "connectionSecurityRulesFromGroupPolicyMerged": true,
        "outboundConnectionsBlocked": true,
        "inboundConnectionsBlocked": true,
        "securedPacketExemptionAllowed": true,
        "policyRulesFromGroupPolicyMerged": true
      }
    },
    "microsoft.graph.windowsUpdateActiveHoursInstall": {
      "title": "windowsUpdateActiveHoursInstall",
      "type": "object",
      "properties": {
        "activeHoursStart": {
          "format": "time",
          "description": "Active Hours Start",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        },
        "activeHoursEnd": {
          "format": "time",
          "description": "Active Hours End",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        }
      },
      "example": {
        "activeHoursStart": "string (timestamp)",
        "activeHoursEnd": "string (timestamp)"
      }
    },
    "microsoft.graph.windowsUpdateInstallScheduleType": {
      "title": "windowsUpdateInstallScheduleType",
      "type": "object"
    },
    "microsoft.graph.windowsUpdateScheduledInstall": {
      "title": "windowsUpdateScheduledInstall",
      "type": "object",
      "properties": {
        "scheduledInstallDay": {
          "description": "Scheduled Install Day in week. Possible values are: userDefined, everyday, sunday, monday, tuesday, wednesday, thursday, friday, saturday."
        },
        "scheduledInstallTime": {
          "format": "time",
          "description": "Scheduled Install Time during day",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        }
      },
      "example": {
        "scheduledInstallDay": {
          "@odata.type": "microsoft.graph.weeklySchedule"
        },
        "scheduledInstallTime": "string (timestamp)"
      }
    },
    "microsoft.graph.configurationManagerClientEnabledFeatures": {
      "title": "configurationManagerClientEnabledFeatures",
      "type": "object",
      "properties": {
        "inventory": {
          "description": "Whether inventory is managed by Intune",
          "type": "boolean"
        },
        "modernApps": {
          "description": "Whether modern application is managed by Intune",
          "type": "boolean"
        },
        "resourceAccess": {
          "description": "Whether resource access is managed by Intune",
          "type": "boolean"
        },
        "deviceConfiguration": {
          "description": "Whether device configuration is managed by Intune",
          "type": "boolean"
        },
        "compliancePolicy": {
          "description": "Whether compliance policy is managed by Intune",
          "type": "boolean"
        },
        "windowsUpdateForBusiness": {
          "description": "Whether Windows Update for Business is managed by Intune",
          "type": "boolean"
        }
      },
      "example": {
        "inventory": true,
        "modernApps": true,
        "resourceAccess": true,
        "deviceConfiguration": true,
        "compliancePolicy": true,
        "windowsUpdateForBusiness": true
      }
    },
    "microsoft.graph.deleteUserFromSharedAppleDeviceActionResult": {
      "title": "deleteUserFromSharedAppleDeviceActionResult",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Action name Inherited from deviceActionResult",
          "type": "string"
        },
        "actionState": {
          "description": "State of the action Inherited from deviceActionResult. Possible values are: none, pending, canceled, active, done, failed, notSupported."
        },
        "startDateTime": {
          "format": "date-time",
          "description": "Time the action was initiated Inherited from deviceActionResult",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Time the action state was last updated Inherited from deviceActionResult",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "userPrincipalName": {
          "description": "User principal name of the user to be deleted",
          "type": "string"
        }
      },
      "example": {
        "actionName": "string",
        "actionState": {
          "@odata.type": "microsoft.graph.actionState"
        },
        "startDateTime": "string (timestamp)",
        "lastUpdatedDateTime": "string (timestamp)",
        "userPrincipalName": "string"
      }
    },
    "microsoft.graph.deviceActionResult": {
      "title": "deviceActionResult",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Action name",
          "type": "string"
        },
        "actionState": {
          "description": "State of the action. Possible values are: none, pending, canceled, active, done, failed, notSupported."
        },
        "startDateTime": {
          "format": "date-time",
          "description": "Time the action was initiated",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Time the action state was last updated",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      },
      "example": {
        "actionName": "string",
        "actionState": {
          "@odata.type": "microsoft.graph.actionState"
        },
        "startDateTime": "string (timestamp)",
        "lastUpdatedDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.deviceExchangeAccessStateSummary": {
      "title": "deviceExchangeAccessStateSummary",
      "type": "object",
      "properties": {
        "allowedDeviceCount": {
          "format": "int32",
          "description": "Total count of devices with Exchange Access State: Allowed.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "blockedDeviceCount": {
          "format": "int32",
          "description": "Total count of devices with Exchange Access State: Blocked.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "quarantinedDeviceCount": {
          "format": "int32",
          "description": "Total count of devices with Exchange Access State: Quarantined.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "unknownDeviceCount": {
          "format": "int32",
          "description": "Total count of devices with Exchange Access State: Unknown.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "unavailableDeviceCount": {
          "format": "int32",
          "description": "Total count of devices for which no Exchange Access State could be found.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "allowedDeviceCount": "integer",
        "blockedDeviceCount": "integer",
        "quarantinedDeviceCount": "integer",
        "unknownDeviceCount": "integer",
        "unavailableDeviceCount": "integer"
      }
    },
    "microsoft.graph.deviceGeoLocation": {
      "title": "deviceGeoLocation",
      "type": "object",
      "properties": {
        "lastCollectedDateTime": {
          "format": "date-time",
          "description": "Time at which location was recorded, relative to UTC",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "longitude": {
          "format": "double",
          "description": "Longitude coordinate of the device's location"
        },
        "latitude": {
          "format": "double",
          "description": "Latitude coordinate of the device's location"
        },
        "altitude": {
          "format": "double",
          "description": "Altitude, given in meters above sea level"
        },
        "horizontalAccuracy": {
          "format": "double",
          "description": "Accuracy of longitude and latitude in meters"
        },
        "verticalAccuracy": {
          "format": "double",
          "description": "Accuracy of altitude in meters"
        },
        "heading": {
          "format": "double",
          "description": "Heading in degrees from true north"
        },
        "speed": {
          "format": "double",
          "description": "Speed the device is traveling in meters per second"
        }
      },
      "example": {
        "lastCollectedDateTime": "string (timestamp)",
        "longitude": "double",
        "latitude": "double",
        "altitude": "double",
        "horizontalAccuracy": "double",
        "verticalAccuracy": "double",
        "heading": "double",
        "speed": "double"
      }
    },
    "microsoft.graph.deviceHealthAttestationState": {
      "title": "deviceHealthAttestationState",
      "type": "object",
      "properties": {
        "lastUpdateDateTime": {
          "description": "The Timestamp of the last update.",
          "type": "string"
        },
        "contentNamespaceUrl": {
          "description": "The DHA report version. (Namespace version)",
          "type": "string"
        },
        "deviceHealthAttestationStatus": {
          "description": "The DHA report version. (Namespace version)",
          "type": "string"
        },
        "contentVersion": {
          "description": "The HealthAttestation state schema version",
          "type": "string"
        },
        "issuedDateTime": {
          "format": "date-time",
          "description": "The DateTime when device was evaluated or issued to MDM",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "attestationIdentityKey": {
          "description": "TWhen an Attestation Identity Key (AIK) is present on a device, it indicates that the device has an endorsement key (EK) certificate.",
          "type": "string"
        },
        "resetCount": {
          "format": "int64",
          "description": "The number of times a PC device has hibernated or resumed",
          "type": "integer"
        },
        "restartCount": {
          "format": "int64",
          "description": "The number of times a PC device has rebooted",
          "type": "integer"
        },
        "dataExcutionPolicy": {
          "description": "DEP Policy defines a set of hardware and software technologies that perform additional checks on memory",
          "type": "string"
        },
        "bitLockerStatus": {
          "description": "On or Off of BitLocker Drive Encryption",
          "type": "string"
        },
        "bootManagerVersion": {
          "description": "The version of the Boot Manager",
          "type": "string"
        },
        "codeIntegrityCheckVersion": {
          "description": "The version of the Boot Manager",
          "type": "string"
        },
        "secureBoot": {
          "description": "When Secure Boot is enabled, the core components must have the correct cryptographic signatures",
          "type": "string"
        },
        "bootDebugging": {
          "description": "When bootDebugging is enabled, the device is used in development and testing",
          "type": "string"
        },
        "operatingSystemKernelDebugging": {
          "description": "When operatingSystemKernelDebugging is enabled, the device is used in development and testing",
          "type": "string"
        },
        "codeIntegrity": {
          "description": "When code integrity is enabled, code execution is restricted to integrity verified code",
          "type": "string"
        },
        "testSigning": {
          "description": "When test signing is allowed, the device does not enforce signature validation during boot",
          "type": "string"
        },
        "safeMode": {
          "description": "Safe mode is a troubleshooting option for Windows that starts your computer in a limited state",
          "type": "string"
        },
        "windowsPE": {
          "description": "Operating system running with limited services that is used to prepare a computer for Windows",
          "type": "string"
        },
        "earlyLaunchAntiMalwareDriverProtection": {
          "description": "ELAM provides protection for the computers in your network when they start up",
          "type": "string"
        },
        "virtualSecureMode": {
          "description": "VSM is a container that protects high value assets from a compromised kernel",
          "type": "string"
        },
        "pcrHashAlgorithm": {
          "description": "Informational attribute that identifies the HASH algorithm that was used by TPM",
          "type": "string"
        },
        "bootAppSecurityVersion": {
          "description": "The security version number of the Boot Application",
          "type": "string"
        },
        "bootManagerSecurityVersion": {
          "description": "The security version number of the Boot Application",
          "type": "string"
        },
        "tpmVersion": {
          "description": "The security version number of the Boot Application",
          "type": "string"
        },
        "pcr0": {
          "description": "The measurement that is captured in PCR[0]",
          "type": "string"
        },
        "secureBootConfigurationPolicyFingerPrint": {
          "description": "Fingerprint of the Custom Secure Boot Configuration Policy",
          "type": "string"
        },
        "codeIntegrityPolicy": {
          "description": "The Code Integrity policy that is controlling the security of the boot environment",
          "type": "string"
        },
        "bootRevisionListInfo": {
          "description": "The Boot Revision List that was loaded during initial boot on the attested device",
          "type": "string"
        },
        "operatingSystemRevListInfo": {
          "description": "The Operating System Revision List that was loaded during initial boot on the attested device",
          "type": "string"
        },
        "healthStatusMismatchInfo": {
          "description": "This attribute appears if DHA-Service detects an integrity issue",
          "type": "string"
        },
        "healthAttestationSupportedStatus": {
          "description": "This attribute indicates if DHA is supported for the device",
          "type": "string"
        }
      },
      "example": {
        "lastUpdateDateTime": "string",
        "contentNamespaceUrl": "string",
        "deviceHealthAttestationStatus": "string",
        "contentVersion": "string",
        "issuedDateTime": "string (timestamp)",
        "attestationIdentityKey": "string",
        "resetCount": "integer",
        "restartCount": "integer",
        "dataExcutionPolicy": "string",
        "bitLockerStatus": "string",
        "bootManagerVersion": "string",
        "codeIntegrityCheckVersion": "string",
        "secureBoot": "string",
        "bootDebugging": "string",
        "operatingSystemKernelDebugging": "string",
        "codeIntegrity": "string",
        "testSigning": "string",
        "safeMode": "string",
        "windowsPE": "string",
        "earlyLaunchAntiMalwareDriverProtection": "string",
        "virtualSecureMode": "string",
        "pcrHashAlgorithm": "string",
        "bootAppSecurityVersion": "string",
        "bootManagerSecurityVersion": "string",
        "tpmVersion": "string",
        "pcr0": "string",
        "secureBootConfigurationPolicyFingerPrint": "string",
        "codeIntegrityPolicy": "string",
        "bootRevisionListInfo": "string",
        "operatingSystemRevListInfo": "string",
        "healthStatusMismatchInfo": "string",
        "healthAttestationSupportedStatus": "string"
      }
    },
    "microsoft.graph.deviceOperatingSystemSummary": {
      "title": "deviceOperatingSystemSummary",
      "type": "object",
      "properties": {
        "androidCount": {
          "format": "int32",
          "description": "Number of android device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "iosCount": {
          "format": "int32",
          "description": "Number of iOS device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "macOSCount": {
          "format": "int32",
          "description": "Number of Mac OS X device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "windowsMobileCount": {
          "format": "int32",
          "description": "Number of Windows mobile device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "windowsCount": {
          "format": "int32",
          "description": "Number of Windows device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "unknownCount": {
          "format": "int32",
          "description": "Number of unknown device count.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "androidCount": "integer",
        "iosCount": "integer",
        "macOSCount": "integer",
        "windowsMobileCount": "integer",
        "windowsCount": "integer",
        "unknownCount": "integer"
      }
    },
    "microsoft.graph.locateDeviceActionResult": {
      "title": "locateDeviceActionResult",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Action name Inherited from deviceActionResult",
          "type": "string"
        },
        "actionState": {
          "description": "State of the action Inherited from deviceActionResult. Possible values are: none, pending, canceled, active, done, failed, notSupported."
        },
        "startDateTime": {
          "format": "date-time",
          "description": "Time the action was initiated Inherited from deviceActionResult",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Time the action state was last updated Inherited from deviceActionResult",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "deviceLocation": {
          "description": "device location"
        }
      },
      "example": {
        "actionName": "string",
        "actionState": {
          "@odata.type": "microsoft.graph.actionState"
        },
        "startDateTime": "string (timestamp)",
        "lastUpdatedDateTime": "string (timestamp)",
        "deviceLocation": {
          "@odata.type": "microsoft.graph.deviceGeoLocation"
        }
      }
    },
    "microsoft.graph.remoteLockActionResult": {
      "title": "remoteLockActionResult",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Action name Inherited from deviceActionResult",
          "type": "string"
        },
        "actionState": {
          "description": "State of the action Inherited from deviceActionResult. Possible values are: none, pending, canceled, active, done, failed, notSupported."
        },
        "startDateTime": {
          "format": "date-time",
          "description": "Time the action was initiated Inherited from deviceActionResult",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Time the action state was last updated Inherited from deviceActionResult",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "unlockPin": {
          "description": "Pin to unlock the client",
          "type": "string"
        }
      },
      "example": {
        "actionName": "string",
        "actionState": {
          "@odata.type": "microsoft.graph.actionState"
        },
        "startDateTime": "string (timestamp)",
        "lastUpdatedDateTime": "string (timestamp)",
        "unlockPin": "string"
      }
    },
    "microsoft.graph.resetPasscodeActionResult": {
      "title": "resetPasscodeActionResult",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Action name Inherited from deviceActionResult",
          "type": "string"
        },
        "actionState": {
          "description": "State of the action Inherited from deviceActionResult. Possible values are: none, pending, canceled, active, done, failed, notSupported."
        },
        "startDateTime": {
          "format": "date-time",
          "description": "Time the action was initiated Inherited from deviceActionResult",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Time the action state was last updated Inherited from deviceActionResult",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "passcode": {
          "description": "Newly generated passcode for the device",
          "type": "string"
        }
      },
      "example": {
        "actionName": "string",
        "actionState": {
          "@odata.type": "microsoft.graph.actionState"
        },
        "startDateTime": "string (timestamp)",
        "lastUpdatedDateTime": "string (timestamp)",
        "passcode": "string"
      }
    },
    "microsoft.graph.updateWindowsDeviceAccountActionParameter": {
      "title": "updateWindowsDeviceAccountActionParameter",
      "type": "object",
      "properties": {
        "deviceAccount": {
          "description": "Not yet documented"
        },
        "passwordRotationEnabled": {
          "description": "Not yet documented",
          "type": "boolean"
        },
        "calendarSyncEnabled": {
          "description": "Not yet documented",
          "type": "boolean"
        },
        "deviceAccountEmail": {
          "description": "Not yet documented",
          "type": "string"
        },
        "exchangeServer": {
          "description": "Not yet documented",
          "type": "string"
        },
        "sessionInitiationProtocalAddress": {
          "description": "Not yet documented",
          "type": "string"
        }
      },
      "example": {
        "deviceAccount": {
          "@odata.type": "microsoft.graph.windowsDeviceAccount"
        },
        "passwordRotationEnabled": true,
        "calendarSyncEnabled": true,
        "deviceAccountEmail": "string",
        "exchangeServer": "string",
        "sessionInitiationProtocalAddress": "string"
      }
    },
    "microsoft.graph.windowsDefenderScanActionResult": {
      "title": "windowsDefenderScanActionResult",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Action name Inherited from deviceActionResult",
          "type": "string"
        },
        "actionState": {
          "description": "State of the action Inherited from deviceActionResult. Possible values are: none, pending, canceled, active, done, failed, notSupported."
        },
        "startDateTime": {
          "format": "date-time",
          "description": "Time the action was initiated Inherited from deviceActionResult",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "description": "Time the action state was last updated Inherited from deviceActionResult",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "scanType": {
          "description": "Scan type either full scan or quick scan",
          "type": "string"
        }
      },
      "example": {
        "actionName": "string",
        "actionState": {
          "@odata.type": "microsoft.graph.actionState"
        },
        "startDateTime": "string (timestamp)",
        "lastUpdatedDateTime": "string (timestamp)",
        "scanType": "string"
      }
    },
    "microsoft.graph.windowsDeviceAccount": {
      "title": "windowsDeviceAccount",
      "type": "object",
      "properties": {
        "password": {
          "description": "Not yet documented",
          "type": "string"
        }
      },
      "example": {
        "password": "string"
      }
    },
    "microsoft.graph.windowsDeviceADAccount": {
      "title": "windowsDeviceADAccount",
      "type": "object",
      "properties": {
        "password": {
          "description": "Not yet documented Inherited from windowsDeviceAccount",
          "type": "string"
        },
        "domainName": {
          "description": "Not yet documented",
          "type": "string"
        },
        "userName": {
          "description": "Not yet documented",
          "type": "string"
        }
      },
      "example": {
        "password": "string",
        "domainName": "string",
        "userName": "string"
      }
    },
    "microsoft.graph.windowsDeviceAzureADAccount": {
      "title": "windowsDeviceAzureADAccount",
      "type": "object",
      "properties": {
        "password": {
          "description": "Not yet documented Inherited from windowsDeviceAccount",
          "type": "string"
        },
        "userPrincipalName": {
          "description": "Not yet documented",
          "type": "string"
        }
      },
      "example": {
        "password": "string",
        "userPrincipalName": "string"
      }
    },
    "microsoft.graph.importedWindowsAutopilotDeviceIdentityState": {
      "title": "importedWindowsAutopilotDeviceIdentityState",
      "type": "object",
      "properties": {
        "deviceImportStatus": {
          "description": "Device status reported by Device Directory Service(DDS). Possible values are: unknown, pending, partial, complete, error."
        },
        "deviceRegistrationId": {
          "description": "Device Registration ID for successfully added device reported by Device Directory Service(DDS).",
          "type": "string"
        },
        "deviceErrorCode": {
          "format": "int32",
          "description": "Device error code reported by Device Directory Service(DDS).",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "deviceErrorName": {
          "description": "Device error name reported by Device Directory Service(DDS).",
          "type": "string"
        }
      },
      "example": {
        "deviceImportStatus": {
          "@odata.type": "microsoft.graph.importedWindowsAutopilotDeviceIdentityImportStatus"
        },
        "deviceRegistrationId": "string",
        "deviceErrorCode": "integer",
        "deviceErrorName": "string"
      }
    },
    "microsoft.graph.androidMobileAppIdentifier": {
      "title": "androidMobileAppIdentifier",
      "type": "object",
      "properties": {
        "packageId": {
          "description": "The identifier for an app, as specified in the play store.",
          "type": "string"
        }
      },
      "example": {
        "packageId": "string"
      }
    },
    "microsoft.graph.iosMobileAppIdentifier": {
      "title": "iosMobileAppIdentifier",
      "type": "object",
      "properties": {
        "bundleId": {
          "description": "The identifier for an app, as specified in the app store.",
          "type": "string"
        }
      },
      "example": {
        "bundleId": "string"
      }
    },
    "microsoft.graph.ipRange": {
      "title": "ipRange",
      "type": "object"
    },
    "microsoft.graph.iPv4Range": {
      "title": "iPv4Range",
      "type": "object",
      "properties": {
        "lowerAddress": {
          "description": "Lower IP Address",
          "type": "string"
        },
        "upperAddress": {
          "description": "Upper IP Address",
          "type": "string"
        }
      },
      "example": {
        "lowerAddress": "string",
        "upperAddress": "string"
      }
    },
    "microsoft.graph.iPv6Range": {
      "title": "iPv6Range",
      "type": "object",
      "properties": {
        "lowerAddress": {
          "description": "Lower IP Address",
          "type": "string"
        },
        "upperAddress": {
          "description": "Upper IP Address",
          "type": "string"
        }
      },
      "example": {
        "lowerAddress": "string",
        "upperAddress": "string"
      }
    },
    "microsoft.graph.keyValuePair": {
      "title": "keyValuePair",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name for this key-value pair",
          "type": "string"
        },
        "value": {
          "description": "Value for this key-value pair",
          "type": "string"
        }
      },
      "example": {
        "name": "string",
        "value": "string"
      }
    },
    "microsoft.graph.managedAppDiagnosticStatus": {
      "title": "managedAppDiagnosticStatus",
      "type": "object",
      "properties": {
        "validationName": {
          "description": "The validation friendly name",
          "type": "string"
        },
        "state": {
          "description": "The state of the operation",
          "type": "string"
        },
        "mitigationInstruction": {
          "description": "Instruction on how to mitigate a failed validation",
          "type": "string"
        }
      },
      "example": {
        "validationName": "string",
        "state": "string",
        "mitigationInstruction": "string"
      }
    },
    "microsoft.graph.managedAppPolicyDeploymentSummaryPerApp": {
      "title": "managedAppPolicyDeploymentSummaryPerApp",
      "type": "object",
      "properties": {
        "mobileAppIdentifier": {
          "description": "Deployment of an app."
        },
        "configurationAppliedUserCount": {
          "format": "int32",
          "description": "Number of users the policy is applied.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "mobileAppIdentifier": {
          "@odata.type": "microsoft.graph.mobileAppIdentifier"
        },
        "configurationAppliedUserCount": "integer"
      }
    },
    "microsoft.graph.mobileAppIdentifier": {
      "title": "mobileAppIdentifier",
      "type": "object"
    },
    "microsoft.graph.proxiedDomain": {
      "title": "proxiedDomain",
      "type": "object",
      "properties": {
        "ipAddressOrFQDN": {
          "description": "The IP address or FQDN",
          "type": "string"
        },
        "proxy": {
          "description": "Proxy IP",
          "type": "string"
        }
      },
      "example": {
        "ipAddressOrFQDN": "string",
        "proxy": "string"
      }
    },
    "microsoft.graph.windowsInformationProtectionApp": {
      "title": "windowsInformationProtectionApp",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "App display name.",
          "type": "string"
        },
        "description": {
          "description": "The app's description.",
          "type": "string"
        },
        "publisherName": {
          "description": "The publisher name",
          "type": "string"
        },
        "productName": {
          "description": "The product name.",
          "type": "string"
        },
        "denied": {
          "description": "If true, app is denied protection or exemption.",
          "type": "boolean"
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "publisherName": "string",
        "productName": "string",
        "denied": true
      }
    },
    "microsoft.graph.windowsInformationProtectionDataRecoveryCertificate": {
      "title": "windowsInformationProtectionDataRecoveryCertificate",
      "type": "object",
      "properties": {
        "subjectName": {
          "description": "Data recovery Certificate subject name",
          "type": "string"
        },
        "description": {
          "description": "Data recovery Certificate description",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "description": "Data recovery Certificate expiration datetime",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "certificate": {
          "format": "base64url",
          "description": "Data recovery Certificate",
          "type": "string"
        }
      },
      "example": {
        "subjectName": "string",
        "description": "string",
        "expirationDateTime": "string (timestamp)",
        "certificate": "string"
      }
    },
    "microsoft.graph.windowsInformationProtectionDesktopApp": {
      "title": "windowsInformationProtectionDesktopApp",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "App display name. Inherited from windowsInformationProtectionApp",
          "type": "string"
        },
        "description": {
          "description": "The app's description. Inherited from windowsInformationProtectionApp",
          "type": "string"
        },
        "publisherName": {
          "description": "The publisher name Inherited from windowsInformationProtectionApp",
          "type": "string"
        },
        "productName": {
          "description": "The product name. Inherited from windowsInformationProtectionApp",
          "type": "string"
        },
        "denied": {
          "description": "If true, app is denied protection or exemption. Inherited from windowsInformationProtectionApp",
          "type": "boolean"
        },
        "binaryName": {
          "description": "The binary name.",
          "type": "string"
        },
        "binaryVersionLow": {
          "description": "The lower binary version.",
          "type": "string"
        },
        "binaryVersionHigh": {
          "description": "The high binary version.",
          "type": "string"
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "publisherName": "string",
        "productName": "string",
        "denied": true,
        "binaryName": "string",
        "binaryVersionLow": "string",
        "binaryVersionHigh": "string"
      }
    },
    "microsoft.graph.windowsInformationProtectionIPRangeCollection": {
      "title": "windowsInformationProtectionIPRangeCollection",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name",
          "type": "string"
        },
        "ranges": {
          "description": "Collection of IP ranges",
          "type": "array",
          "items": { }
        }
      },
      "example": {
        "displayName": "string",
        "ranges": [
          {
            "@odata.type": "microsoft.graph.ipRange"
          }
        ]
      }
    },
    "microsoft.graph.windowsInformationProtectionProxiedDomainCollection": {
      "title": "windowsInformationProtectionProxiedDomainCollection",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name",
          "type": "string"
        },
        "proxiedDomains": {
          "description": "Collection of proxied domains",
          "type": "array",
          "items": { }
        }
      },
      "example": {
        "displayName": "string",
        "proxiedDomains": [
          {
            "@odata.type": "microsoft.graph.proxiedDomain"
          }
        ]
      }
    },
    "microsoft.graph.windowsInformationProtectionResourceCollection": {
      "title": "windowsInformationProtectionResourceCollection",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Display name",
          "type": "string"
        },
        "resources": {
          "description": "Collection of resources",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "displayName": "string",
        "resources": [
          "string"
        ]
      }
    },
    "microsoft.graph.windowsInformationProtectionStoreApp": {
      "title": "windowsInformationProtectionStoreApp",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "App display name. Inherited from windowsInformationProtectionApp",
          "type": "string"
        },
        "description": {
          "description": "The app's description. Inherited from windowsInformationProtectionApp",
          "type": "string"
        },
        "publisherName": {
          "description": "The publisher name Inherited from windowsInformationProtectionApp",
          "type": "string"
        },
        "productName": {
          "description": "The product name. Inherited from windowsInformationProtectionApp",
          "type": "string"
        },
        "denied": {
          "description": "If true, app is denied protection or exemption. Inherited from windowsInformationProtectionApp",
          "type": "boolean"
        }
      },
      "example": {
        "displayName": "string",
        "description": "string",
        "publisherName": "string",
        "productName": "string",
        "denied": true
      }
    },
    "microsoft.graph.deviceEnrollmentPlatformRestriction": {
      "title": "deviceEnrollmentPlatformRestriction",
      "type": "object",
      "properties": {
        "platformBlocked": {
          "description": "Block the platform from enrolling",
          "type": "boolean"
        },
        "personalDeviceEnrollmentBlocked": {
          "description": "Block personally owned devices from enrolling",
          "type": "boolean"
        },
        "osMinimumVersion": {
          "description": "Min OS version supported",
          "type": "string"
        },
        "osMaximumVersion": {
          "description": "Max OS version supported",
          "type": "string"
        }
      },
      "example": {
        "platformBlocked": true,
        "personalDeviceEnrollmentBlocked": true,
        "osMinimumVersion": "string",
        "osMaximumVersion": "string"
      }
    },
    "microsoft.graph.intuneBrand": {
      "title": "intuneBrand",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Company/organization name that is displayed to end users.",
          "type": "string"
        },
        "contactITName": {
          "description": "Name of the person/organization responsible for IT support.",
          "type": "string"
        },
        "contactITPhoneNumber": {
          "description": "Phone number of the person/organization responsible for IT support.",
          "type": "string"
        },
        "contactITEmailAddress": {
          "description": "Email address of the person/organization responsible for IT support.",
          "type": "string"
        },
        "contactITNotes": {
          "description": "Text comments regarding the person/organization responsible for IT support.",
          "type": "string"
        },
        "privacyUrl": {
          "description": "URL to the company/organization’s privacy policy.",
          "type": "string"
        },
        "onlineSupportSiteUrl": {
          "description": "URL to the company/organization’s IT helpdesk site.",
          "type": "string"
        },
        "onlineSupportSiteName": {
          "description": "Display name of the company/organization’s IT helpdesk site.",
          "type": "string"
        },
        "themeColor": {
          "description": "Primary theme color used in the Company Portal applications and web portal."
        },
        "showLogo": {
          "description": "Boolean that represents whether the administrator-supplied logo images are shown or not shown.",
          "type": "boolean"
        },
        "lightBackgroundLogo": {
          "description": "Logo image displayed in Company Portal apps which have a light background behind the logo."
        },
        "darkBackgroundLogo": {
          "description": "Logo image displayed in Company Portal apps which have a dark background behind the logo."
        },
        "showNameNextToLogo": {
          "description": "Boolean that represents whether the administrator-supplied display name will be shown next to the logo image.",
          "type": "boolean"
        },
        "showDisplayNameNextToLogo": {
          "description": "Boolean that represents whether the administrator-supplied display name will be shown next to the logo image.",
          "type": "boolean"
        }
      },
      "example": {
        "displayName": "string",
        "contactITName": "string",
        "contactITPhoneNumber": "string",
        "contactITEmailAddress": "string",
        "contactITNotes": "string",
        "privacyUrl": "string",
        "onlineSupportSiteUrl": "string",
        "onlineSupportSiteName": "string",
        "themeColor": {
          "@odata.type": "microsoft.graph.rgbColor"
        },
        "showLogo": true,
        "lightBackgroundLogo": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "darkBackgroundLogo": {
          "@odata.type": "microsoft.graph.mimeContent"
        },
        "showNameNextToLogo": true,
        "showDisplayNameNextToLogo": true
      }
    },
    "microsoft.graph.rgbColor": {
      "title": "rgbColor",
      "type": "object",
      "properties": {
        "r": {
          "format": "uint8",
          "description": "Red value",
          "type": "integer"
        },
        "g": {
          "format": "uint8",
          "description": "Green value",
          "type": "integer"
        },
        "b": {
          "format": "uint8",
          "description": "Blue value",
          "type": "integer"
        }
      },
      "example": {
        "r": "integer",
        "g": "integer",
        "b": "integer"
      }
    },
    "microsoft.graph.resourceAction": {
      "title": "resourceAction",
      "type": "object",
      "properties": {
        "allowedResourceActions": {
          "description": "Allowed Actions",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "notAllowedResourceActions": {
          "description": "Not Allowed Actions",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "allowedResourceActions": [
          "string"
        ],
        "notAllowedResourceActions": [
          "string"
        ]
      }
    },
    "microsoft.graph.rolePermission": {
      "title": "rolePermission",
      "type": "object",
      "properties": {
        "resourceActions": {
          "description": "Actions",
          "type": "array",
          "items": { }
        }
      },
      "example": {
        "resourceActions": [
          {
            "@odata.type": "microsoft.graph.resourceAction"
          }
        ]
      }
    },
    "microsoft.graph.allDevicesAssignmentTarget": {
      "title": "allDevicesAssignmentTarget",
      "type": "object"
    },
    "microsoft.graph.allLicensedUsersAssignmentTarget": {
      "title": "allLicensedUsersAssignmentTarget",
      "type": "object"
    },
    "microsoft.graph.deviceAndAppManagementAssignmentTarget": {
      "title": "deviceAndAppManagementAssignmentTarget",
      "type": "object"
    },
    "microsoft.graph.exclusionGroupAssignmentTarget": {
      "title": "exclusionGroupAssignmentTarget",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The group Id that is the target of the assignment. Inherited from groupAssignmentTarget",
          "type": "string"
        }
      },
      "example": {
        "groupId": "string"
      }
    },
    "microsoft.graph.groupAssignmentTarget": {
      "title": "groupAssignmentTarget",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The group Id that is the target of the assignment.",
          "type": "string"
        }
      },
      "example": {
        "groupId": "string"
      }
    },
    "microsoft.graph.mimeContent": {
      "title": "mimeContent",
      "type": "object",
      "properties": {
        "type": {
          "description": "Indicates the content mime type.",
          "type": "string"
        },
        "value": {
          "format": "base64url",
          "description": "The byte array that contains the actual content.",
          "type": "string"
        }
      },
      "example": {
        "type": "string",
        "value": "string"
      }
    },
    "microsoft.graph.report": {
      "title": "report",
      "type": "object",
      "properties": {
        "content": {
          "format": "base64url",
          "description": "Not yet documented",
          "type": "string"
        }
      },
      "example": {
        "content": "string"
      }
    },
    "microsoft.graph.uri": {
      "title": "uri",
      "type": "object",
      "properties": {
        "segments": {
          "description": "Not yet documented",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "segments": [
          "string"
        ]
      }
    },
    "microsoft.graph.invitedUserMessageInfo": {
      "title": "invitedUserMessageInfo",
      "type": "object",
      "properties": {
        "ccRecipients": {
          "description": "Additional recipients the invitation message should be sent to. Currently only 1 additional recipient is supported.",
          "type": "array",
          "items": { }
        },
        "customizedMessageBody": {
          "description": "Customized message body you want to send if you don't want the default message.",
          "type": "string"
        },
        "messageLanguage": {
          "description": "The language you want to send the default message in. If the customizedMessageBody is specified, this property is ignored, and the message is sent using the customizedMessageBody. The language format should be in ISO 639. The default is en-US.",
          "type": "string"
        }
      },
      "example": {
        "ccRecipients": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "customizedMessageBody": "string",
        "messageLanguage": "string"
      }
    },
    "microsoft.graph.itemBody": {
      "title": "itemBody",
      "type": "object",
      "properties": {
        "content": {
          "description": "The content of the item.",
          "type": "string"
        },
        "contentType": {
          "description": "The type of the content. Possible values are Text and HTML."
        }
      },
      "example": {
        "content": "string",
        "contentType": {
          "@odata.type": "microsoft.graph.bodyType"
        }
      }
    },
    "microsoft.graph.itemReference": {
      "title": "itemReference",
      "type": "object",
      "properties": {
        "driveId": {
          "description": "Unique identifier of the drive instance that contains the item. Read-only.",
          "type": "string"
        },
        "driveType": {
          "description": "Identifies the type of drive. See [drive][] resource for values.",
          "type": "string"
        },
        "id": {
          "description": "Unique identifier of the item in the drive. Read-only.",
          "type": "string"
        },
        "name": {
          "description": "The name of the item being referenced. Read-only.",
          "type": "string"
        },
        "path": {
          "description": "Path that can be used to navigate to the item. Read-only.",
          "type": "string"
        },
        "shareId": {
          "description": "A unique identifier for a shared resource that can be accessed via the [Shares][] API.",
          "type": "string"
        },
        "sharepointIds": {
          "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only."
        }
      },
      "example": {
        "driveId": "string",
        "driveType": "string",
        "id": "string",
        "name": "string",
        "path": "string",
        "shareId": "string",
        "sharepointIds": {
          "@odata.type": "microsoft.graph.sharepointIds"
        }
      }
    },
    "microsoft.graph.Json": {
      "title": "Json",
      "type": "object"
    },
    "microsoft.graph.licenseUnitsDetail": {
      "title": "licenseUnitsDetail",
      "type": "object",
      "properties": {
        "enabled": {
          "format": "int32",
          "description": "The number of units that are enabled.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "suspended": {
          "format": "int32",
          "description": "The number of units that are suspended.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "warning": {
          "format": "int32",
          "description": "The number of units that are in warning status.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "enabled": "integer",
        "suspended": "integer",
        "warning": "integer"
      }
    },
    "microsoft.graph.listInfo": {
      "title": "listInfo",
      "type": "object",
      "properties": {
        "contentTypesEnabled": {
          "description": "If true, indicates that content types are enabled for this list.",
          "type": "boolean"
        },
        "hidden": {
          "description": "If true, indicates that the list is not normally visible in the SharePoint user experience.",
          "type": "boolean"
        },
        "template": {
          "description": "An enumerated value that represents the base list template used in creating the list. Possible values include documentLibrary, genericList, task, survey, announcements, contacts, and more.",
          "type": "string"
        }
      },
      "example": {
        "contentTypesEnabled": true,
        "hidden": true,
        "template": "string"
      }
    },
    "microsoft.graph.localeInfo": {
      "title": "localeInfo",
      "type": "object",
      "properties": {
        "locale": {
          "description": "A locale representation for the user, which includes the user's preferred language and country/region. For example, 'en-us'. The language component follows 2-letter codes as defined in ISO 639-1, and the country component follows 2-letter codes as defined in ISO 3166-1 alpha-2.",
          "type": "string"
        },
        "displayName": {
          "description": "A name representing the user's locale in natural language, for example, 'English (United States)'.",
          "type": "string"
        }
      },
      "example": {
        "locale": "string",
        "displayName": "string"
      }
    },
    "microsoft.graph.location": {
      "title": "location",
      "type": "object",
      "properties": {
        "address": {
          "description": "The street address of the location."
        },
        "coordinates": {
          "description": "The geographic coordinates and elevation of the location."
        },
        "displayName": {
          "description": "The name associated with the location.",
          "type": "string"
        },
        "locationEmailAddress": {
          "description": "Optional email address of the location.",
          "type": "string"
        },
        "locationUri": {
          "description": "Optional URI representing the location.",
          "type": "string"
        },
        "locationType": {
          "description": "The type of location. The possible values are: default, conferenceRoom, homeAddress, businessAddress,geoCoordinates, streetAddress, hotel, restaurant, localBusiness, postalAddress. Read-only."
        },
        "uniqueId": {
          "description": "For internal use only.",
          "type": "string"
        },
        "uniqueIdType": {
          "description": "For internal use only."
        }
      },
      "example": {
        "address": {
          "@odata.type": "microsoft.graph.physicalAddress"
        },
        "coordinates": {
          "@odata.type": "microsoft.graph.outlookGeoCoordinates"
        },
        "displayName": "string",
        "locationEmailAddress": "string",
        "locationUri": "string",
        "locationType": {
          "@odata.type": "microsoft.graph.locationType"
        },
        "uniqueId": "string",
        "uniqueIdType": {
          "@odata.type": "microsoft.graph.locationUniqueIdType"
        }
      }
    },
    "microsoft.graph.locationConstraint": {
      "title": "locationConstraint",
      "type": "object",
      "properties": {
        "isRequired": {
          "description": "The client requests the service to include in the response a meeting location for the meeting. If this is true and all the resources are busy, findMeetingTimes will not return any meeting time suggestions. If this is false and all the resources are busy, findMeetingTimes would still look for meeting times without locations.",
          "type": "boolean"
        },
        "locations": {
          "description": "Constraint information for one or more locations that the client requests for the meeting.",
          "type": "array",
          "items": { }
        },
        "suggestLocation": {
          "description": "The client requests the service to suggest one or more meeting locations.",
          "type": "boolean"
        }
      },
      "example": {
        "isRequired": true,
        "locations": [
          {
            "@odata.type": "microsoft.graph.locationConstraintItem"
          }
        ],
        "suggestLocation": true
      }
    },
    "microsoft.graph.locationConstraintItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.location"
        },
        {
          "title": "locationConstraintItem",
          "type": "object",
          "properties": {
            "resolveAvailability": {
              "description": "If set to true and the specified resource is busy, findMeetingTimes looks for another resource that is free. If set to false and the specified resource is busy, findMeetingTimes returns the resource best ranked in the user's cache without checking if it's free. Default is true.",
              "type": "boolean"
            }
          }
        }
      ],
      "example": {
        "address": {
          "@odata.type": "microsoft.graph.physicalAddress"
        },
        "coordinates": {
          "@odata.type": "microsoft.graph.outlookGeoCoordinates"
        },
        "displayName": "string",
        "locationEmailAddress": "string",
        "locationUri": "string",
        "locationType": {
          "@odata.type": "microsoft.graph.locationType"
        },
        "uniqueId": "string",
        "uniqueIdType": {
          "@odata.type": "microsoft.graph.locationUniqueIdType"
        },
        "resolveAvailability": true
      }
    },
    "microsoft.graph.lookupColumn": {
      "title": "lookupColumn",
      "type": "object",
      "properties": {
        "allowMultipleValues": {
          "description": "Indicates whether multiple values can be selected from the source.",
          "type": "boolean"
        },
        "allowUnlimitedLength": {
          "description": "Indicates whether values in the column should be able to exceed the standard limit of 255 characters.",
          "type": "boolean"
        },
        "columnName": {
          "description": "The name of the lookup source column.",
          "type": "string"
        },
        "listId": {
          "description": "The unique identifier of the lookup source list.",
          "type": "string"
        },
        "primaryLookupColumnId": {
          "description": "If specified, this column is a secondary lookup, pulling an additional field from the list item looked up by the primary lookup. Use the list item looked up by the primary as the source for the column named here.",
          "type": "string"
        }
      },
      "example": {
        "allowMultipleValues": true,
        "allowUnlimitedLength": true,
        "columnName": "string",
        "listId": "string",
        "primaryLookupColumnId": "string"
      }
    },
    "microsoft.graph.mailboxSettings": {
      "title": "mailboxSettings",
      "type": "object",
      "properties": {
        "archiveFolder": {
          "description": "Folder ID of an archive folder for the user.",
          "type": "string"
        },
        "automaticRepliesSetting": {
          "description": "Configuration settings to automatically notify the sender of an incoming email with a message from the signed-in user."
        },
        "language": {
          "description": "The locale information for the user, including the preferred language and country/region."
        },
        "timeZone": {
          "description": "The default time zone for the user's mailbox.",
          "type": "string"
        },
        "workingHours": {
          "description": "The days of the week and hours in a specific time zone that the user works."
        }
      },
      "example": {
        "archiveFolder": "string",
        "automaticRepliesSetting": {
          "@odata.type": "microsoft.graph.automaticRepliesSetting"
        },
        "language": {
          "@odata.type": "microsoft.graph.localeInfo"
        },
        "timeZone": "string",
        "workingHours": {
          "@odata.type": "microsoft.graph.workingHours"
        }
      }
    },
    "microsoft.graph.mailTips": {
      "title": "mailTips",
      "type": "object",
      "properties": {
        "automaticReplies": {
          "description": "Mail tips for automatic reply if it has been set up by the recipient."
        },
        "customMailTip": {
          "description": "A custom mail tip that can be set on the recipient's mailbox.",
          "type": "string"
        },
        "deliveryRestricted": {
          "description": "Whether the recipient's mailbox is restricted, for example, accepting messages from only a predefined list of senders, rejecting messages from a predefined list of senders, or accepting messages from only authenticated senders.",
          "type": "boolean"
        },
        "emailAddress": {
          "description": "The email address of the recipient to get mailtips for."
        },
        "error": {
          "description": "Errors that occur during the getMailTips action."
        },
        "externalMemberCount": {
          "format": "int32",
          "description": "The number of external members if the recipient is a distribution list.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "isModerated": {
          "description": "Whether sending messages to the recipient requires approval. For example, if the recipient is a large distribution list and a moderator has been set up to approve messages sent to that distribution list, or if sending messages to a recipient requires approval of the recipient's manager.",
          "type": "boolean"
        },
        "mailboxFull": {
          "description": "The mailbox full status of the recipient.",
          "type": "boolean"
        },
        "maxMessageSize": {
          "format": "int32",
          "description": "The maximum message size that has been configured for the recipient's organization or mailbox.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "recipientScope": {
          "description": "The scope of the recipient. Possible values are: none, internal, external, externalPartner, externalNonParther. For example, an administrator can set another organization to be its 'partner'. The scope is useful if an administrator wants certain mailtips to be accessible to certain scopes. It's also useful to senders to inform them that their message may leave the organization, helping them make the correct decisions about wording, tone and content."
        },
        "recipientSuggestions": {
          "description": "Recipients suggested based on previous contexts where they appear in the same message.",
          "type": "array",
          "items": { }
        },
        "totalMemberCount": {
          "format": "int32",
          "description": "The number of members if the recipient is a distribution list.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "automaticReplies": {
          "@odata.type": "microsoft.graph.automaticRepliesMailTips"
        },
        "customMailTip": "string",
        "deliveryRestricted": true,
        "emailAddress": {
          "@odata.type": "microsoft.graph.emailAddress"
        },
        "error": {
          "@odata.type": "microsoft.graph.mailTipsError"
        },
        "externalMemberCount": "integer",
        "isModerated": true,
        "mailboxFull": true,
        "maxMessageSize": "integer",
        "recipientScope": {
          "@odata.type": "microsoft.graph.recipientScopeType"
        },
        "recipientSuggestions": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "totalMemberCount": "integer"
      }
    },
    "microsoft.graph.mailTipsError": {
      "title": "mailTipsError",
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string"
        },
        "code": {
          "description": "The error code.",
          "type": "string"
        }
      },
      "example": {
        "message": "string",
        "code": "string"
      }
    },
    "microsoft.graph.malwareState": {
      "title": "malwareState",
      "type": "object",
      "properties": {
        "category": {
          "description": "Provider-generated malware category (for example, trojan, ransomware, etc.).",
          "type": "string"
        },
        "family": {
          "description": "Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).",
          "type": "string"
        },
        "name": {
          "description": "Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).",
          "type": "string"
        },
        "severity": {
          "description": "Provider-determined severity of this malware.",
          "type": "string"
        },
        "wasRunning": {
          "description": "Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.",
          "type": "boolean"
        }
      },
      "example": {
        "category": "string",
        "family": "string",
        "name": "string",
        "severity": "string",
        "wasRunning": true
      }
    },
    "microsoft.graph.meetingTimeSuggestion": {
      "title": "meetingTimeSuggestion",
      "type": "object",
      "properties": {
        "attendeeAvailability": {
          "description": "An array that shows the availability status of each attendee for this meeting suggestion.",
          "type": "array",
          "items": { }
        },
        "confidence": {
          "format": "double",
          "description": "A percentage that represents the likelhood of all the attendees attending."
        },
        "locations": {
          "description": "An array that specifies the name and geographic location of each meeting location for this meeting suggestion.",
          "type": "array",
          "items": { }
        },
        "meetingTimeSlot": {
          "description": "A time period suggested for the meeting."
        },
        "organizerAvailability": {
          "description": "Availability of the meeting organizer for this meeting suggestion. The possible values are: free, tentative, busy, oof, workingElsewhere, unknown."
        },
        "suggestionReason": {
          "description": "Reason for suggesting the meeting time.",
          "type": "string"
        }
      },
      "example": {
        "attendeeAvailability": [
          {
            "@odata.type": "microsoft.graph.attendeeAvailability"
          }
        ],
        "confidence": "double",
        "locations": [
          {
            "@odata.type": "microsoft.graph.location"
          }
        ],
        "meetingTimeSlot": {
          "@odata.type": "microsoft.graph.timeSlot"
        },
        "organizerAvailability": {
          "@odata.type": "microsoft.graph.freeBusyStatus"
        },
        "suggestionReason": "string"
      }
    },
    "microsoft.graph.meetingTimeSuggestionsResult": {
      "title": "meetingTimeSuggestionsResult",
      "type": "object",
      "properties": {
        "emptySuggestionsReason": {
          "description": "A reason for not returning any meeting suggestions. The possible values are: attendeesUnavailable, attendeesUnavailableOrUnknown, locationsUnavailable, organizerUnavailable, or unknown. This property is an empty string if the meetingTimeSuggestions property does include any meeting suggestions.",
          "type": "string"
        },
        "meetingTimeSuggestions": {
          "description": "An array of meeting suggestions.",
          "type": "array",
          "items": { }
        }
      },
      "example": {
        "emptySuggestionsReason": "string",
        "meetingTimeSuggestions": [
          {
            "@odata.type": "microsoft.graph.meetingTimeSuggestion"
          }
        ]
      }
    },
    "microsoft.graph.messageRuleActions": {
      "title": "messageRuleActions",
      "type": "object",
      "properties": {
        "assignCategories": {
          "description": "A list of categories to be assigned to a message.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "copyToFolder": {
          "description": "The ID of a folder that a message is to be copied to.",
          "type": "string"
        },
        "delete": {
          "description": "Indicates whether a message should be moved to the Deleted Items folder.",
          "type": "boolean"
        },
        "forwardAsAttachmentTo": {
          "description": "The email addresses of the recipients to which a message should be forwarded as an attachment.",
          "type": "array",
          "items": { }
        },
        "forwardTo": {
          "description": "The email addresses of the recipients to which a message should be forwarded.",
          "type": "array",
          "items": { }
        },
        "markAsRead": {
          "description": "Indicates whether a message should be marked as read.",
          "type": "boolean"
        },
        "markImportance": {
          "description": "Sets the importance of the message, which can be: low, normal, high."
        },
        "moveToFolder": {
          "description": "The ID of the folder that a message will be moved to.",
          "type": "string"
        },
        "permanentDelete": {
          "description": "Indicates whether a message should be permanently deleted and not saved to the Deleted Items folder.",
          "type": "boolean"
        },
        "redirectTo": {
          "description": "The email addresses to which a message should be redirected.",
          "type": "array",
          "items": { }
        },
        "stopProcessingRules": {
          "description": "Indicates whether subsequent rules should be evaluated.",
          "type": "boolean"
        }
      },
      "example": {
        "assignCategories": [
          "string"
        ],
        "copyToFolder": "string",
        "delete": true,
        "forwardAsAttachmentTo": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "forwardTo": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "markAsRead": true,
        "markImportance": {
          "@odata.type": "microsoft.graph.importance"
        },
        "moveToFolder": "string",
        "permanentDelete": true,
        "redirectTo": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "stopProcessingRules": true
      }
    },
    "microsoft.graph.messageRulePredicates": {
      "title": "messageRulePredicates",
      "type": "object",
      "properties": {
        "bodyContains": {
          "description": "Represents the strings that should appear in the body of an incoming message in order for the condition or exception to apply.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bodyOrSubjectContains": {
          "description": "Represents the strings that should appear in the body or subject of an incoming message in order for the condition or exception to apply.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "categories": {
          "description": "Represents the categories that an incoming message should be labeled with in order for the condition or exception to apply.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fromAddresses": {
          "description": "Represents the specific sender email addresses of an incoming message in order for the condition or exception to apply.",
          "type": "array",
          "items": { }
        },
        "hasAttachments": {
          "description": "Indicates whether an incoming message must have attachments in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "headerContains": {
          "description": "Represents the strings that appear in the headers of an incoming message in order for the condition or exception to apply.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "importance": {
          "description": "The importance that is stamped on an incoming message in order for the condition or exception to apply: low, normal, high."
        },
        "isApprovalRequest": {
          "description": "Indicates whether an incoming message must be an approval request in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "isAutomaticForward": {
          "description": "Indicates whether an incoming message must be automatically forwarded in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "isAutomaticReply": {
          "description": "Indicates whether an incoming message must be an auto reply in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "isEncrypted": {
          "description": "Indicates whether an incoming message must be encrypted in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "isMeetingRequest": {
          "description": "Indicates whether an incoming message must be a meeting request in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "isMeetingResponse": {
          "description": "Indicates whether an incoming message must be a meeting response in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "isNonDeliveryReport": {
          "description": "Indicates whether an incoming message must be a non-delivery report in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "isPermissionControlled": {
          "description": "Indicates whether an incoming message must be permission controlled (RMS-protected) in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "isReadReceipt": {
          "description": "Indicates whether an incoming message must be a read receipt in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "isSigned": {
          "description": "Indicates whether an incoming message must be S/MIME-signed in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "isVoicemail": {
          "description": "Indicates whether an incoming message must be a voice mail in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "messageActionFlag": {
          "description": "Represents the flag-for-action value that appears on an incoming message in order for the condition or exception to apply. The possible values are: any, call, doNotForward, followUp, fyi, forward, noResponseNecessary, read, reply, replyToAll, review."
        },
        "notSentToMe": {
          "description": "Indicates whether the owner of the mailbox must not be a recipient of an incoming message in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "recipientContains": {
          "description": "Represents the strings that appear in either the toRecipients or ccRecipients properties of an incoming message in order for the condition or exception to apply.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "senderContains": {
          "description": "Represents the strings that appear in the from property of an incoming message in order for the condition or exception to apply.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sensitivity": {
          "description": "Represents the sensitivity level that must be stamped on an incoming message in order for the condition or exception to apply. The possible values are: normal, personal, private, confidential."
        },
        "sentCcMe": {
          "description": "Indicates whether the owner of the mailbox must be in the ccRecipients property of an incoming message in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "sentOnlyToMe": {
          "description": "Indicates whether the owner of the mailbox must be the only recipient in an incoming message in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "sentToAddresses": {
          "description": "Represents the email addresses that an incoming message must have been sent to in order for the condition or exception to apply.",
          "type": "array",
          "items": { }
        },
        "sentToMe": {
          "description": "Indicates whether the owner of the mailbox must be in the toRecipients property of an incoming message in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "sentToOrCcMe": {
          "description": "Indicates whether the owner of the mailbox must be in either a toRecipients or ccRecipients property of an incoming message in order for the condition or exception to apply.",
          "type": "boolean"
        },
        "subjectContains": {
          "description": "Represents the strings that appear in the subject of an incoming message in order for the condition or exception to apply.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "withinSizeRange": {
          "description": "Represents the minimum and maximum sizes (in kilobytes) that an incoming message must fall in between in order for the condition or exception to apply."
        }
      },
      "example": {
        "bodyContains": [
          "string"
        ],
        "bodyOrSubjectContains": [
          "string"
        ],
        "categories": [
          "string"
        ],
        "fromAddresses": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "hasAttachments": true,
        "headerContains": [
          "string"
        ],
        "importance": {
          "@odata.type": "microsoft.graph.importance"
        },
        "isApprovalRequest": true,
        "isAutomaticForward": true,
        "isAutomaticReply": true,
        "isEncrypted": true,
        "isMeetingRequest": true,
        "isMeetingResponse": true,
        "isNonDeliveryReport": true,
        "isPermissionControlled": true,
        "isReadReceipt": true,
        "isSigned": true,
        "isVoicemail": true,
        "messageActionFlag": {
          "@odata.type": "microsoft.graph.messageActionFlag"
        },
        "notSentToMe": true,
        "recipientContains": [
          "string"
        ],
        "senderContains": [
          "string"
        ],
        "sensitivity": {
          "@odata.type": "microsoft.graph.sensitivity"
        },
        "sentCcMe": true,
        "sentOnlyToMe": true,
        "sentToAddresses": [
          {
            "@odata.type": "microsoft.graph.recipient"
          }
        ],
        "sentToMe": true,
        "sentToOrCcMe": true,
        "subjectContains": [
          "string"
        ],
        "withinSizeRange": {
          "@odata.type": "microsoft.graph.sizeRange"
        }
      }
    },
    "microsoft.graph.networkConnection": {
      "title": "networkConnection",
      "type": "object",
      "properties": {
        "applicationName": {
          "description": "Name of the application managing the network connection (for example, Facebook, SMTP, etc.).",
          "type": "string"
        },
        "destinationAddress": {
          "description": "Destination IP address (of the network connection).",
          "type": "string"
        },
        "destinationDomain": {
          "description": "Destination domain portion of the destination URL. (for example 'www.contoso.com').",
          "type": "string"
        },
        "destinationPort": {
          "description": "Destination port (of the network connection).",
          "type": "string"
        },
        "destinationUrl": {
          "description": "Network connection URL/URI string - excluding parameters. (for example 'www.contoso.com/products/default.html')",
          "type": "string"
        },
        "direction": {
          "description": "Network connection direction. Possible values are: unknown, inbound, outbound."
        },
        "domainRegisteredDateTime": {
          "format": "date-time",
          "description": "Date when the destination domain was registered. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "localDnsName": {
          "description": "The local DNS name resolution as it appears in the host's local DNS cache (for example, in case the 'hosts' file was tampered with).",
          "type": "string"
        },
        "natDestinationAddress": {
          "description": "Network Address Translation destination IP address.",
          "type": "string"
        },
        "natDestinationPort": {
          "description": "Network Address Translation destination port.",
          "type": "string"
        },
        "natSourceAddress": {
          "description": "Network Address Translation source IP address.",
          "type": "string"
        },
        "natSourcePort": {
          "description": "Network Address Translation source port.",
          "type": "string"
        },
        "protocol": {
          "description": "Network protocol. Possible values are: unknown, ip, icmp, igmp, ggp, ipv4, tcp, pup, udp, idp, ipv6, ipv6RoutingHeader, ipv6FragmentHeader, ipSecEncapsulatingSecurityPayload, ipSecAuthenticationHeader, icmpV6, ipv6NoNextHeader, ipv6DestinationOptions, nd, raw, ipx, spx, spxII."
        },
        "riskScore": {
          "description": "Provider generated/calculated risk score of the network connection. Recommended value range of 0-1, which equates to a percentage.",
          "type": "string"
        },
        "sourceAddress": {
          "description": "Source (i.e. origin) IP address (of the network connection).",
          "type": "string"
        },
        "sourcePort": {
          "description": "Source (i.e. origin) IP port (of the network connection).",
          "type": "string"
        },
        "status": {
          "description": "Network connection status. Possible values are: unknown, attempted, succeeded, blocked, failed."
        },
        "urlParameters": {
          "description": "Parameters (suffix) of the destination URL.",
          "type": "string"
        }
      },
      "example": {
        "applicationName": "string",
        "destinationAddress": "string",
        "destinationDomain": "string",
        "destinationPort": "string",
        "destinationUrl": "string",
        "direction": {
          "@odata.type": "microsoft.graph.connectionDirection"
        },
        "domainRegisteredDateTime": "string (timestamp)",
        "localDnsName": "string",
        "natDestinationAddress": "string",
        "natDestinationPort": "string",
        "natSourceAddress": "string",
        "natSourcePort": "string",
        "protocol": {
          "@odata.type": "microsoft.graph.securityNetworkProtocol"
        },
        "riskScore": "string",
        "sourceAddress": "string",
        "sourcePort": "string",
        "status": {
          "@odata.type": "microsoft.graph.connectionStatus"
        },
        "urlParameters": "string"
      }
    },
    "microsoft.graph.notebookLinks": {
      "title": "notebookLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": {
          "description": "Opens the notebook in the OneNote native client if it's installed."
        },
        "oneNoteWebUrl": {
          "description": "Opens the notebook in OneNote Online."
        }
      },
      "example": {
        "oneNoteClientUrl": {
          "@odata.type": "microsoft.graph.externalLink"
        },
        "oneNoteWebUrl": {
          "@odata.type": "microsoft.graph.externalLink"
        }
      }
    },
    "microsoft.graph.numberColumn": {
      "title": "numberColumn",
      "type": "object",
      "properties": {
        "decimalPlaces": {
          "description": "How many decimal places to display. See below for information about the possible values.",
          "type": "string"
        },
        "displayAs": {
          "description": "How the value should be presented in the UX. Must be one of number or percentage. If unspecified, treated as number.",
          "type": "string"
        },
        "maximum": {
          "format": "double",
          "description": "The maximum permitted value."
        },
        "minimum": {
          "format": "double",
          "description": "The minimum permitted value."
        }
      },
      "example": {
        "decimalPlaces": "string",
        "displayAs": "string",
        "maximum": "double",
        "minimum": "double"
      }
    },
    "microsoft.graph.onenoteOperationError": {
      "title": "onenoteOperationError",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code.",
          "type": "string"
        },
        "message": {
          "description": "The error message.",
          "type": "string"
        }
      },
      "example": {
        "code": "string",
        "message": "string"
      }
    },
    "microsoft.graph.onPremisesExtensionAttributes": {
      "title": "onPremisesExtensionAttributes",
      "type": "object",
      "properties": {
        "extensionAttribute1": {
          "description": "First customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute2": {
          "description": "Second customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute3": {
          "description": "Third customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute4": {
          "description": "Fourth customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute5": {
          "description": "Fifth customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute6": {
          "description": "Sixth customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute7": {
          "description": "Seventh customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute8": {
          "description": "Eighth customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute9": {
          "description": "Ninth customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute10": {
          "description": "Tenth customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute11": {
          "description": "Eleventh customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute12": {
          "description": "Twelfth customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute13": {
          "description": "Thirteenth customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute14": {
          "description": "Fourteenth customizable extension attribute.",
          "type": "string"
        },
        "extensionAttribute15": {
          "description": "Fifteenth customizable extension attribute.",
          "type": "string"
        }
      },
      "example": {
        "extensionAttribute1": "string",
        "extensionAttribute2": "string",
        "extensionAttribute3": "string",
        "extensionAttribute4": "string",
        "extensionAttribute5": "string",
        "extensionAttribute6": "string",
        "extensionAttribute7": "string",
        "extensionAttribute8": "string",
        "extensionAttribute9": "string",
        "extensionAttribute10": "string",
        "extensionAttribute11": "string",
        "extensionAttribute12": "string",
        "extensionAttribute13": "string",
        "extensionAttribute14": "string",
        "extensionAttribute15": "string"
      }
    },
    "microsoft.graph.onPremisesProvisioningError": {
      "title": "onPremisesProvisioningError",
      "type": "object",
      "properties": {
        "category": {
          "description": "Category of the provisioning error. Note: Currently, there is only one possible value. Possible value: PropertyConflict - indicates a property value is not unique. Other objects contain the same value for the property.",
          "type": "string"
        },
        "occurredDateTime": {
          "format": "date-time",
          "description": "The date and time at which the error occurred.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "propertyCausingError": {
          "description": "Name of the directory property causing the error. Current possible values: UserPrincipalName or ProxyAddress",
          "type": "string"
        },
        "value": {
          "description": "Value of the property causing the error.",
          "type": "string"
        }
      },
      "example": {
        "category": "string",
        "occurredDateTime": "string (timestamp)",
        "propertyCausingError": "string",
        "value": "string"
      }
    },
    "microsoft.graph.outlookGeoCoordinates": {
      "title": "outlookGeoCoordinates",
      "type": "object",
      "properties": {
        "accuracy": {
          "format": "double",
          "description": "The accuracy of the latitude and longitude. As an example, the accuracy can be measured in meters, such as the latitude and longitude are accurate to within 50 meters."
        },
        "altitude": {
          "format": "double",
          "description": "The altitude of the location."
        },
        "altitudeAccuracy": {
          "format": "double",
          "description": "The accuracy of the altitude."
        },
        "latitude": {
          "format": "double",
          "description": "The latitude of the location."
        },
        "longitude": {
          "format": "double",
          "description": "The longitude of the location."
        }
      },
      "example": {
        "accuracy": "double",
        "altitude": "double",
        "altitudeAccuracy": "double",
        "latitude": "double",
        "longitude": "double"
      }
    },
    "microsoft.graph.package": {
      "title": "package",
      "type": "object",
      "properties": {
        "type": {
          "description": "A string indicating the type of package. While oneNote is the only currently defined value, you should expect other package types to be returned and handle them accordingly.",
          "type": "string"
        }
      },
      "example": {
        "type": "string"
      }
    },
    "microsoft.graph.pageLinks": {
      "title": "pageLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": {
          "description": "Opens the page in the OneNote native client if it's installed."
        },
        "oneNoteWebUrl": {
          "description": "Opens the page in OneNote Online."
        }
      },
      "example": {
        "oneNoteClientUrl": {
          "@odata.type": "microsoft.graph.externalLink"
        },
        "oneNoteWebUrl": {
          "@odata.type": "microsoft.graph.externalLink"
        }
      }
    },
    "microsoft.graph.passwordProfile": {
      "title": "passwordProfile",
      "type": "object",
      "properties": {
        "forceChangePasswordNextSignIn": {
          "description": "true if the user must change her password on the next login; otherwise false.",
          "type": "boolean"
        },
        "password": {
          "description": "The password for the user. This property is required when a user is created. It can be updated, but the user will be required to change the password on the next login. The password must satisfy minimum requirements as specified by the user’s passwordPolicies property. By default, a strong password is required.",
          "type": "string"
        }
      },
      "example": {
        "forceChangePasswordNextSignIn": true,
        "password": "string"
      }
    },
    "microsoft.graph.onenotePatchContentCommand": {
      "title": "onenotePatchContentCommand",
      "type": "object",
      "properties": {
        "action": {
          "description": "The action to perform on the target element. The possible values are: replace, append, delete, insert, or prepend."
        },
        "content": {
          "description": "A string of well-formed HTML to add to the page, and any image or file binary data. If the content contains binary data, the request must be sent using the multipart/form-data content type with a 'Commands' part.",
          "type": "string"
        },
        "position": {
          "description": "The location to add the supplied content, relative to the target element. The possible values are: after (default) or before."
        },
        "target": {
          "description": "The element to update. Must be the #<data-id> or the generated <id> of the element, or the body or title keyword.",
          "type": "string"
        }
      },
      "example": {
        "action": {
          "@odata.type": "microsoft.graph.onenotePatchActionType"
        },
        "content": "string",
        "position": {
          "@odata.type": "microsoft.graph.onenotePatchInsertPosition"
        },
        "target": "string"
      }
    },
    "microsoft.graph.patternedRecurrence": {
      "title": "patternedRecurrence",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "The frequency of an event."
        },
        "range": {
          "description": "The duration of an event."
        }
      },
      "example": {
        "pattern": {
          "@odata.type": "microsoft.graph.recurrencePattern"
        },
        "range": {
          "@odata.type": "microsoft.graph.recurrenceRange"
        }
      }
    },
    "microsoft.graph.personOrGroupColumn": {
      "title": "personOrGroupColumn",
      "type": "object",
      "properties": {
        "allowMultipleSelection": {
          "description": "Indicates whether multiple values can be selected from the source.",
          "type": "boolean"
        },
        "displayAs": {
          "description": "How to display the information about the person or group chosen. See below.",
          "type": "string"
        },
        "chooseFromType": {
          "description": "Whether to allow selection of people only, or people and groups. Must be one of peopleAndGroups or peopleOnly.",
          "type": "string"
        }
      },
      "example": {
        "allowMultipleSelection": true,
        "displayAs": "string",
        "chooseFromType": "string"
      }
    },
    "microsoft.graph.personType": {
      "title": "personType",
      "type": "object",
      "properties": {
        "class": {
          "description": "The type of data source, such as Person.",
          "type": "string"
        },
        "subclass": {
          "description": "The secondary type of data source, such as OrganizationUser.",
          "type": "string"
        }
      },
      "example": {
        "class": "string",
        "subclass": "string"
      }
    },
    "microsoft.graph.phone": {
      "title": "phone",
      "type": "object",
      "properties": {
        "number": {
          "description": "The phone number.",
          "type": "string"
        },
        "type": {
          "description": "The type of phone number. The possible values are: home, business, mobile, other, assistant, homeFax, businessFax, otherFax, pager, radio."
        }
      },
      "example": {
        "number": "string",
        "type": {
          "@odata.type": "microsoft.graph.phoneType"
        }
      }
    },
    "microsoft.graph.photo": {
      "title": "photo",
      "type": "object",
      "properties": {
        "cameraMake": {
          "description": "Camera manufacturer. Read-only.",
          "type": "string"
        },
        "cameraModel": {
          "description": "Camera model. Read-only.",
          "type": "string"
        },
        "exposureDenominator": {
          "format": "double",
          "description": "The denominator for the exposure time fraction from the camera. Read-only."
        },
        "exposureNumerator": {
          "format": "double",
          "description": "The numerator for the exposure time fraction from the camera. Read-only."
        },
        "fNumber": {
          "format": "double",
          "description": "The F-stop value from the camera. Read-only."
        },
        "focalLength": {
          "format": "double",
          "description": "The focal length from the camera. Read-only."
        },
        "iso": {
          "format": "int32",
          "description": "The ISO value from the camera. Read-only.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "takenDateTime": {
          "format": "date-time",
          "description": "Represents the date and time the photo was taken. Read-only.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      },
      "example": {
        "cameraMake": "string",
        "cameraModel": "string",
        "exposureDenominator": "double",
        "exposureNumerator": "double",
        "fNumber": "double",
        "focalLength": "double",
        "iso": "integer",
        "takenDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.physicalAddress": {
      "title": "physicalAddress",
      "type": "object",
      "properties": {
        "city": {
          "description": "The city.",
          "type": "string"
        },
        "countryOrRegion": {
          "description": "The country or region. It's a free-format string value, for example, 'United States'.",
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code.",
          "type": "string"
        },
        "state": {
          "description": "The state.",
          "type": "string"
        },
        "street": {
          "description": "The street.",
          "type": "string"
        }
      },
      "example": {
        "city": "string",
        "countryOrRegion": "string",
        "postalCode": "string",
        "state": "string",
        "street": "string"
      }
    },
    "microsoft.graph.plannerAppliedCategories": {
      "title": "plannerAppliedCategories",
      "type": "object"
    },
    "microsoft.graph.plannerAssignment": {
      "title": "plannerAssignment",
      "type": "object",
      "properties": {
        "assignedBy": {
          "description": "The identity of the user that performed the assignment of the task, i.e. the assignor."
        },
        "assignedDateTime": {
          "format": "date-time",
          "description": "The time at which the task was assigned. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "orderHint": {
          "description": "Hint used to order assignees in a task. The format is defined as outlined here.",
          "type": "string"
        }
      },
      "example": {
        "assignedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "assignedDateTime": "string (timestamp)",
        "orderHint": "string"
      }
    },
    "microsoft.graph.plannerAssignments": {
      "title": "plannerAssignments",
      "type": "object"
    },
    "microsoft.graph.plannerCategoryDescriptions": {
      "title": "plannerCategoryDescriptions",
      "type": "object",
      "properties": {
        "category1": {
          "description": "The label associated with Category 1",
          "type": "string"
        },
        "category2": {
          "description": "The label associated with Category 2",
          "type": "string"
        },
        "category3": {
          "description": "The label associated with Category 3",
          "type": "string"
        },
        "category4": {
          "description": "The label associated with Category 4",
          "type": "string"
        },
        "category5": {
          "description": "The label associated with Category 5",
          "type": "string"
        },
        "category6": {
          "description": "The label associated with Category 6",
          "type": "string"
        }
      },
      "example": {
        "category1": "string",
        "category2": "string",
        "category3": "string",
        "category4": "string",
        "category5": "string",
        "category6": "string"
      }
    },
    "microsoft.graph.plannerChecklistItem": {
      "title": "plannerChecklistItem",
      "type": "object",
      "properties": {
        "isChecked": {
          "description": "Value is true if the item is checked and false otherwise.",
          "type": "boolean"
        },
        "lastModifiedBy": {
          "description": "Read-only. User ID by which this is last modified."
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Read-only. Date and time at which this is last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "orderHint": {
          "description": "Used to set the relative order of items in the checklist. The format is defined as outlined here.",
          "type": "string"
        },
        "title": {
          "description": "Title of the checklist item",
          "type": "string"
        }
      },
      "example": {
        "isChecked": true,
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "orderHint": "string",
        "title": "string"
      }
    },
    "microsoft.graph.plannerChecklistItems": {
      "title": "plannerChecklistItems",
      "type": "object"
    },
    "microsoft.graph.plannerExternalReference": {
      "title": "plannerExternalReference",
      "type": "object",
      "properties": {
        "alias": {
          "description": "A name alias to describe the reference.",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "Read-only. User ID by which this is last modified."
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Read-only. Date and time at which this is last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "previewPriority": {
          "description": "Used to set the relative priority order in which the reference will be shown as a preview on the task.",
          "type": "string"
        },
        "type": {
          "description": "Used to describe the type of the reference. Types include: PowerPoint, Word, Excel, Other.",
          "type": "string"
        }
      },
      "example": {
        "alias": "string",
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "previewPriority": "string",
        "type": "string"
      }
    },
    "microsoft.graph.plannerExternalReferences": {
      "title": "plannerExternalReferences",
      "type": "object"
    },
    "microsoft.graph.plannerOrderHintsByAssignee": {
      "title": "plannerOrderHintsByAssignee",
      "type": "object"
    },
    "microsoft.graph.plannerUserIds": {
      "title": "plannerUserIds",
      "type": "object"
    },
    "microsoft.graph.privacyProfile": {
      "title": "privacyProfile",
      "type": "object",
      "properties": {
        "contactEmail": {
          "description": "A valid smtp email address for the privacy statement contact. Not required.",
          "type": "string"
        },
        "statementUrl": {
          "description": "A valid URL format that begins with http:// or https://. Maximum length is 255 characters. The URL that directs to the company's privacy statement. Not required.",
          "type": "string"
        }
      },
      "example": {
        "contactEmail": "string",
        "statementUrl": "string"
      }
    },
    "microsoft.graph.process": {
      "title": "process",
      "type": "object",
      "properties": {
        "accountName": {
          "description": "User account identifier (user account context the process ran under) for example, AccountName, SID, and so on.",
          "type": "string"
        },
        "commandLine": {
          "description": "The full process invocation commandline including all parameters.",
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Time at which the process was started. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "fileHash": {
          "description": "Complex type containing file hashes (cryptographic and location-sensitive)."
        },
        "integrityLevel": {
          "description": "The integrity level of the process. Possible values are: unknown, untrusted, low, medium, high, system."
        },
        "isElevated": {
          "description": "True if the process is elevated.",
          "type": "boolean"
        },
        "name": {
          "description": "The name of the process' Image file.",
          "type": "string"
        },
        "parentProcessCreatedDateTime": {
          "format": "date-time",
          "description": "DateTime at which the parent process was started. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "parentProcessId": {
          "format": "int32",
          "description": "The Process ID (PID) of the parent process.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "parentProcessName": {
          "description": "The name of the image file of the parent process.",
          "type": "string"
        },
        "path": {
          "description": "Full path, including filename.",
          "type": "string"
        },
        "processId": {
          "format": "int32",
          "description": "The Process ID (PID) of the process.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "accountName": "string",
        "commandLine": "string",
        "createdDateTime": "string (timestamp)",
        "fileHash": {
          "@odata.type": "microsoft.graph.fileHash"
        },
        "integrityLevel": {
          "@odata.type": "microsoft.graph.processIntegrityLevel"
        },
        "isElevated": true,
        "name": "string",
        "parentProcessCreatedDateTime": "string (timestamp)",
        "parentProcessId": "integer",
        "parentProcessName": "string",
        "path": "string",
        "processId": "integer"
      }
    },
    "microsoft.graph.imageInfo": {
      "title": "imageInfo",
      "type": "object",
      "properties": {
        "iconUrl": {
          "description": "Optional; URI that points to an icon which represents the application used to generate the activity",
          "type": "string"
        },
        "alternateText": {
          "description": "Optional; alt-text accessible content for the image",
          "type": "string"
        },
        "addImageQuery": {
          "description": "Optional; parameter used to indicate the server is able to render image dynamically in response to parameterization. For example – a high contrast image",
          "type": "boolean"
        }
      },
      "example": {
        "iconUrl": "string",
        "alternateText": "string",
        "addImageQuery": true
      }
    },
    "microsoft.graph.visualInfo": {
      "title": "visualInfo",
      "type": "object",
      "properties": {
        "attribution": {
          "description": "Optional. JSON object used to represent an icon which represents the application used to generate the activity"
        },
        "description": {
          "description": "Optional. Longer text description of the user's unique activity (example: document name, first sentence, and/or metadata)",
          "type": "string"
        },
        "backgroundColor": {
          "description": "Optional. Background color used to render the activity in the UI - brand color for the application source of the activity. Must be a valid hex color",
          "type": "string"
        },
        "displayText": {
          "description": "Required. Short text description of the user's unique activity (for example, document name in cases where an activity refers to document creation)",
          "type": "string"
        },
        "content": {
          "description": "Optional. Custom piece of data - JSON object used to provide custom content to render the activity in the Windows Shell UI"
        }
      },
      "example": {
        "attribution": {
          "@odata.type": "microsoft.graph.imageInfo"
        },
        "description": "string",
        "backgroundColor": "string",
        "displayText": "string",
        "content": {
          "@odata.type": "microsoft.graph.Json"
        }
      }
    },
    "microsoft.graph.provisionedPlan": {
      "title": "provisionedPlan",
      "type": "object",
      "properties": {
        "capabilityStatus": {
          "description": "For example, 'Enabled'.",
          "type": "string"
        },
        "provisioningStatus": {
          "description": "For example, 'Success'.",
          "type": "string"
        },
        "service": {
          "description": "The name of the service; for example, 'AccessControlS2S'",
          "type": "string"
        }
      },
      "example": {
        "capabilityStatus": "string",
        "provisioningStatus": "string",
        "service": "string"
      }
    },
    "microsoft.graph.publicationFacet": {
      "title": "publicationFacet",
      "type": "object",
      "properties": {
        "level": {
          "description": "The state of publication for this document. Either published or checkout. Read-only.",
          "type": "string"
        },
        "versionId": {
          "description": "The unique identifier for the version that is visible to the current caller. Read-only.",
          "type": "string"
        }
      },
      "example": {
        "level": "string",
        "versionId": "string"
      }
    },
    "microsoft.graph.quota": {
      "title": "quota",
      "type": "object",
      "properties": {
        "deleted": {
          "format": "int64",
          "description": "Total space consumed by files in the recycle bin, in bytes. Read-only.",
          "type": "integer"
        },
        "remaining": {
          "format": "int64",
          "description": "Total space remaining before reaching the quota limit, in bytes. Read-only.",
          "type": "integer"
        },
        "state": {
          "description": "Enumeration value that indicates the state of the storage space. Read-only.",
          "type": "string"
        },
        "total": {
          "format": "int64",
          "description": "Total allowed storage space, in bytes. Read-only.",
          "type": "integer"
        },
        "used": {
          "format": "int64",
          "description": "Total space used, in bytes. Read-only.",
          "type": "integer"
        }
      },
      "example": {
        "deleted": "integer",
        "remaining": "integer",
        "state": "string",
        "total": "integer",
        "used": "integer"
      }
    },
    "microsoft.graph.recentNotebook": {
      "title": "recentNotebook",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The name of the notebook.",
          "type": "string"
        },
        "lastAccessedTime": {
          "format": "date-time",
          "description": "The date and time when the notebook was last modified. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'. Read-only.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "links": {
          "description": "Links for opening the notebook. The oneNoteClientURL link opens the notebook in the OneNote client, if it's installed. The oneNoteWebURL link opens the notebook in OneNote Online."
        },
        "sourceService": {
          "description": "The backend store where the Notebook resides, either OneDriveForBusiness or OneDrive."
        }
      },
      "example": {
        "displayName": "string",
        "lastAccessedTime": "string (timestamp)",
        "links": {
          "@odata.type": "microsoft.graph.recentNotebookLinks"
        },
        "sourceService": {
          "@odata.type": "microsoft.graph.onenoteSourceService"
        }
      }
    },
    "microsoft.graph.recentNotebookLinks": {
      "title": "recentNotebookLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": {
          "description": "Opens the notebook in the OneNote native client if it's installed."
        },
        "oneNoteWebUrl": {
          "description": "Opens the notebook in OneNote Online."
        }
      },
      "example": {
        "oneNoteClientUrl": {
          "@odata.type": "microsoft.graph.externalLink"
        },
        "oneNoteWebUrl": {
          "@odata.type": "microsoft.graph.externalLink"
        }
      }
    },
    "microsoft.graph.recurrencePattern": {
      "title": "recurrencePattern",
      "type": "object",
      "properties": {
        "dayOfMonth": {
          "format": "int32",
          "description": "The day of the month on which the event occurs. Required if type is absoluteMonthly or absoluteYearly.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "daysOfWeek": {
          "description": "A collection of the days of the week on which the event occurs. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. If type is relativeMonthly or relativeYearly, and daysOfWeek specifies more than one day, the event falls on the first day that satisfies the pattern.  Required if type is weekly, relativeMonthly, or relativeYearly.",
          "type": "array",
          "items": { }
        },
        "firstDayOfWeek": {
          "description": "The first day of the week. The possible values are: sunday, monday, tuesday, wednesday, thursday, friday, saturday. Default is sunday. Required if type is weekly."
        },
        "index": {
          "description": "Specifies on which instance of the allowed days specified in daysOfsWeek the event occurs, counted from the first instance in the month. The possible values are: first, second, third, fourth, last. Default is first. Optional and used if type is relativeMonthly or relativeYearly."
        },
        "interval": {
          "format": "int32",
          "description": "The number of units between occurrences, where units can be in days, weeks, months, or years, depending on the type. Required.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "description": "The month in which the event occurs.  This is a number from 1 to 12.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "type": {
          "description": "The recurrence pattern type: daily, weekly, absoluteMonthly, relativeMonthly, absoluteYearly, relativeYearly. Required."
        }
      },
      "example": {
        "dayOfMonth": "integer",
        "daysOfWeek": [
          {
            "@odata.type": "microsoft.graph.dayOfWeek"
          }
        ],
        "firstDayOfWeek": {
          "@odata.type": "microsoft.graph.dayOfWeek"
        },
        "index": {
          "@odata.type": "microsoft.graph.weekIndex"
        },
        "interval": "integer",
        "month": "integer",
        "type": {
          "@odata.type": "microsoft.graph.recurrencePatternType"
        }
      }
    },
    "microsoft.graph.recurrenceRange": {
      "title": "recurrenceRange",
      "type": "object",
      "properties": {
        "endDate": {
          "format": "date",
          "description": "The date to stop applying the recurrence pattern. Depending on the recurrence pattern of the event, the last occurrence of the meeting may not be this date. Required if type is endDate.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "numberOfOccurrences": {
          "format": "int32",
          "description": "The number of times to repeat the event. Required and must be positive if type is numbered.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "recurrenceTimeZone": {
          "description": "Time zone for the startDate and endDate properties. Optional. If not specified, the time zone of the event is used.",
          "type": "string"
        },
        "startDate": {
          "format": "date",
          "description": "The date to start applying the recurrence pattern. The first occurrence of the meeting may be this date or later, depending on the recurrence pattern of the event. Must be the same value as the start property of the recurring event. Required.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "type": {
          "description": "The recurrence range. The possible values are: endDate, noEnd, numbered. Required."
        }
      },
      "example": {
        "endDate": "string (timestamp)",
        "numberOfOccurrences": "integer",
        "recurrenceTimeZone": "string",
        "startDate": "string (timestamp)",
        "type": {
          "@odata.type": "microsoft.graph.recurrenceRangeType"
        }
      }
    },
    "microsoft.graph.registryKeyState": {
      "title": "registryKeyState",
      "type": "object",
      "properties": {
        "hive": {
          "description": "A Windows registry hive : HKEY_CURRENT_CONFIG HKEY_CURRENT_USER HKEY_LOCAL_MACHINE/SAM HKEY_LOCAL_MACHINE/Security HKEY_LOCAL_MACHINE/Software HKEY_LOCAL_MACHINE/System HKEY_USERS/.Default. Possible values are: unknown, currentConfig, currentUser, localMachineSam, localMachineSamSoftware, localMachineSystem, usersDefault."
        },
        "key": {
          "description": "Current (i.e. changed) registry key (excludes HIVE).",
          "type": "string"
        },
        "oldKey": {
          "description": "Previous (i.e. before changed) registry key (excludes HIVE).",
          "type": "string"
        },
        "oldValueData": {
          "description": "Previous (i.e. before changed) registry key value data (contents).",
          "type": "string"
        },
        "oldValueName": {
          "description": "Previous (i.e. before changed) registry key value name.",
          "type": "string"
        },
        "operation": {
          "description": "Operation that changed the registry key name and/or value. Possible values are: unknown, create, modify, delete."
        },
        "processId": {
          "format": "int32",
          "description": "Process ID (PID) of the process that modified the registry key (process details will appear in the alert 'processes' collection).",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "valueData": {
          "description": "Current (i.e. changed) registry key value data (contents).",
          "type": "string"
        },
        "valueName": {
          "description": "Current (i.e. changed) registry key value name",
          "type": "string"
        },
        "valueType": {
          "description": "Registry key value type REG_BINARY REG_DWORD REG_DWORD_LITTLE_ENDIAN REG_DWORD_BIG_ENDIANREG_EXPAND_SZ REG_LINK REG_MULTI_SZ REG_NONE REG_QWORD REG_QWORD_LITTLE_ENDIAN REG_SZ Possible values are: unknown, binary, dword, dwordLittleEndian, dwordBigEndian, expandSz, link, multiSz, none, qword, qwordlittleEndian, sz."
        }
      },
      "example": {
        "hive": {
          "@odata.type": "microsoft.graph.registryHive"
        },
        "key": "string",
        "oldKey": "string",
        "oldValueData": "string",
        "oldValueName": "string",
        "operation": {
          "@odata.type": "microsoft.graph.registryOperation"
        },
        "processId": "integer",
        "valueData": "string",
        "valueName": "string",
        "valueType": {
          "@odata.type": "microsoft.graph.registryValueType"
        }
      }
    },
    "microsoft.graph.reminder": {
      "title": "reminder",
      "type": "object",
      "properties": {
        "changeKey": {
          "description": "Identifies the version of the reminder. Every time the reminder is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object.",
          "type": "string"
        },
        "eventEndTime": {
          "description": "The date, time and time zone that the event ends."
        },
        "eventId": {
          "description": "The unique ID of the event. Read only.",
          "type": "string"
        },
        "eventLocation": {
          "description": "The location of the event."
        },
        "eventStartTime": {
          "description": "The date, time, and time zone that the event starts."
        },
        "eventSubject": {
          "description": "The text of the event's subject line.",
          "type": "string"
        },
        "eventWebLink": {
          "description": "The URL to open the event in Outlook on the web.The event will open in the browser if you are logged in to your mailbox via Outlook on the web. You will be prompted to login if you are not already logged in with the browser.This URL can be accessed from within an iFrame.",
          "type": "string"
        },
        "reminderFireTime": {
          "description": "The date, time, and time zone that the reminder is set to occur."
        }
      },
      "example": {
        "changeKey": "string",
        "eventEndTime": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        },
        "eventId": "string",
        "eventLocation": {
          "@odata.type": "microsoft.graph.location"
        },
        "eventStartTime": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        },
        "eventSubject": "string",
        "eventWebLink": "string",
        "reminderFireTime": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        }
      }
    },
    "microsoft.graph.remoteItem": {
      "title": "remoteItem",
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique identifier for the remote item in its drive. Read-only.",
          "type": "string"
        },
        "createdBy": {
          "description": "Identity of the user, device, and application which created the item. Read-only."
        },
        "createdDateTime": {
          "format": "date-time",
          "description": "Date and time of item creation. Read-only.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "file": {
          "description": "Indicates that the remote item is a file. Read-only."
        },
        "fileSystemInfo": {
          "description": "Information about the remote item from the local file system. Read-only."
        },
        "folder": {
          "description": "Indicates that the remote item is a folder. Read-only."
        },
        "lastModifiedBy": {
          "description": "Identity of the user, device, and application which last modified the item. Read-only."
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "description": "Date and time the item was last modified. Read-only.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "name": {
          "description": "Optional. Filename of the remote item. Read-only.",
          "type": "string"
        },
        "package": {
          "description": "If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only."
        },
        "parentReference": {
          "description": "Properties of the parent of the remote item. Read-only."
        },
        "shared": {
          "description": "Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only."
        },
        "sharepointIds": {
          "description": "Provides interop between items in OneDrive for Business and SharePoint with the full set of item identifiers. Read-only."
        },
        "specialFolder": {
          "description": "If the current item is also available as a special folder, this facet is returned. Read-only."
        },
        "size": {
          "format": "int64",
          "description": "Size of the remote item. Read-only.",
          "type": "integer"
        },
        "webDavUrl": {
          "description": "DAV compatible URL for the item.",
          "type": "string"
        },
        "webUrl": {
          "description": "URL that displays the resource in the browser. Read-only.",
          "type": "string"
        }
      },
      "example": {
        "id": "string",
        "createdBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "createdDateTime": "string (timestamp)",
        "file": {
          "@odata.type": "microsoft.graph.file"
        },
        "fileSystemInfo": {
          "@odata.type": "microsoft.graph.fileSystemInfo"
        },
        "folder": {
          "@odata.type": "microsoft.graph.folder"
        },
        "lastModifiedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "lastModifiedDateTime": "string (timestamp)",
        "name": "string",
        "package": {
          "@odata.type": "microsoft.graph.package"
        },
        "parentReference": {
          "@odata.type": "microsoft.graph.itemReference"
        },
        "shared": {
          "@odata.type": "microsoft.graph.shared"
        },
        "sharepointIds": {
          "@odata.type": "microsoft.graph.sharepointIds"
        },
        "specialFolder": {
          "@odata.type": "microsoft.graph.specialFolder"
        },
        "size": "integer",
        "webDavUrl": "string",
        "webUrl": "string"
      }
    },
    "microsoft.graph.responseStatus": {
      "title": "responseStatus",
      "type": "object",
      "properties": {
        "response": {
          "description": "The response type. The possible values are: None, Organizer, TentativelyAccepted, Accepted, Declined, NotResponded."
        },
        "time": {
          "format": "date-time",
          "description": "The date and time that the response was returned. It uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      },
      "example": {
        "response": {
          "@odata.type": "microsoft.graph.responseType"
        },
        "time": "string (timestamp)"
      }
    },
    "microsoft.graph.root": {
      "title": "root",
      "type": "object"
    },
    "microsoft.graph.scoredEmailAddress": {
      "title": "scoredEmailAddress",
      "type": "object",
      "properties": {
        "address": {
          "description": "The email address.",
          "type": "string"
        },
        "relevanceScore": {
          "format": "double",
          "description": "The relevance score of the email address. A relevance score is used as a sort key, in relation to the other returned results. A higher relevance score value corresponds to a more relevant result. Relevance is determined by the user’s communication and collaboration patterns and business relationships."
        }
      },
      "example": {
        "address": "string",
        "relevanceScore": "double"
      }
    },
    "microsoft.graph.searchResult": {
      "title": "searchResult",
      "type": "object",
      "properties": {
        "onClickTelemetryUrl": {
          "description": "A callback URL that can be used to record telemetry information. The application should issue a GET on this URL if the user interacts with this item to improve the quality of results.",
          "type": "string"
        }
      },
      "example": {
        "onClickTelemetryUrl": "string"
      }
    },
    "microsoft.graph.sectionLinks": {
      "title": "sectionLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": {
          "description": "Opens the section in the OneNote native client if it's installed."
        },
        "oneNoteWebUrl": {
          "description": "Opens the section in OneNote Online."
        }
      },
      "example": {
        "oneNoteClientUrl": {
          "@odata.type": "microsoft.graph.externalLink"
        },
        "oneNoteWebUrl": {
          "@odata.type": "microsoft.graph.externalLink"
        }
      }
    },
    "microsoft.graph.securityVendorInformation": {
      "title": "securityVendorInformation",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Specific provider (product/service - not vendor company); for example, WindowsDefenderATP.",
          "type": "string"
        },
        "providerVersion": {
          "description": "Version of the provider or subprovider, if it exists, that generated the alert.",
          "type": "string"
        },
        "subProvider": {
          "description": "Specific subprovider (under aggregating provider); for example, WindowsDefenderATP.SmartScreen.",
          "type": "string"
        },
        "vendor": {
          "description": "Name of the alert vendor (for example, Microsoft, Dell, FireEye).",
          "type": "string"
        }
      },
      "example": {
        "provider": "string",
        "providerVersion": "string",
        "subProvider": "string",
        "vendor": "string"
      }
    },
    "microsoft.graph.servicePlanInfo": {
      "title": "servicePlanInfo",
      "type": "object",
      "properties": {
        "appliesTo": {
          "description": "The object the service plan can be assigned to. Possible values:'User' - service plan can be assigned to individual users.'Company' - service plan can be assigned to the entire tenant.",
          "type": "string"
        },
        "provisioningStatus": {
          "description": "The provisioning status of the service plan. Possible values:'Success' - Service is fully provisioned.'Disabled' - Service has been disabled.'PendingInput' - Service is not yet provisioned; awaiting service confirmation.'PendingActivation' - Service is provisioned but requires explicit activation by administrator (for example, Intune_O365 service plan)'PendingProvisioning' - Microsoft has added a new service to the product SKU and it has not been activated in the tenant, yet.",
          "type": "string"
        },
        "servicePlanId": {
          "format": "uuid",
          "description": "The unique identifier of the service plan.",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "servicePlanName": {
          "description": "The name of the service plan.",
          "type": "string"
        }
      },
      "example": {
        "appliesTo": "string",
        "provisioningStatus": "string",
        "servicePlanId": "string",
        "servicePlanName": "string"
      }
    },
    "microsoft.graph.settingTemplateValue": {
      "title": "settingTemplateValue",
      "type": "object",
      "properties": {
        "defaultValue": {
          "description": "Default value for the setting.",
          "type": "string"
        },
        "description": {
          "description": "Description of the setting.",
          "type": "string"
        },
        "name": {
          "description": "Name of the setting.",
          "type": "string"
        },
        "type": {
          "description": "Type of the setting.",
          "type": "string"
        }
      },
      "example": {
        "defaultValue": "string",
        "description": "string",
        "name": "string",
        "type": "string"
      }
    },
    "microsoft.graph.settingValue": {
      "title": "settingValue",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the setting (as defined by the groupSettingTemplate).",
          "type": "string"
        },
        "value": {
          "description": "Value of the setting.",
          "type": "string"
        }
      },
      "example": {
        "name": "string",
        "value": "string"
      }
    },
    "microsoft.graph.shared": {
      "title": "shared",
      "type": "object",
      "properties": {
        "owner": {
          "description": "The identity of the owner of the shared item. Read-only."
        },
        "scope": {
          "description": "Indicates the scope of how the item is shared: anonymous, organization, or users. Read-only.",
          "type": "string"
        },
        "sharedBy": {
          "description": "The identity of the user who shared the item. Read-only."
        },
        "sharedDateTime": {
          "format": "date-time",
          "description": "The UTC date and time when the item was shared. Read-only.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      },
      "example": {
        "owner": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "scope": "string",
        "sharedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "sharedDateTime": "string (timestamp)"
      }
    },
    "microsoft.graph.sharepointIds": {
      "title": "sharepointIds",
      "type": "object",
      "properties": {
        "listId": {
          "description": "The unique identifier (guid) for the item's list in SharePoint.",
          "type": "string"
        },
        "listItemId": {
          "description": "An integer identifier for the item within the containing list.",
          "type": "string"
        },
        "listItemUniqueId": {
          "description": "The unique identifier (guid) for the item within OneDrive for Business or a SharePoint site.",
          "type": "string"
        },
        "siteId": {
          "description": "The unique identifier (guid) for the item's site collection (SPSite).",
          "type": "string"
        },
        "siteUrl": {
          "description": "The SharePoint URL for the site that contains the item.",
          "type": "string"
        },
        "webId": {
          "description": "The unique identifier (guid) for the item's site (SPWeb).",
          "type": "string"
        }
      },
      "example": {
        "listId": "string",
        "listItemId": "string",
        "listItemUniqueId": "string",
        "siteId": "string",
        "siteUrl": "string",
        "webId": "string"
      }
    },
    "microsoft.graph.sharingInvitation": {
      "title": "sharingInvitation",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address provided for the recipient of the sharing invitation. Read-only.",
          "type": "string"
        },
        "invitedBy": {
          "description": "Provides information about who sent the invitation that created this permission, if that information is available. Read-only."
        },
        "signInRequired": {
          "description": "If true the recipient of the invitation needs to sign in in order to access the shared item. Read-only.",
          "type": "boolean"
        }
      },
      "example": {
        "email": "string",
        "invitedBy": {
          "@odata.type": "microsoft.graph.identitySet"
        },
        "signInRequired": true
      }
    },
    "microsoft.graph.sharingLink": {
      "title": "sharingLink",
      "type": "object",
      "properties": {
        "application": {
          "description": "The app the link is associated with."
        },
        "type": {
          "description": "The type of the link created.",
          "type": "string"
        },
        "scope": {
          "description": "The scope of the link represented by this permission. Value anonymous indicates the link is usable by anyone, organization indicates the link is only usable for users signed into the same tenant.",
          "type": "string"
        },
        "webHtml": {
          "description": "For embed links, this property contains the HTML code for an <iframe> element that will embed the item in a webpage.",
          "type": "string"
        },
        "webUrl": {
          "description": "A URL that opens the item in the browser on the OneDrive website.",
          "type": "string"
        }
      },
      "example": {
        "application": {
          "@odata.type": "microsoft.graph.identity"
        },
        "type": "string",
        "scope": "string",
        "webHtml": "string",
        "webUrl": "string"
      }
    },
    "microsoft.graph.siteCollection": {
      "title": "siteCollection",
      "type": "object",
      "properties": {
        "hostname": {
          "description": "The hostname for the site collection. Read-only.",
          "type": "string"
        },
        "root": {
          "description": "If present, indicates that this is a root site collection in SharePoint. Read-only."
        }
      },
      "example": {
        "hostname": "string",
        "root": {
          "@odata.type": "microsoft.graph.root"
        }
      }
    },
    "microsoft.graph.sizeRange": {
      "title": "sizeRange",
      "type": "object",
      "properties": {
        "maximumSize": {
          "format": "int32",
          "description": "The maximum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "minimumSize": {
          "format": "int32",
          "description": "The minimum size (in kilobytes) that an incoming message must have in order for a condition or exception to apply.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "maximumSize": "integer",
        "minimumSize": "integer"
      }
    },
    "microsoft.graph.workbookSortField": {
      "title": "workbookSortField",
      "type": "object",
      "properties": {
        "ascending": {
          "description": "Represents whether the sorting is done in an ascending fashion.",
          "type": "boolean"
        },
        "color": {
          "description": "Represents the color that is the target of the condition if the sorting is on font or cell color.",
          "type": "string"
        },
        "dataOption": {
          "description": "Represents additional sorting options for this field. The possible values are: Normal, TextAsNumber.",
          "type": "string"
        },
        "key": {
          "format": "int32",
          "description": "Represents the column (or row, depending on the sort orientation) that the condition is on. Represented as an offset from the first column (or row).",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "sortOn": {
          "description": "Represents the type of sorting of this condition. The possible values are: Value, CellColor, FontColor, Icon.",
          "type": "string"
        },
        "icon": {
          "description": "Represents the icon that is the target of the condition if the sorting is on the cell's icon."
        }
      },
      "example": {
        "ascending": true,
        "color": "string",
        "dataOption": "string",
        "key": "integer",
        "sortOn": "string",
        "icon": {
          "@odata.type": "microsoft.graph.workbookIcon"
        }
      }
    },
    "microsoft.graph.specialFolder": {
      "title": "specialFolder",
      "type": "object",
      "properties": {
        "name": {
          "description": "The unique identifier for this item in the /drive/special collection",
          "type": "string"
        }
      },
      "example": {
        "name": "string"
      }
    },
    "microsoft.graph.systemFacet": {
      "title": "systemFacet",
      "type": "object"
    },
    "microsoft.graph.textColumn": {
      "title": "textColumn",
      "type": "object",
      "properties": {
        "allowMultipleLines": {
          "description": "Whether to allow multiple lines of text.",
          "type": "boolean"
        },
        "appendChangesToExistingText": {
          "description": "Whether updates to this column should replace existing text, or append to it.",
          "type": "boolean"
        },
        "linesForEditing": {
          "format": "int32",
          "description": "The size of the text box.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "maxLength": {
          "format": "int32",
          "description": "The maximum number of characters for the value.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "textType": {
          "description": "The type of text being stored. Must be one of plain or richText",
          "type": "string"
        }
      },
      "example": {
        "allowMultipleLines": true,
        "appendChangesToExistingText": true,
        "linesForEditing": "integer",
        "maxLength": "integer",
        "textType": "string"
      }
    },
    "microsoft.graph.thumbnail": {
      "title": "thumbnail",
      "type": "object",
      "properties": {
        "height": {
          "format": "int32",
          "description": "The height of the thumbnail, in pixels.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "sourceItemId": {
          "description": "The unique identifier of the item that provided the thumbnail. This is only available when a folder thumbnail is requested.",
          "type": "string"
        },
        "url": {
          "description": "The URL used to fetch the thumbnail content.",
          "type": "string"
        },
        "width": {
          "format": "int32",
          "description": "The width of the thumbnail, in pixels.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "content": {
          "format": "base64url",
          "description": "The content stream for the thumbnail.",
          "type": "string"
        }
      },
      "example": {
        "height": "integer",
        "sourceItemId": "string",
        "url": "string",
        "width": "integer",
        "content": "string"
      }
    },
    "microsoft.graph.timeConstraint": {
      "title": "timeConstraint",
      "type": "object",
      "properties": {
        "activityDomain": {
          "description": "The nature of the activity, optional. The possible values are: work, personal, unrestricted, or unknown."
        },
        "timeslots": {
          "description": "An array of time periods.",
          "type": "array",
          "items": { }
        }
      },
      "example": {
        "activityDomain": {
          "@odata.type": "microsoft.graph.activityDomain"
        },
        "timeslots": [
          {
            "@odata.type": "microsoft.graph.timeSlot"
          }
        ]
      }
    },
    "microsoft.graph.timeSlot": {
      "title": "timeSlot",
      "type": "object",
      "properties": {
        "end": {
          "description": "The time a period begins."
        },
        "start": {
          "description": "The time the period ends."
        }
      },
      "example": {
        "end": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        },
        "start": {
          "@odata.type": "microsoft.graph.dateTimeTimeZone"
        }
      }
    },
    "microsoft.graph.timeStamp": {
      "title": "timeStamp",
      "type": "object",
      "properties": {
        "date": {
          "format": "date",
          "description": "The date portion of the timestamp.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "time": {
          "format": "time",
          "description": "The time portion of the timestamp.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        },
        "timeZone": {
          "description": "The timezone portion of the timestamp, which is one of the 24 longitudinal areas in the world.",
          "type": "string"
        }
      },
      "example": {
        "date": "string (timestamp)",
        "time": "string (timestamp)",
        "timeZone": "string"
      }
    },
    "microsoft.graph.timeZoneInformation": {
      "title": "timeZoneInformation",
      "type": "object",
      "properties": {
        "alias": {
          "description": "An identifier for the time zone.",
          "type": "string"
        },
        "displayName": {
          "description": "A display string that represents the time zone.",
          "type": "string"
        }
      },
      "example": {
        "alias": "string",
        "displayName": "string"
      }
    },
    "microsoft.graph.uploadSession": {
      "title": "uploadSession",
      "type": "object",
      "properties": {
        "uploadUrl": {
          "description": "The URL endpoint that accepts PUT requests for byte ranges of the file.",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "description": "The date and time in UTC that the upload session will expire. The complete file must be uploaded before this expiration time is reached.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "nextExpectedRanges": {
          "description": "A collection of byte ranges that the server is missing for the file. These ranges are zero indexed and of the format 'start-end' (e.g. '0-26' to indicate the first 27 bytes of the file).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "example": {
        "uploadUrl": "string",
        "expirationDateTime": "string (timestamp)",
        "nextExpectedRanges": [
          "string"
        ]
      }
    },
    "microsoft.graph.userSecurityState": {
      "title": "userSecurityState",
      "type": "object",
      "properties": {
        "aadUserId": {
          "description": "AAD User object identifier (GUID) - represents the physical/multi-account user entity.",
          "type": "string"
        },
        "accountName": {
          "description": "Account name of user account (without Active Directory domain or DNS domain) - (also called mailNickName).",
          "type": "string"
        },
        "domainName": {
          "description": "NetBIOS/Active Directory domain of user account (that is, domain/account format).",
          "type": "string"
        },
        "emailRole": {
          "description": "For email-related alerts - user account's email 'role'. Possible values are: unknown, sender, recipient."
        },
        "isVpn": {
          "description": "Indicates whether the user logged on through a VPN.",
          "type": "boolean"
        },
        "logonDateTime": {
          "format": "date-time",
          "description": "Time at which the sign-in occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'.",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "logonId": {
          "description": "User sign-in ID.",
          "type": "string"
        },
        "logonIp": {
          "description": "IP Address the sign-in request originated from.",
          "type": "string"
        },
        "logonLocation": {
          "description": "Location (by IP address mapping) associated with a user sign-in event by this user.",
          "type": "string"
        },
        "logonType": {
          "description": "Method of user sign in. Possible values are: unknown, interactive, remoteInteractive, network, batch, service."
        },
        "onPremisesSecurityIdentifier": {
          "description": "Active Directory (on-premises) Security Identifier (SID) of the user.",
          "type": "string"
        },
        "riskScore": {
          "description": "Provider-generated/calculated risk score of the user account. Recommended value range of 0-1, which equates to a percentage.",
          "type": "string"
        },
        "userAccountType": {
          "description": "User account type (group membership), per Windows definition. Possible values are: unknown, standard, power, administrator."
        },
        "userPrincipalName": {
          "description": "User sign-in name - internet format: (user account name)@(user account DNS domain name).",
          "type": "string"
        }
      },
      "example": {
        "aadUserId": "string",
        "accountName": "string",
        "domainName": "string",
        "emailRole": {
          "@odata.type": "microsoft.graph.emailRole"
        },
        "isVpn": true,
        "logonDateTime": "string (timestamp)",
        "logonId": "string",
        "logonIp": "string",
        "logonLocation": "string",
        "logonType": {
          "@odata.type": "microsoft.graph.logonType"
        },
        "onPremisesSecurityIdentifier": "string",
        "riskScore": "string",
        "userAccountType": {
          "@odata.type": "microsoft.graph.userAccountSecurityType"
        },
        "userPrincipalName": "string"
      }
    },
    "microsoft.graph.verifiedDomain": {
      "title": "verifiedDomain",
      "type": "object",
      "properties": {
        "capabilities": {
          "description": "For example, 'Email', 'OfficeCommunicationsOnline'.",
          "type": "string"
        },
        "isDefault": {
          "description": "true if this is the default domain associated with the tenant; otherwise, false.",
          "type": "boolean"
        },
        "isInitial": {
          "description": "true if this is the initial domain associated with the tenant; otherwise, false",
          "type": "boolean"
        },
        "name": {
          "description": "The domain name; for example, 'contoso.onmicrosoft.com'",
          "type": "string"
        },
        "type": {
          "description": "For example, 'Managed'.",
          "type": "string"
        }
      },
      "example": {
        "capabilities": "string",
        "isDefault": true,
        "isInitial": true,
        "name": "string",
        "type": "string"
      }
    },
    "microsoft.graph.video": {
      "title": "video",
      "type": "object",
      "properties": {
        "audioBitsPerSample": {
          "format": "int32",
          "description": "Number of audio bits per sample.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "audioChannels": {
          "format": "int32",
          "description": "Number of audio channels.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "audioFormat": {
          "description": "Name of the audio format (AAC, MP3, etc.).",
          "type": "string"
        },
        "audioSamplesPerSecond": {
          "format": "int32",
          "description": "Number of audio samples per second.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "bitrate": {
          "format": "int32",
          "description": "Bit rate of the video in bits per second.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "duration": {
          "format": "int64",
          "description": "Duration of the file in milliseconds.",
          "type": "integer"
        },
        "fourCC": {
          "description": "'Four character code' name of the video format.",
          "type": "string"
        },
        "frameRate": {
          "format": "double",
          "description": "Frame rate of the video."
        },
        "height": {
          "format": "int32",
          "description": "Height of the video, in pixels.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "description": "Width of the video, in pixels.",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      },
      "example": {
        "audioBitsPerSample": "integer",
        "audioChannels": "integer",
        "audioFormat": "string",
        "audioSamplesPerSecond": "integer",
        "bitrate": "integer",
        "duration": "integer",
        "fourCC": "string",
        "frameRate": "double",
        "height": "integer",
        "width": "integer"
      }
    },
    "microsoft.graph.vulnerabilityState": {
      "title": "vulnerabilityState",
      "type": "object",
      "properties": {
        "cve": {
          "description": "Common Vulnerabilities and Exposures (CVE) for the vulnerability.",
          "type": "string"
        },
        "severity": {
          "description": "Base Common Vulnerability Scoring System (CVSS) severity score for this vulnerability.",
          "type": "string"
        },
        "wasRunning": {
          "description": "Indicates whether the detected vulnerability (file) was running at the time of detection or was the file detected at rest on the disk.",
          "type": "boolean"
        }
      },
      "example": {
        "cve": "string",
        "severity": "string",
        "wasRunning": true
      }
    },
    "microsoft.graph.website": {
      "title": "website",
      "type": "object",
      "properties": {
        "type": {
          "description": "The possible values are: other, home, work, blog, profile."
        },
        "address": {
          "description": "The URL of the website.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the web site.",
          "type": "string"
        }
      },
      "example": {
        "type": {
          "@odata.type": "microsoft.graph.websiteType"
        },
        "address": "string",
        "displayName": "string"
      }
    },
    "microsoft.graph.workbookSessionInfo": {
      "title": "workbookSessionInfo",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the workbook session.",
          "type": "string"
        },
        "persistChanges": {
          "description": "true for persistent session. false for non-persistent session (view mode)",
          "type": "boolean"
        }
      },
      "example": {
        "id": "string",
        "persistChanges": true
      }
    },
    "microsoft.graph.workingHours": {
      "title": "workingHours",
      "type": "object",
      "properties": {
        "daysOfWeek": {
          "description": "The days of the week on which the user works.",
          "type": "array",
          "items": { }
        },
        "startTime": {
          "format": "time",
          "description": "The time of the day that the user starts working.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        },
        "endTime": {
          "format": "time",
          "description": "The time of the day that the user stops working.",
          "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?$",
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone to which the working hours apply."
        }
      },
      "example": {
        "daysOfWeek": [
          {
            "@odata.type": "microsoft.graph.dayOfWeek"
          }
        ],
        "startTime": "string (timestamp)",
        "endTime": "string (timestamp)",
        "timeZone": {
          "@odata.type": "microsoft.graph.timeZoneBase"
        }
      }
    },
    "microsoft.graph.workbookWorksheetProtectionOptions": {
      "title": "workbookWorksheetProtectionOptions",
      "type": "object",
      "properties": {
        "allowAutoFilter": {
          "description": "Represents the worksheet protection option of allowing using auto filter feature.",
          "type": "boolean"
        },
        "allowDeleteColumns": {
          "description": "Represents the worksheet protection option of allowing deleting columns.",
          "type": "boolean"
        },
        "allowDeleteRows": {
          "description": "Represents the worksheet protection option of allowing deleting rows.",
          "type": "boolean"
        },
        "allowFormatCells": {
          "description": "Represents the worksheet protection option of allowing formatting cells.",
          "type": "boolean"
        },
        "allowFormatColumns": {
          "description": "Represents the worksheet protection option of allowing formatting columns.",
          "type": "boolean"
        },
        "allowFormatRows": {
          "description": "Represents the worksheet protection option of allowing formatting rows.",
          "type": "boolean"
        },
        "allowInsertColumns": {
          "description": "Represents the worksheet protection option of allowing inserting columns.",
          "type": "boolean"
        },
        "allowInsertHyperlinks": {
          "description": "Represents the worksheet protection option of allowing inserting hyperlinks.",
          "type": "boolean"
        },
        "allowInsertRows": {
          "description": "Represents the worksheet protection option of allowing inserting rows.",
          "type": "boolean"
        },
        "allowPivotTables": {
          "description": "Represents the worksheet protection option of allowing using pivot table feature.",
          "type": "boolean"
        },
        "allowSort": {
          "description": "Represents the worksheet protection option of allowing using sort feature.",
          "type": "boolean"
        }
      },
      "example": {
        "allowAutoFilter": true,
        "allowDeleteColumns": true,
        "allowDeleteRows": true,
        "allowFormatCells": true,
        "allowFormatColumns": true,
        "allowFormatRows": true,
        "allowInsertColumns": true,
        "allowInsertHyperlinks": true,
        "allowInsertRows": true,
        "allowPivotTables": true,
        "allowSort": true
      }
    },
    "microsoft.graph.timeZoneStandard": {
      "title": "timeZoneStandard",
      "enum": [
        "windows",
        "iana"
      ],
      "type": "string"
    },
    "microsoft.graph.freeBusyStatus": {
      "title": "freeBusyStatus",
      "enum": [
        "free",
        "tentative",
        "busy",
        "oof",
        "workingElsewhere",
        "unknown"
      ],
      "type": "string"
    },
    "microsoft.graph.attendeeType": {
      "title": "attendeeType",
      "enum": [
        "required",
        "optional",
        "resource"
      ],
      "type": "string"
    },
    "microsoft.graph.externalAudienceScope": {
      "title": "externalAudienceScope",
      "enum": [
        "none",
        "contactsOnly",
        "all"
      ],
      "type": "string"
    },
    "microsoft.graph.automaticRepliesStatus": {
      "title": "automaticRepliesStatus",
      "enum": [
        "disabled",
        "alwaysEnabled",
        "scheduled"
      ],
      "type": "string"
    },
    "microsoft.graph.calendarColor": {
      "title": "calendarColor",
      "enum": [
        "auto",
        "lightBlue",
        "lightGreen",
        "lightOrange",
        "lightGray",
        "lightYellow",
        "lightTeal",
        "lightPink",
        "lightBrown",
        "lightRed",
        "maxColor"
      ],
      "type": "string"
    },
    "microsoft.graph.educationExternalSource": {
      "title": "educationExternalSource",
      "enum": [
        "sis",
        "manual",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.educationGender": {
      "title": "educationGender",
      "enum": [
        "female",
        "male",
        "other",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.eventType": {
      "title": "eventType",
      "enum": [
        "singleInstance",
        "occurrence",
        "exception",
        "seriesMaster"
      ],
      "type": "string"
    },
    "microsoft.graph.sensitivity": {
      "title": "sensitivity",
      "enum": [
        "normal",
        "personal",
        "private",
        "confidential"
      ],
      "type": "string"
    },
    "microsoft.graph.importance": {
      "title": "importance",
      "enum": [
        "low",
        "normal",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.educationUserRole": {
      "title": "educationUserRole",
      "enum": [
        "student",
        "teacher",
        "none",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.meetingMessageType": {
      "title": "meetingMessageType",
      "enum": [
        "none",
        "meetingRequest",
        "meetingCancelled",
        "meetingAccepted",
        "meetingTentativelyAccepted",
        "meetingDeclined"
      ],
      "type": "string"
    },
    "microsoft.graph.followupFlagStatus": {
      "title": "followupFlagStatus",
      "enum": [
        "notFlagged",
        "complete",
        "flagged"
      ],
      "type": "string"
    },
    "microsoft.graph.inferenceClassificationType": {
      "title": "inferenceClassificationType",
      "enum": [
        "focused",
        "other"
      ],
      "type": "string"
    },
    "microsoft.graph.iosNotificationAlertType": {
      "title": "iosNotificationAlertType",
      "enum": [
        "deviceDefault",
        "banner",
        "modal",
        "none"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceEnrollmentFailureReason": {
      "title": "deviceEnrollmentFailureReason",
      "enum": [
        "unknown",
        "authentication",
        "authorization",
        "accountValidation",
        "userValidation",
        "deviceNotSupported",
        "inMaintenance",
        "badRequest",
        "featureNotSupported",
        "enrollmentRestrictionsEnforced",
        "clientDisconnected",
        "userAbandonment"
      ],
      "type": "string"
    },
    "microsoft.graph.bodyType": {
      "title": "bodyType",
      "enum": [
        "text",
        "html"
      ],
      "type": "string"
    },
    "microsoft.graph.locationType": {
      "title": "locationType",
      "enum": [
        "default",
        "conferenceRoom",
        "homeAddress",
        "businessAddress",
        "geoCoordinates",
        "streetAddress",
        "hotel",
        "restaurant",
        "localBusiness",
        "postalAddress"
      ],
      "type": "string"
    },
    "microsoft.graph.locationUniqueIdType": {
      "title": "locationUniqueIdType",
      "enum": [
        "unknown",
        "locationStore",
        "directory",
        "private",
        "bing"
      ],
      "type": "string"
    },
    "microsoft.graph.messageActionFlag": {
      "title": "messageActionFlag",
      "enum": [
        "any",
        "call",
        "doNotForward",
        "followUp",
        "fyi",
        "forward",
        "noResponseNecessary",
        "read",
        "reply",
        "replyToAll",
        "review"
      ],
      "type": "string"
    },
    "microsoft.graph.onenoteUserRole": {
      "title": "onenoteUserRole",
      "enum": [
        "Owner",
        "Contributor",
        "Reader",
        "None"
      ],
      "type": "string"
    },
    "microsoft.graph.operationStatus": {
      "title": "operationStatus",
      "enum": [
        "NotStarted",
        "Running",
        "Completed",
        "Failed"
      ],
      "type": "string"
    },
    "microsoft.graph.onenotePatchActionType": {
      "title": "onenotePatchActionType",
      "enum": [
        "Replace",
        "Append",
        "Delete",
        "Insert",
        "Prepend"
      ],
      "type": "string"
    },
    "microsoft.graph.onenotePatchInsertPosition": {
      "title": "onenotePatchInsertPosition",
      "enum": [
        "After",
        "Before"
      ],
      "type": "string"
    },
    "microsoft.graph.phoneType": {
      "title": "phoneType",
      "enum": [
        "home",
        "business",
        "mobile",
        "other",
        "assistant",
        "homeFax",
        "businessFax",
        "otherFax",
        "pager",
        "radio"
      ],
      "type": "string"
    },
    "microsoft.graph.plannerPreviewType": {
      "title": "plannerPreviewType",
      "enum": [
        "automatic",
        "noPreview",
        "checklist",
        "description",
        "reference"
      ],
      "type": "string"
    },
    "microsoft.graph.status": {
      "title": "status",
      "enum": [
        "active",
        "updated",
        "deleted",
        "ignored",
        "unknownFutureValue"
      ],
      "type": "string"
    },
    "microsoft.graph.weekIndex": {
      "title": "weekIndex",
      "enum": [
        "first",
        "second",
        "third",
        "fourth",
        "last"
      ],
      "type": "string"
    },
    "microsoft.graph.dayOfWeek": {
      "title": "dayOfWeek",
      "enum": [
        "sunday",
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday"
      ],
      "type": "string"
    },
    "microsoft.graph.recurrencePatternType": {
      "title": "recurrencePatternType",
      "enum": [
        "daily",
        "weekly",
        "absoluteMonthly",
        "relativeMonthly",
        "absoluteYearly",
        "relativeYearly"
      ],
      "type": "string"
    },
    "microsoft.graph.recurrenceRangeType": {
      "title": "recurrenceRangeType",
      "enum": [
        "endDate",
        "noEnd",
        "numbered"
      ],
      "type": "string"
    },
    "microsoft.graph.onenoteSourceService": {
      "title": "onenoteSourceService",
      "enum": [
        "Unknown",
        "OneDrive",
        "OneDriveForBusiness",
        "OnPremOneDriveForBusiness"
      ],
      "type": "string"
    },
    "microsoft.graph.responseType": {
      "title": "responseType",
      "enum": [
        "none",
        "organizer",
        "tentativelyAccepted",
        "accepted",
        "declined",
        "notResponded"
      ],
      "type": "string"
    },
    "microsoft.graph.activityDomain": {
      "title": "activityDomain",
      "enum": [
        "unknown",
        "work",
        "personal",
        "unrestricted"
      ],
      "type": "string"
    },
    "microsoft.graph.websiteType": {
      "title": "websiteType",
      "enum": [
        "other",
        "home",
        "work",
        "blog",
        "profile"
      ],
      "type": "string"
    },
    "microsoft.graph.categoryColor": {
      "title": "categoryColor",
      "enum": [
        "none",
        "preset0",
        "preset1",
        "preset2",
        "preset3",
        "preset4",
        "preset5",
        "preset6",
        "preset7",
        "preset8",
        "preset9",
        "preset10",
        "preset11",
        "preset12",
        "preset13",
        "preset14",
        "preset15",
        "preset16",
        "preset17",
        "preset18",
        "preset19",
        "preset20",
        "preset21",
        "preset22",
        "preset23",
        "preset24"
      ],
      "type": "string"
    },
    "microsoft.graph.alertFeedback": {
      "title": "alertFeedback",
      "enum": [
        "unknown",
        "truePositive",
        "falsePositive",
        "benignPositive"
      ],
      "type": "string"
    },
    "microsoft.graph.fileHashType": {
      "title": "fileHashType",
      "enum": [
        "unknown",
        "sha1",
        "sha256",
        "md5",
        "authenticodeHash256",
        "lsHash",
        "ctph",
        "peSha1",
        "peSha256"
      ],
      "type": "string"
    },
    "microsoft.graph.connectionDirection": {
      "title": "connectionDirection",
      "enum": [
        "unknown",
        "inbound",
        "outbound"
      ],
      "type": "string"
    },
    "microsoft.graph.connectionStatus": {
      "title": "connectionStatus",
      "enum": [
        "unknown",
        "attempted",
        "succeeded",
        "blocked",
        "failed"
      ],
      "type": "string"
    },
    "microsoft.graph.processIntegrityLevel": {
      "title": "processIntegrityLevel",
      "enum": [
        "unknown",
        "untrusted",
        "low",
        "medium",
        "high",
        "system"
      ],
      "type": "string"
    },
    "microsoft.graph.registryHive": {
      "title": "registryHive",
      "enum": [
        "unknown",
        "currentConfig",
        "currentUser",
        "localMachineSam",
        "localMachineSamSoftware",
        "localMachineSystem",
        "usersDefault"
      ],
      "type": "string"
    },
    "microsoft.graph.registryOperation": {
      "title": "registryOperation",
      "enum": [
        "unknown",
        "create",
        "modify",
        "delete"
      ],
      "type": "string"
    },
    "microsoft.graph.registryValueType": {
      "title": "registryValueType",
      "enum": [
        "unknown",
        "binary",
        "dword",
        "dwordLittleEndian",
        "dwordBigEndian",
        "expandSz",
        "link",
        "multiSz",
        "none",
        "qword",
        "qwordlittleEndian",
        "sz"
      ],
      "type": "string"
    },
    "microsoft.graph.alertSeverity": {
      "title": "alertSeverity",
      "enum": [
        "unknown",
        "informational",
        "low",
        "medium",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.alertStatus": {
      "title": "alertStatus",
      "enum": [
        "unknown",
        "newAlert",
        "inProgress",
        "resolved"
      ],
      "type": "string"
    },
    "microsoft.graph.emailRole": {
      "title": "emailRole",
      "enum": [
        "unknown",
        "sender",
        "recipient"
      ],
      "type": "string"
    },
    "microsoft.graph.logonType": {
      "title": "logonType",
      "enum": [
        "unknown",
        "interactive",
        "remoteInteractive",
        "network",
        "batch",
        "service"
      ],
      "type": "string"
    },
    "microsoft.graph.userAccountSecurityType": {
      "title": "userAccountSecurityType",
      "enum": [
        "unknown",
        "standard",
        "power",
        "administrator"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppAvailability": {
      "title": "managedAppAvailability",
      "enum": [
        "global",
        "lineOfBusiness"
      ],
      "type": "string"
    },
    "microsoft.graph.mdmAppConfigKeyType": {
      "title": "mdmAppConfigKeyType",
      "enum": [
        "stringType",
        "integerType",
        "realType",
        "booleanType",
        "tokenType"
      ],
      "type": "string"
    },
    "microsoft.graph.microsoftStoreForBusinessLicenseType": {
      "title": "microsoftStoreForBusinessLicenseType",
      "enum": [
        "offline",
        "online"
      ],
      "type": "string"
    },
    "microsoft.graph.mobileAppContentFileUploadState": {
      "title": "mobileAppContentFileUploadState",
      "enum": [
        "success",
        "transientError",
        "error",
        "unknown",
        "azureStorageUriRequestSuccess",
        "azureStorageUriRequestPending",
        "azureStorageUriRequestFailed",
        "azureStorageUriRequestTimedOut",
        "azureStorageUriRenewalSuccess",
        "azureStorageUriRenewalPending",
        "azureStorageUriRenewalFailed",
        "azureStorageUriRenewalTimedOut",
        "commitFileSuccess",
        "commitFilePending",
        "commitFileFailed",
        "commitFileTimedOut"
      ],
      "type": "string"
    },
    "microsoft.graph.mobileAppPublishingState": {
      "title": "mobileAppPublishingState",
      "enum": [
        "notPublished",
        "processing",
        "published"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsArchitecture": {
      "title": "windowsArchitecture",
      "enum": [
        "none",
        "x86",
        "x64",
        "arm",
        "neutral"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsDeviceType": {
      "title": "windowsDeviceType",
      "enum": [
        "none",
        "desktop",
        "mobile",
        "holographic",
        "team"
      ],
      "type": "string"
    },
    "microsoft.graph.installState": {
      "title": "installState",
      "enum": [
        "notApplicable",
        "installed",
        "failed",
        "notInstalled",
        "uninstallFailed",
        "unknown"
      ],
      "type": "string"
    },
    "microsoft.graph.androidRequiredPasswordType": {
      "title": "androidRequiredPasswordType",
      "enum": [
        "deviceDefault",
        "alphabetic",
        "alphanumeric",
        "alphanumericWithSymbols",
        "lowSecurityBiometric",
        "numeric",
        "numericComplex",
        "any"
      ],
      "type": "string"
    },
    "microsoft.graph.androidWorkProfileCrossProfileDataSharingType": {
      "title": "androidWorkProfileCrossProfileDataSharingType",
      "enum": [
        "deviceDefault",
        "preventAny",
        "allowPersonalToWork",
        "noRestrictions"
      ],
      "type": "string"
    },
    "microsoft.graph.androidWorkProfileDefaultAppPermissionPolicyType": {
      "title": "androidWorkProfileDefaultAppPermissionPolicyType",
      "enum": [
        "deviceDefault",
        "prompt",
        "autoGrant",
        "autoDeny"
      ],
      "type": "string"
    },
    "microsoft.graph.androidWorkProfileRequiredPasswordType": {
      "title": "androidWorkProfileRequiredPasswordType",
      "enum": [
        "deviceDefault",
        "lowSecurityBiometric",
        "required",
        "atLeastNumeric",
        "numericComplex",
        "atLeastAlphabetic",
        "atLeastAlphanumeric",
        "alphanumericWithSymbols"
      ],
      "type": "string"
    },
    "microsoft.graph.applicationGuardBlockClipboardSharingType": {
      "title": "applicationGuardBlockClipboardSharingType",
      "enum": [
        "notConfigured",
        "blockBoth",
        "blockHostToContainer",
        "blockContainerToHost",
        "blockNone"
      ],
      "type": "string"
    },
    "microsoft.graph.applicationGuardBlockFileTransferType": {
      "title": "applicationGuardBlockFileTransferType",
      "enum": [
        "notConfigured",
        "blockImageAndTextFile",
        "blockImageFile",
        "blockNone",
        "blockTextFile"
      ],
      "type": "string"
    },
    "microsoft.graph.appListType": {
      "title": "appListType",
      "enum": [
        "none",
        "appsInListCompliant",
        "appsNotInListCompliant"
      ],
      "type": "string"
    },
    "microsoft.graph.appLockerApplicationControlType": {
      "title": "appLockerApplicationControlType",
      "enum": [
        "notConfigured",
        "enforceComponentsAndStoreApps",
        "auditComponentsAndStoreApps",
        "enforceComponentsStoreAppsAndSmartlocker",
        "auditComponentsStoreAppsAndSmartlocker"
      ],
      "type": "string"
    },
    "microsoft.graph.automaticUpdateMode": {
      "title": "automaticUpdateMode",
      "enum": [
        "userDefined",
        "notifyDownload",
        "autoInstallAtMaintenanceTime",
        "autoInstallAndRebootAtMaintenanceTime",
        "autoInstallAndRebootAtScheduledTime",
        "autoInstallAndRebootWithoutEndUserControl"
      ],
      "type": "string"
    },
    "microsoft.graph.bitLockerEncryptionMethod": {
      "title": "bitLockerEncryptionMethod",
      "enum": [
        "aesCbc128",
        "aesCbc256",
        "xtsAes128",
        "xtsAes256"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderCloudBlockLevelType": {
      "title": "defenderCloudBlockLevelType",
      "enum": [
        "notConfigured",
        "high",
        "highPlus",
        "zeroTolerance"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderMonitorFileActivity": {
      "title": "defenderMonitorFileActivity",
      "enum": [
        "userDefined",
        "disable",
        "monitorAllFiles",
        "monitorIncomingFilesOnly",
        "monitorOutgoingFilesOnly"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderPromptForSampleSubmission": {
      "title": "defenderPromptForSampleSubmission",
      "enum": [
        "userDefined",
        "alwaysPrompt",
        "promptBeforeSendingPersonalData",
        "neverSendData",
        "sendAllDataWithoutPrompting"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderScanType": {
      "title": "defenderScanType",
      "enum": [
        "userDefined",
        "disabled",
        "quick",
        "full"
      ],
      "type": "string"
    },
    "microsoft.graph.defenderThreatAction": {
      "title": "defenderThreatAction",
      "enum": [
        "deviceDefault",
        "clean",
        "quarantine",
        "remove",
        "allow",
        "userDefined",
        "block"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceComplianceActionType": {
      "title": "deviceComplianceActionType",
      "enum": [
        "noAction",
        "notification",
        "block",
        "retire",
        "wipe",
        "removeResourceAccessProfiles",
        "pushNotification"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceThreatProtectionLevel": {
      "title": "deviceThreatProtectionLevel",
      "enum": [
        "unavailable",
        "secured",
        "low",
        "medium",
        "high",
        "notSet"
      ],
      "type": "string"
    },
    "microsoft.graph.diagnosticDataSubmissionMode": {
      "title": "diagnosticDataSubmissionMode",
      "enum": [
        "userDefined",
        "none",
        "basic",
        "enhanced",
        "full"
      ],
      "type": "string"
    },
    "microsoft.graph.edgeCookiePolicy": {
      "title": "edgeCookiePolicy",
      "enum": [
        "userDefined",
        "allow",
        "blockThirdParty",
        "blockAll"
      ],
      "type": "string"
    },
    "microsoft.graph.edgeSearchEngineType": {
      "title": "edgeSearchEngineType",
      "enum": [
        "default",
        "bing"
      ],
      "type": "string"
    },
    "microsoft.graph.editionUpgradeLicenseType": {
      "title": "editionUpgradeLicenseType",
      "enum": [
        "productKey",
        "licenseFile"
      ],
      "type": "string"
    },
    "microsoft.graph.firewallCertificateRevocationListCheckMethodType": {
      "title": "firewallCertificateRevocationListCheckMethodType",
      "enum": [
        "deviceDefault",
        "none",
        "attempt",
        "require"
      ],
      "type": "string"
    },
    "microsoft.graph.firewallPacketQueueingMethodType": {
      "title": "firewallPacketQueueingMethodType",
      "enum": [
        "deviceDefault",
        "disabled",
        "queueInbound",
        "queueOutbound",
        "queueBoth"
      ],
      "type": "string"
    },
    "microsoft.graph.firewallPreSharedKeyEncodingMethodType": {
      "title": "firewallPreSharedKeyEncodingMethodType",
      "enum": [
        "deviceDefault",
        "none",
        "utF8"
      ],
      "type": "string"
    },
    "microsoft.graph.internetSiteSecurityLevel": {
      "title": "internetSiteSecurityLevel",
      "enum": [
        "userDefined",
        "medium",
        "mediumHigh",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.iosUpdatesInstallStatus": {
      "title": "iosUpdatesInstallStatus",
      "enum": [
        "success",
        "available",
        "idle",
        "unknown",
        "downloading",
        "downloadFailed",
        "downloadRequiresComputer",
        "downloadInsufficientSpace",
        "downloadInsufficientPower",
        "downloadInsufficientNetwork",
        "installing",
        "installInsufficientSpace",
        "installInsufficientPower",
        "installPhoneCallInProgress",
        "installFailed",
        "notSupportedOperation",
        "sharedDeviceUserLoggedInError"
      ],
      "type": "string"
    },
    "microsoft.graph.miracastChannel": {
      "title": "miracastChannel",
      "enum": [
        "userDefined",
        "one",
        "two",
        "three",
        "four",
        "five",
        "six",
        "seven",
        "eight",
        "nine",
        "ten",
        "eleven",
        "thirtySix",
        "forty",
        "fortyFour",
        "fortyEight",
        "oneHundredFortyNine",
        "oneHundredFiftyThree",
        "oneHundredFiftySeven",
        "oneHundredSixtyOne",
        "oneHundredSixtyFive"
      ],
      "type": "string"
    },
    "microsoft.graph.policyPlatformType": {
      "title": "policyPlatformType",
      "enum": [
        "android",
        "iOS",
        "macOS",
        "windowsPhone81",
        "windows81AndLater",
        "windows10AndLater",
        "androidWorkProfile",
        "all"
      ],
      "type": "string"
    },
    "microsoft.graph.prereleaseFeatures": {
      "title": "prereleaseFeatures",
      "enum": [
        "userDefined",
        "settingsOnly",
        "settingsAndExperimentations",
        "notAllowed"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingAppsType": {
      "title": "ratingAppsType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "agesAbove4",
        "agesAbove9",
        "agesAbove12",
        "agesAbove17"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingAustraliaMoviesType": {
      "title": "ratingAustraliaMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "mature",
        "agesAbove15",
        "agesAbove18"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingAustraliaTelevisionType": {
      "title": "ratingAustraliaTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "preschoolers",
        "children",
        "general",
        "parentalGuidance",
        "mature",
        "agesAbove15",
        "agesAbove15AdultViolence"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingCanadaMoviesType": {
      "title": "ratingCanadaMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "agesAbove14",
        "agesAbove18",
        "restricted"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingCanadaTelevisionType": {
      "title": "ratingCanadaTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "children",
        "childrenAbove8",
        "general",
        "parentalGuidance",
        "agesAbove14",
        "agesAbove18"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingFranceMoviesType": {
      "title": "ratingFranceMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "agesAbove10",
        "agesAbove12",
        "agesAbove16",
        "agesAbove18"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingFranceTelevisionType": {
      "title": "ratingFranceTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "agesAbove10",
        "agesAbove12",
        "agesAbove16",
        "agesAbove18"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingGermanyMoviesType": {
      "title": "ratingGermanyMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "agesAbove6",
        "agesAbove12",
        "agesAbove16",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingGermanyTelevisionType": {
      "title": "ratingGermanyTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "agesAbove6",
        "agesAbove12",
        "agesAbove16",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingIrelandMoviesType": {
      "title": "ratingIrelandMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "agesAbove12",
        "agesAbove15",
        "agesAbove16",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingIrelandTelevisionType": {
      "title": "ratingIrelandTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "children",
        "youngAdults",
        "parentalSupervision",
        "mature"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingJapanMoviesType": {
      "title": "ratingJapanMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "agesAbove15",
        "agesAbove18"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingJapanTelevisionType": {
      "title": "ratingJapanTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "explicitAllowed"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingNewZealandMoviesType": {
      "title": "ratingNewZealandMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "mature",
        "agesAbove13",
        "agesAbove15",
        "agesAbove16",
        "agesAbove18",
        "restricted",
        "agesAbove16Restricted"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingNewZealandTelevisionType": {
      "title": "ratingNewZealandTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingUnitedKingdomMoviesType": {
      "title": "ratingUnitedKingdomMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "universalChildren",
        "parentalGuidance",
        "agesAbove12Video",
        "agesAbove12Cinema",
        "agesAbove15",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingUnitedKingdomTelevisionType": {
      "title": "ratingUnitedKingdomTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "caution"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingUnitedStatesMoviesType": {
      "title": "ratingUnitedStatesMoviesType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "general",
        "parentalGuidance",
        "parentalGuidance13",
        "restricted",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.ratingUnitedStatesTelevisionType": {
      "title": "ratingUnitedStatesTelevisionType",
      "enum": [
        "allAllowed",
        "allBlocked",
        "childrenAll",
        "childrenAbove7",
        "general",
        "parentalGuidance",
        "childrenAbove14",
        "adults"
      ],
      "type": "string"
    },
    "microsoft.graph.requiredPasswordType": {
      "title": "requiredPasswordType",
      "enum": [
        "deviceDefault",
        "alphanumeric",
        "numeric"
      ],
      "type": "string"
    },
    "microsoft.graph.safeSearchFilterType": {
      "title": "safeSearchFilterType",
      "enum": [
        "userDefined",
        "strict",
        "moderate"
      ],
      "type": "string"
    },
    "microsoft.graph.sharedPCAccountDeletionPolicyType": {
      "title": "sharedPCAccountDeletionPolicyType",
      "enum": [
        "immediate",
        "diskSpaceThreshold",
        "diskSpaceThresholdOrInactiveThreshold"
      ],
      "type": "string"
    },
    "microsoft.graph.sharedPCAllowedAccountType": {
      "title": "sharedPCAllowedAccountType",
      "enum": [
        "guest",
        "domain"
      ],
      "type": "string"
    },
    "microsoft.graph.siteSecurityLevel": {
      "title": "siteSecurityLevel",
      "enum": [
        "userDefined",
        "low",
        "mediumLow",
        "medium",
        "mediumHigh",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.stateManagementSetting": {
      "title": "stateManagementSetting",
      "enum": [
        "notConfigured",
        "blocked",
        "allowed"
      ],
      "type": "string"
    },
    "microsoft.graph.visibilitySetting": {
      "title": "visibilitySetting",
      "enum": [
        "notConfigured",
        "hide",
        "show"
      ],
      "type": "string"
    },
    "microsoft.graph.webBrowserCookieSettings": {
      "title": "webBrowserCookieSettings",
      "enum": [
        "browserDefault",
        "blockAlways",
        "allowCurrentWebSite",
        "allowFromWebsitesVisited",
        "allowAlways"
      ],
      "type": "string"
    },
    "microsoft.graph.weeklySchedule": {
      "title": "weeklySchedule",
      "enum": [
        "userDefined",
        "everyday",
        "sunday",
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday"
      ],
      "type": "string"
    },
    "microsoft.graph.welcomeScreenMeetingInformation": {
      "title": "welcomeScreenMeetingInformation",
      "enum": [
        "userDefined",
        "showOrganizerAndTimeOnly",
        "showOrganizerAndTimeAndSubject"
      ],
      "type": "string"
    },
    "microsoft.graph.windows10EditionType": {
      "title": "windows10EditionType",
      "enum": [
        "windows10Enterprise",
        "windows10EnterpriseN",
        "windows10Education",
        "windows10EducationN",
        "windows10MobileEnterprise",
        "windows10HolographicEnterprise",
        "windows10Professional",
        "windows10ProfessionalN",
        "windows10ProfessionalEducation",
        "windows10ProfessionalEducationN",
        "windows10ProfessionalWorkstation",
        "windows10ProfessionalWorkstationN"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsDeliveryOptimizationMode": {
      "title": "windowsDeliveryOptimizationMode",
      "enum": [
        "userDefined",
        "httpOnly",
        "httpWithPeeringNat",
        "httpWithPeeringPrivateGroup",
        "httpWithInternetPeering",
        "simpleDownload",
        "bypassMode"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsSpotlightEnablementSettings": {
      "title": "windowsSpotlightEnablementSettings",
      "enum": [
        "notConfigured",
        "disabled",
        "enabled"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsStartMenuAppListVisibilityType": {
      "title": "windowsStartMenuAppListVisibilityType",
      "enum": [
        "userDefined",
        "collapse",
        "remove",
        "disableSettingsApp"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsStartMenuModeType": {
      "title": "windowsStartMenuModeType",
      "enum": [
        "userDefined",
        "fullScreen",
        "nonFullScreen"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsUpdateType": {
      "title": "windowsUpdateType",
      "enum": [
        "userDefined",
        "all",
        "businessReadyOnly",
        "windowsInsiderBuildFast",
        "windowsInsiderBuildSlow",
        "windowsInsiderBuildRelease"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsUserAccountControlSettings": {
      "title": "windowsUserAccountControlSettings",
      "enum": [
        "userDefined",
        "alwaysNotify",
        "notifyOnAppChanges",
        "notifyOnAppChangesWithoutDimming",
        "neverNotify"
      ],
      "type": "string"
    },
    "microsoft.graph.actionState": {
      "title": "actionState",
      "enum": [
        "none",
        "pending",
        "canceled",
        "active",
        "done",
        "failed",
        "notSupported"
      ],
      "type": "string"
    },
    "microsoft.graph.complianceState": {
      "title": "complianceState",
      "enum": [
        "unknown",
        "compliant",
        "noncompliant",
        "conflict",
        "error",
        "inGracePeriod",
        "configManager"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeAccessState": {
      "title": "deviceManagementExchangeAccessState",
      "enum": [
        "none",
        "unknown",
        "allowed",
        "blocked",
        "quarantined"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeAccessStateReason": {
      "title": "deviceManagementExchangeAccessStateReason",
      "enum": [
        "none",
        "unknown",
        "exchangeGlobalRule",
        "exchangeIndividualRule",
        "exchangeDeviceRule",
        "exchangeUpgrade",
        "exchangeMailboxPolicy",
        "other",
        "compliant",
        "notCompliant",
        "notEnrolled",
        "unknownLocation",
        "mfaRequired",
        "azureADBlockDueToAccessPolicy",
        "compromisedPassword",
        "deviceNotKnownWithManagedApp"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementSubscriptionState": {
      "title": "deviceManagementSubscriptionState",
      "enum": [
        "pending",
        "active",
        "warning",
        "disabled",
        "deleted",
        "blocked",
        "lockedOut"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceRegistrationState": {
      "title": "deviceRegistrationState",
      "enum": [
        "notRegistered",
        "registered",
        "revoked",
        "keyConflict",
        "approvalPending",
        "certificateReset",
        "notRegisteredPendingEnrollment",
        "unknown"
      ],
      "type": "string"
    },
    "microsoft.graph.managedDeviceOwnerType": {
      "title": "managedDeviceOwnerType",
      "enum": [
        "unknown",
        "company",
        "personal"
      ],
      "type": "string"
    },
    "microsoft.graph.managedDevicePartnerReportedHealthState": {
      "title": "managedDevicePartnerReportedHealthState",
      "enum": [
        "unknown",
        "activated",
        "deactivated",
        "secured",
        "lowSeverity",
        "mediumSeverity",
        "highSeverity",
        "unresponsive",
        "compromised",
        "misconfigured"
      ],
      "type": "string"
    },
    "microsoft.graph.managementAgentType": {
      "title": "managementAgentType",
      "enum": [
        "eas",
        "mdm",
        "easMdm",
        "intuneClient",
        "easIntuneClient",
        "configurationManagerClient",
        "configurationManagerClientMdm",
        "configurationManagerClientMdmEas",
        "unknown",
        "jamf",
        "googleCloudDevicePolicyController"
      ],
      "type": "string"
    },
    "microsoft.graph.importedWindowsAutopilotDeviceIdentityImportStatus": {
      "title": "importedWindowsAutopilotDeviceIdentityImportStatus",
      "enum": [
        "unknown",
        "pending",
        "partial",
        "complete",
        "error"
      ],
      "type": "string"
    },
    "microsoft.graph.importedWindowsAutopilotDeviceIdentityUploadStatus": {
      "title": "importedWindowsAutopilotDeviceIdentityUploadStatus",
      "enum": [
        "noUpload",
        "pending",
        "complete",
        "error"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppClipboardSharingLevel": {
      "title": "managedAppClipboardSharingLevel",
      "enum": [
        "allApps",
        "managedAppsWithPasteIn",
        "managedApps",
        "blocked"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppDataEncryptionType": {
      "title": "managedAppDataEncryptionType",
      "enum": [
        "useDeviceSettings",
        "afterDeviceRestart",
        "whenDeviceLockedExceptOpenFiles",
        "whenDeviceLocked"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppDataStorageLocation": {
      "title": "managedAppDataStorageLocation",
      "enum": [
        "oneDriveForBusiness",
        "sharePoint",
        "localStorage"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppDataTransferLevel": {
      "title": "managedAppDataTransferLevel",
      "enum": [
        "allApps",
        "managedApps",
        "none"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppFlaggedReason": {
      "title": "managedAppFlaggedReason",
      "enum": [
        "none",
        "rootedDevice"
      ],
      "type": "string"
    },
    "microsoft.graph.managedAppPinCharacterSet": {
      "title": "managedAppPinCharacterSet",
      "enum": [
        "numeric",
        "alphanumericAndSymbol"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsInformationProtectionEnforcementLevel": {
      "title": "windowsInformationProtectionEnforcementLevel",
      "enum": [
        "noProtection",
        "encryptAndAuditOnly",
        "encryptAuditAndPrompt",
        "encryptAuditAndBlock"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsInformationProtectionPinCharacterRequirements": {
      "title": "windowsInformationProtectionPinCharacterRequirements",
      "enum": [
        "notAllow",
        "requireAtLeastOne",
        "allow"
      ],
      "type": "string"
    },
    "microsoft.graph.notificationTemplateBrandingOptions": {
      "title": "notificationTemplateBrandingOptions",
      "enum": [
        "none",
        "includeCompanyLogo",
        "includeCompanyName",
        "includeContactInformation"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeConnectorStatus": {
      "title": "deviceManagementExchangeConnectorStatus",
      "enum": [
        "none",
        "connectionPending",
        "connected",
        "disconnected"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeConnectorSyncType": {
      "title": "deviceManagementExchangeConnectorSyncType",
      "enum": [
        "fullSync",
        "deltaSync"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementExchangeConnectorType": {
      "title": "deviceManagementExchangeConnectorType",
      "enum": [
        "onPremises",
        "hosted",
        "serviceToService",
        "dedicated"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementPartnerAppType": {
      "title": "deviceManagementPartnerAppType",
      "enum": [
        "unknown",
        "singleTenantApp",
        "multiTenantApp"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceManagementPartnerTenantState": {
      "title": "deviceManagementPartnerTenantState",
      "enum": [
        "unknown",
        "unavailable",
        "enabled",
        "terminated",
        "rejected",
        "unresponsive"
      ],
      "type": "string"
    },
    "microsoft.graph.enablement": {
      "title": "enablement",
      "enum": [
        "notConfigured",
        "enabled",
        "disabled"
      ],
      "type": "string"
    },
    "microsoft.graph.mdmAuthority": {
      "title": "mdmAuthority",
      "enum": [
        "unknown",
        "intune",
        "sccm",
        "office365"
      ],
      "type": "string"
    },
    "microsoft.graph.mobileThreatPartnerTenantState": {
      "title": "mobileThreatPartnerTenantState",
      "enum": [
        "unavailable",
        "available",
        "enabled",
        "unresponsive"
      ],
      "type": "string"
    },
    "microsoft.graph.vppTokenState": {
      "title": "vppTokenState",
      "enum": [
        "unknown",
        "valid",
        "expired",
        "invalid",
        "assignedToExternalMDM"
      ],
      "type": "string"
    },
    "microsoft.graph.vppTokenSyncStatus": {
      "title": "vppTokenSyncStatus",
      "enum": [
        "none",
        "inProgress",
        "completed",
        "failed"
      ],
      "type": "string"
    },
    "microsoft.graph.windowsHelloForBusinessPinUsage": {
      "title": "windowsHelloForBusinessPinUsage",
      "enum": [
        "allowed",
        "required",
        "disallowed"
      ],
      "type": "string"
    },
    "microsoft.graph.remoteAssistanceOnboardingStatus": {
      "title": "remoteAssistanceOnboardingStatus",
      "enum": [
        "notOnboarded",
        "onboarding",
        "onboarded"
      ],
      "type": "string"
    },
    "microsoft.graph.complianceStatus": {
      "title": "complianceStatus",
      "enum": [
        "unknown",
        "notApplicable",
        "compliant",
        "remediated",
        "nonCompliant",
        "error",
        "conflict",
        "notAssigned"
      ],
      "type": "string"
    },
    "microsoft.graph.deviceEnrollmentType": {
      "title": "deviceEnrollmentType",
      "enum": [
        "unknown",
        "userEnrollment",
        "deviceEnrollmentManager",
        "appleBulkWithUser",
        "appleBulkWithoutUser",
        "windowsAzureADJoin",
        "windowsBulkUserless",
        "windowsAutoEnrollment",
        "windowsBulkAzureDomainJoin",
        "windowsCoManagement"
      ],
      "type": "string"
    },
    "microsoft.graph.installIntent": {
      "title": "installIntent",
      "enum": [
        "available",
        "required",
        "uninstall",
        "availableWithoutEnrollment"
      ],
      "type": "string"
    },
    "microsoft.graph.savedUIStateGenerationOptions": {
      "title": "savedUIStateGenerationOptions",
      "enum": [
        "none",
        "omitSilverlightPolicyReferences"
      ],
      "type": "string"
    },
    "microsoft.graph.vppTokenAccountType": {
      "title": "vppTokenAccountType",
      "enum": [
        "business",
        "education"
      ],
      "type": "string"
    },
    "microsoft.graph.applicationType": {
      "title": "applicationType",
      "enum": [
        "universal",
        "desktop"
      ],
      "type": "string"
    },
    "microsoft.graph.recipientScopeType": {
      "title": "recipientScopeType",
      "enum": [
        "none",
        "internal",
        "external",
        "externalPartner",
        "externalNonPartner"
      ],
      "type": "string"
    },
    "microsoft.graph.securityNetworkProtocol": {
      "title": "securityNetworkProtocol",
      "enum": [
        "unknown",
        "ip",
        "icmp",
        "igmp",
        "ggp",
        "ipv4",
        "tcp",
        "pup",
        "udp",
        "idp",
        "ipv6",
        "ipv6RoutingHeader",
        "ipv6FragmentHeader",
        "ipSecEncapsulatingSecurityPayload",
        "ipSecAuthenticationHeader",
        "icmpV6",
        "ipv6NoNextHeader",
        "ipv6DestinationOptions",
        "nd",
        "raw",
        "ipx",
        "spx",
        "spxII"
      ],
      "type": "string"
    },
    "odata.error": {
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/odata.error.main"
        }
      }
    },
    "odata.error.main": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/odata.error.detail"
          }
        },
        "innererror": {
          "description": "The structure of this object is service-specific",
          "type": "object"
        }
      }
    },
    "odata.error.detail": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "top": {
      "in": "query",
      "name": "$top",
      "description": "Show only the first n items",
      "type": "integer",
      "minimum": 0
    },
    "skip": {
      "in": "query",
      "name": "$skip",
      "description": "Skip the first n items",
      "type": "integer",
      "minimum": 0
    },
    "count": {
      "in": "query",
      "name": "$count",
      "description": "Include count of items",
      "type": "boolean"
    },
    "filter": {
      "in": "query",
      "name": "$filter",
      "description": "Filter items by property values",
      "type": "string"
    },
    "search": {
      "in": "query",
      "name": "$search",
      "description": "Search items by search phrases",
      "type": "string"
    }
  },
  "responses": {
    "error": {
      "description": "error",
      "schema": {
        "$ref": "#/definitions/odata.error"
      }
    }
  },
  "securityDefinitions": {
    "Delegated (work or school account)": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://graph.microsoft.com/",
      "scopes": {
        "Bookings.Read.All": " Allows an app to read Bookings appointments, businesses, customers, services, and staff on behalf of the signed-in user. Intended for read-only applications. Typical target user is the customer of a booking business. ",
        "Bookings.ReadWrite.Appointments": "Allows an app to read and write Bookings appointments and customers, and additionally allows reading businesses, services, and staff on behalf of the signed-in user. Intended for scheduling applications which need to manipulate appointments and customers. Cannot change fundamental information about the booking business, nor its services and staff members. Typical target user is the customer of a booking business.",
        "Bookings.ReadWrite.All": "Allows an app to read and write Bookings appointments, businesses, customers, services, and staff on behalf of the signed-in user. Does not allow create, delete, or publish of Bookings businesses. Intended for management applications that manipulate existing businesses, their services and staff members. Cannot create, delete, or change the publishing status of a booking business. Typical target user is the support staff of an organization.",
        "Bookings.Manage": "Allows an app to read, write, and manage Bookings appointments, businesses, customers, services, and staff on behalf of the signed-in user. . Allows the app to have full access. Intended for a full management experience. Typical target user is the administrator of an organization.",
        "Calendars.Read": "    Read user calendars .Allows the app to read events in user calendars. ",
        "Calendars.Read.Shared": "    Read user and shared calendars .Allows the app to read events in all calendars that the user can access, including delegate and shared calendars. ",
        "Calendars.ReadWrite": "    Have full access to user calendars .Allows the app to create, read, update, and delete events in user calendars. ",
        "Calendars.ReadWrite.Shared": "    Read and write user and shared calendars .Allows the app to create, read, update and delete events in all calendars the user has permissions to access. This includes delegate and shared calendars.",
        "Contacts.Read": "Read user contacts  .Allows the app to read user contacts. ",
        "Contacts.Read.Shared": "    Read user and shared contacts .Allows the app to read contacts that the user has permissions to access, including the user's own and shared contacts. ",
        "Contacts.ReadWrite": "    Have full access to user contacts .Allows the app to create, read, update, and delete user contacts. ",
        "Contacts.ReadWrite.Shared": "    Read and write user and shared contacts .Allows the app to create, read, update and delete contacts that the user has permissions to, including the user's own and shared contacts. ",
        "Device.Read": "    Read user devices .Allows the app to read a user's list of devices on behalf of the signed-in user. ",
        "Device.Command": "    Communicate with user devices .Allows the app to launch another app or communicate with another app on a user's device on behalf of the signed-in user. ",
        "Directory.Read.All": "    Read directory data. Allows the app to read data in your organization's directory, such as users, groups and apps.",
        "Directory.ReadWrite.All": "    Read and write directory data. Allows the app to read and write data in your organization's directory, such as users, and groups. It does not allow the app to delete users or groups, or reset user passwords. ",
        "Directory.AccessAsUser.All": "    Access directory as the signed-in user. Allows the app to have the same access to information in the directory as the signed-in user. ",
        "EduAdministration.Read": "    Read education app settings. Allows the app to read education app settings on behalf of the user. ",
        "EduAdministration.ReadWrite": "    Manage education app settings. Allows the app to manage education app settings on behalf of the user. ",
        "EduAssignments.ReadBasic": "    Read users' class assignments without grades. Allows the app to read assignments without grades on behalf of the user ",
        "EduAssignments.ReadWriteBasic": "    Read and write users' class assignments without grades. Allows the app to read and write assignments without grades on behalf of the user ",
        "EduAssignments.Read": "    Read users' view of class assignments and their grades. Allows the app to read assignments and their grades on behalf of the user",
        "EduAssignments.ReadWrite": "    Read and write users' view of class assignments and their grades. Allows the app to read and write assignments and their grades on behalf of the user",
        "EduRostering.ReadBasic": "    Read a limited subset of users' view of the roster. Allows the app to read a limited subset of the data from the  structure of schools and classes in an organization's roster and  education-specific information about users to be read on behalf of the user. ",
        "Files.Read": "Read user files. Allows the app to read the signed-in user's files. ",
        "Files.Read.All": "Read all files that user can access. Allows the app to read all files the signed-in user can access. ",
        "Files.ReadWrite": "Have full access to user files. Allows the app to read, create, update, and delete the signed-in user's files. ",
        "Files.ReadWrite.All": "Have full access to all files user can access. Allows the app to read, create, update, and delete all files the signed-in user can access. ",
        "Files.ReadWrite.AppFolder": "Have full access to the application's folder (preview). (Preview) Allows the app to read, create, update, and delete files in the application's folder. ",
        "Files.Read.Selected": "Read files that the user selects. **Limited support in Microsoft Graph; see Remarks** . (Preview) Allows the app to read files that the user selects. The app has access for several hours after the user selects a file. ",
        "Files.ReadWrite.Selected": "Read and write files that the user selects. **Limited support in Microsoft Graph; see Remarks** . (Preview) Allows the app to read and write files that the user selects. The app has access for several hours after the user selects a file. ",
        "Group.Read.All": "Read all groups. Allows the app to list groups, and to read their properties and all group memberships on behalf of the signed-in user. Also allows the app to read calendar, conversations, files, and other group content for all groups the signed-in user can access. ",
        "Group.ReadWrite.All": "Read and write all groups. Allows the app to create groups and read all group properties and memberships on behalf of the signed-in user. Additionally allows group owners to manage their groups and allows group members to update group content. ",
        "IdentityRiskEvent.Read.All": "  Read identity risk event information. Allows the app to read identity risk event information for all users in your organization on behalf of the signed-in user. ",
        "IdentityProvider.Read.All": "  Read identity provider information. Allows the app to read identity providers configured in your Azure AD or Azure AD B2C tenant on behalf of the signed-in user. ",
        "IdentityProvider.ReadWrite.All": "  Read and write identity provider information. Allows the app to read or write identity providers configured in your Azure AD or Azure AD B2C tenant on behalf of the signed-in user. ",
        "DeviceManagementApps.Read.All": "Read Microsoft Intune apps. Allows the app to read the properties, group assignments and status of apps, app configurations and app protection policies managed by Microsoft Intune. ",
        "DeviceManagementApps.ReadWrite.All": "Read and write Microsoft Intune apps. Allows the app to read and write the properties, group assignments and status of apps, app configurations and app protection policies managed by Microsoft Intune. ",
        "DeviceManagementConfiguration.Read.All": "Read Microsoft Intune device configuration and policies. Allows the app to read properties of Microsoft Intune-managed device configuration and device compliance policies and their assignment to groups. ",
        "DeviceManagementConfiguration.ReadWrite.All": "Read and write Microsoft Intune device configuration and policies. Allows the app to read and write properties of Microsoft Intune-managed device configuration and device compliance policies and their assignment to groups. ",
        "DeviceManagementManagedDevices.PrivilegedOperations.All": "Perform user-impacting remote actions on Microsoft Intune devices. Allows the app to perform remote high impact actions such as wiping the device or resetting the passcode on devices managed by Microsoft Intune. ",
        "DeviceManagementManagedDevices.Read.All": "Read Microsoft Intune devices. Allows the app to read the properties of devices managed by Microsoft Intune. ",
        "DeviceManagementManagedDevices.ReadWrite.All": "Read and write Microsoft Intune devices. Allows the app to read and write the properties of devices managed by Microsoft Intune. Does not allow high impact operations such as remote wipe and password reset on the device’s owner. ",
        "DeviceManagementRBAC.Read.All": "Read Microsoft Intune RBAC settings. Allows the app to read the properties relating to the Microsoft Intune Role-Based Access Control (RBAC) settings. ",
        "DeviceManagementRBAC.ReadWrite.All": "Read and write Microsoft Intune RBAC settings. Allows the app to read and write the properties relating to the Microsoft Intune Role-Based Access Control (RBAC) settings. ",
        "DeviceManagementServiceConfig.Read.All": "Read Microsoft Intune configuration. Allows the app to read Intune service properties including device enrollment and third party service connection configuration. ",
        "DeviceManagementServiceConfig.ReadWrite.All": "Read and write Microsoft Intune configuration. Allows the app to read and write Microsoft Intune service properties including device enrollment and third party service connection configuration. ",
        "Mail.Read": "Read user mail. Allows the app to read email in user mailboxes. ",
        "Mail.ReadWrite": "Read and write access to user mail. Allows the app to create, read, update, and delete email in user mailboxes. Does not include permission to send mail.",
        "Mail.Read.Shared": "Read user and shared mail. Allows the app to read mail that the user can access, including the user's own and shared mail. ",
        "Mail.ReadWrite.Shared": "Read and write user and shared mail. Allows the app to create, read, update, and delete mail that the user has permission to access, including the user's own and shared mail. Does not include permission to send mail. ",
        "Mail.Send": "Send mail as a user. Allows the app to send mail as users in the organization. ",
        "Mail.Send.Shared": "Send mail on behalf of others. Allows the app to send mail as the signed-in user, including sending on-behalf of others. ",
        "MailboxSettings.Read": " Read user mailbox settings. Allows the app to the read user's mailbox settings. Does not include permission to send mail. ",
        "MailboxSettings.ReadWrite": " Read and write user mailbox settings. Allows the app to create, read, update, and delete user's mailbox settings. Does not include permission to directly send mail, but allows the app to create rules that can forward or redirect messages. ",
        "Member.Read.Hidden": "Read hidden memberships. Allows the app to read the memberships of hidden groups and administrative units on behalf of the signed-in user, for those hidden groups and administrative units that the signed-in user has access to. ",
        "Notes.Read": "Read user OneNote notebooks. Allows the app to read the titles of OneNote notebooks and sections and to create new pages, notebooks, and sections on behalf of the signed-in user. ",
        "Notes.Create": "Create user OneNote notebooks. Allows the app to read the titles of OneNote notebooks and sections and to create new pages, notebooks, and sections on behalf of the signed-in user.",
        "Notes.ReadWrite": "Read and write user OneNote notebooks. Allows the app to read, share, and modify OneNote notebooks on behalf of the signed-in user. ",
        "Notes.Read.All": "Read all OneNote notebooks that user can access. Allows the app to read OneNote notebooks that the signed-in user has access to in the organization. ",
        "Notes.ReadWrite.All": "Read and write all OneNote notebooks that user can access. Allows the app to read, share, and modify OneNote notebooks that the signed-in user has access to in the organization.",
        "Notes.ReadWrite.CreatedByApp": "Limited notebook access (deprecated). **Deprecated** .Do not use. No privileges are granted by this permission. ",
        "email": "View users' email address. Allows the app to read your users' primary email address. ",
        "offline_access": "Access user's data anytime. Allows the app to read and update user data, even when they are not currently using the app.",
        "openid": "Sign users in. Allows users to sign in to the app with their work or school accounts and allows the app to see basic user profile information.",
        "profile": "View users' basic profile. Allows the app to see your users' basic profile (name, picture, user name).",
        "People.Read": "Read users' relevant people lists. Allows the app to read a scored list of people relevant to the signed-in user. The list can include local contacts, contacts from social networking or your organization's directory, and people from recent communications (such as email and Skype). ",
        "People.Read.All": "Read all users' relevant people lists. Allows the app to read a scored list of people relevant to the signed-in user or other users in the signed-in user's organization. The list can include local contacts, contacts from social networking or your organization's directory, and people from recent communications (such as email and Skype). Also allows the app to search the entire directory of the signed-in user's organization. ",
        "Reports.Read.All": "Read all usage reports. Allows an app to read all service usage reports without a signed-in user. Services that provide usage reports include Office 365 and Azure Active Directory. ",
        "SecurityEvents.Read.All": " Read your organization’s security events. Allows the app to read your organization’s security events on behalf of the signed-in user. ",
        "SecurityEvents.ReadWrite.All": "Read and update your organization’s security events. Allows the app to read your organization’s security events on behalf of the signed-in user. Also allows the app to update editable properties in security events on behalf of the signed-in user. ",
        "Sites.Read.All": "Read items in all site collections. Allows the app to read documents and list items in all site collections on behalf of the signed-in user. ",
        "Sites.ReadWrite.All": "Read and write items in all site collections. Allows the app to edit or delete documents and list items in all site collections on behalf of the signed-in user. ",
        "Sites.Manage.All": "Create, edit, and delete items and lists in all site collections. Allows the app to manage and create lists, documents, and list items in all site collections on behalf of the signed-in user. ",
        "Sites.FullControl.All": "Have full control of all site collections. Allows the app to have full control to SharePoint sites in all site collections on behalf of the signed-in user. ",
        "Tasks.Read": "Read user tasks. Allows the app to read user tasks. ",
        "Tasks.Read.Shared": "Read user and shared tasks. Allows the app to read tasks a user has permissions to access, including their own and shared tasks. ",
        "Tasks.ReadWrite": "Create, read, update and delete user tasks and containers. Allows the app to create, read, update and delete tasks and containers (and tasks in them) that are assigned to or shared with the signed-in user.",
        "Tasks.ReadWrite.Shared": "Read and write user and shared tasks. Allows the app to create, read, update, and delete tasks a user has permissions to, including their own and shared tasks. ",
        "Agreement.Read.All": "Read all terms of use agreements. Allows the app to read terms of use agreements on behalf of the signed-in user. ",
        "Agreement.ReadWrite.All": "Read and write all terms of use agreements. Allows the app to read and write terms of use agreements on behalf of the signed-in user. ",
        "AgreementAcceptance.Read": "Read user terms of use acceptance statuses. Allows the app to read terms of use acceptance statuses on behalf of the signed-in user. ",
        "AgreementAcceptance.Read.All": "Read terms of use acceptance statuses that user can access. Allows the app to read terms of use acceptance statuses on behalf of the signed-in user. ",
        "User.Read": "Sign-in and read user profile. Allows users to sign-in to the app, and allows the app to read the profile of signed-in users. It also allows the app to read basic company information of signed-in users.",
        "User.ReadWrite": "Read and write access to user profile. Allows the app to read the signed-in user's full profile. It also allows the app to update the signed-in user's profile information on their behalf. ",
        "User.ReadBasic.All": "Read all users' basic profiles. Allows the app to read a basic set of profile properties of other users in your organization on behalf of the signed-in user. This includes display name, first and last name, email address, open extensions and photo. Also allows the app to read the full profile of the signed-in user. ",
        "User.Read.All": " Read all users' full profiles. Allows the app to read the full set of profile properties, reports, and managers of other users in your organization, on behalf of the signed-in user. ",
        "User.ReadWrite.All": " Read and write all users' full profiles. Allows the app to read and write the full set of profile properties, reports, and managers of other users in your organization, on behalf of the signed-in user. Also allows the app to create and delete users as well as reset user passwords on behalf of the signed-in user. ",
        "User.Invite.All": " Invite guest users to the organization. Allows the app to invite guest users to your organization, on behalf of the signed-in user. ",
        "User.Export.All": "Export users' data. Allows the app to export an organizational user's data, when performed by a Company Administrator.",
        "UserActivity.ReadWrite.CreatedByApp": "    Read and write app activity to users' activity feed .Allows the app to read and report the signed-in user's activity in the app. "
      }
    },
    "DelegatedPersonal": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://graph.microsoft.com/",
      "scopes": {
        "Calendars.Read": "    Read user calendars .Allows the app to read events in user calendars. ",
        "Calendars.ReadWrite": "    Have full access to user calendars .Allows the app to create, read, update, and delete events in user calendars. ",
        "Contacts.Read": "    Read user contacts  .Allows the app to read user contacts. ",
        "Contacts.ReadWrite": "    Have full access to user contacts .Allows the app to create, read, update, and delete user contacts. ",
        "Device.Read": "    Read user devices .Allows the app to read a user's list of devices on behalf of the signed-in user. ",
        "Device.Command": "    Communicate with user devices .Allows the app to launch another app or communicate with another app on a user's device on behalf of the signed-in user. ",
        "Files.Read": "Read user files. Allows the app to read the signed-in user's files. ",
        "Files.Read.All": "Read all files that user can access. Allows the app to read all files the signed-in user can access. ",
        "Files.ReadWrite": "Have full access to user files. Allows the app to read, create, update, and delete the signed-in user's files. ",
        "Files.ReadWrite.All": "Have full access to all files user can access. Allows the app to read, create, update, and delete all files the signed-in user can access. ",
        "Mail.ReadWrite": "Read and write access to user mail. Allows the app to create, read, update, and delete email in user mailboxes. Does not include permission to send mail.",
        "Member.Read.Hidden": "Read all hidden memberships. Allows the app to read the memberships of hidden groups and administrative units without a signed-in user. ",
        "Notes.Read": "Read user OneNote notebooks. Allows the app to read the titles of OneNote notebooks and sections and to create new pages, notebooks, and sections on behalf of the signed-in user. ",
        "Notes.Create": "Create user OneNote notebooks. Allows the app to read the titles of OneNote notebooks and sections and to create new pages, notebooks, and sections on behalf of the signed-in user.",
        "Notes.ReadWrite": "Read and write user OneNote notebooks. Allows the app to read, share, and modify OneNote notebooks on behalf of the signed-in user. ",
        "Notes.Read.All": "Read all OneNote notebooks that user can access. Allows the app to read OneNote notebooks that the signed-in user has access to in the organization. ",
        "Tasks.Read": "Read user tasks. Allows the app to read user tasks. ",
        "Tasks.ReadWrite": "Create, read, update and delete user tasks and containers. Allows the app to create, read, update and delete tasks and containers (and tasks in them) that are assigned to or shared with the signed-in user.",
        "User.Read": "Sign-in and read user profile. Allows users to sign-in to the app, and allows the app to read the profile of signed-in users. It also allows the app to read basic company information of signed-in users.",
        "User.ReadWrite": "Read and write access to user profile. Allows the app to read the signed-in user's full profile. It also allows the app to update the signed-in user's profile information on their behalf. ",
        "User.ReadBasic.All": "Read all users' basic profiles. Allows the app to read a basic set of profile properties of other users in your organization on behalf of the signed-in user. This includes display name, first and last name, email address, open extensions and photo. Also allows the app to read the full profile of the signed-in user. ",
        "User.Read.All": " Read all users' full profiles. Allows the app to read the full set of profile properties, reports, and managers of other users in your organization, on behalf of the signed-in user. ",
        "User.ReadWrite.All": " Read and write all users' full profiles. Allows the app to read and write the full set of profile properties, reports, and managers of other users in your organization, on behalf of the signed-in user. Also allows the app to create and delete users as well as reset user passwords on behalf of the signed-in user. ",
        "User.Invite.All": " Invite guest users to the organization. Allows the app to invite guest users to your organization, on behalf of the signed-in user. ",
        "User.Export.All": "Export users' data. Allows the app to export an organizational user's data, when performed by a Company Administrator.",
        "UserActivity.ReadWrite.CreatedByApp": "    Read and write app activity to users' activity feed .Allows the app to read and report the signed-in user's activity in the app. "
      }
    },
    "Application": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://graph.microsoft.com/",
      "scopes": {
        "Application.ReadWrite.All": "Read and write all apps. Allows the calling app to create, and manage (read, update, update application secrets and delete) applications and service principals without a signed-in user. Does not allow management of consent grants or application assignments to users or groups. ",
        "Application.ReadWrite.OwnedBy": "Manage apps that this app creates or owns. Allows the calling app to create other applications and service principals, and fully manage those applications and service principals (read, update, update application secrets and delete), without a signed-in user. It cannot update any applications that it is not an owner of. Does not allow management of consent grants or application assignments to users or groups. ",
        "Calendars.Read": "    Read calendars in all mailboxes .Allows the app to read events of all calendars without a signed-in user. ",
        "Calendars.ReadWrite": "    Read and write calendars in all mailboxes .Allows the app to create, read, update, and delete events of all calendars without a signed-in user. ",
        "Contacts.Read": "    Read contacts in all mailboxes .Allows the app to read all contacts in all mailboxes without a signed-in user. ",
        "Contacts.ReadWrite": "    Read and write contacts in all mailboxes .Allows the app to create, read, update, and delete all contacts in all mailboxes without a signed-in user. ",
        "Device.ReadWrite.All": "    Read and write devices .Allows the app to read and write all device properties without a signed in user. Does not allow device creation, device deletion, or update of device alternative security identifiers. ",
        "Directory.Read.All": "Read directory data. Allows the app to read data in your organization's directory, such as users, groups and apps, without a signed-in user. ",
        "Directory.ReadWrite.All": "Read and write directory data. Allows the app to read and write data in your organization's directory, such as users, and groups, without a signed-in user. Does not allow user or group deletion. ",
        "EduAssignments.ReadBasic.All": "Read class assignments without grades.Allows the app to read assignments without grades for all users",
        "EduAssignments.ReadWriteBasic.All": "Read and write class assignments without grades. Allows the app to read and write assignments without grades for all users",
        "EduAssignments.Read.All": "Read class assignments with grades. Allows the app to read assignments and their grades for all users ",
        "EduAssignments.ReadWrite.All": "Read and write class assignments with grades. Allows the app to read and write assignments and their grades for all users ",
        "EduRostering.ReadBasic.All": "Read a limited subset of the organization's roster. Allows the app to read a limited subset of both the structure of schools and classes in an organization's roster and education-specific information about all users. ",
        "EduRostering.Read.All": "Read the organization's roster. Allows the app to read the structure of schools and classes in the organization's roster and education-specific information about all users to be read. ",
        "EduRostering.ReadWrite.All": "Read and write the organization's roster. Allows the app to read and write the structure of schools and classes in the organization's roster and education-specific information about all users to be read and written. ",
        "Files.Read.All": "Read files in all site collections. Allows the app to read all files in all site collections without a signed in user. ",
        "Files.ReadWrite.All": "Read and write files in all site collections. Allows the app to read, create, update, and delete all files in all site collections without a signed in user. ",
        "Group.Read.All": "Read all groups. Allows the app to read memberships for all groups without a signed-in user. > **NOTE:** that not all group API supports access using app-only permissions. See [known issues](../concepts/known_issues.md) for examples. ",
        "Group.ReadWrite.All": "Read and write all groups. Allows the app to create groups, read and update group memberships, and delete groups. All of these operations can be performed by the app without a signed-in user. ",
        "IdentityRiskEvent.Read.All": "  Read identity risk event information. Allows the app to read identity risk event information for all users in your organization without a signed-in user. ",
        "Mail.Read": "Read mail in all mailboxes. Allows the app to read mail in all mailboxes without a signed-in user.",
        "Mail.ReadWrite": "Read and write mail in all mailboxes. Allows the app to create, read, update, and delete mail in all mailboxes without a signed-in user. Does not include permission to send mail. ",
        "Mail.Send": "Send mail as any user. Allows the app to send mail as any user without a signed-in user. ",
        "MailboxSettings.Read": " Read all user mailbox settings. Allows the app to read user's mailbox settings without a signed-in user. Does not include permission to send mail. ",
        "MailboxSettings.ReadWrite": "Read and write all user mailbox settings. Allows the app to create, read, update, and delete user's mailbox settings without a signed-in user. Does not include permission to send mail. ",
        "Notes.Read.All": "Read all OneNote notebooks. Allows the app to read all the OneNote notebooks in your organization, without a signed-in user. ",
        "Notes.ReadWrite.All": "Read and write all OneNote notebooks. Allows the app to read, share, and modify all the OneNote notebooks in your organization, without a signed-in user.",
        "People.Read.All": "Read all users' relevant people lists. Allows the app to read a scored list of people relevant to the signed-in user or other users in the signed-in user's organization. .The list can include local contacts, contacts from social networking or your organization's directory, and people from recent communications (such as email and Skype). Also allows the app to search the entire directory of the signed-in user's organization. ",
        "Reports.Read.All": "Read all usage reports. Allows an app to read all service usage reports without a signed-in user. Services that provide usage reports include Office 365 and Azure Active Directory. ",
        "SecurityEvents.Read.All": " Read your organization’s security events. Allows the app to read your organization’s security events. ",
        "SecurityEvents.ReadWrite.All": "Read and update your organization’s security events. Allows the app to read your organization’s security events. Also allows the app to update editable properties in security events. ",
        "Sites.Read.All": "Read items in all site collections. Allows the app to read documents and list items in all site collections without a signed in user. ",
        "Sites.ReadWrite.All": "Read and write items in all site collections. Allows the app to create, read, update, and delete documents and list items in all site collections without a signed in user. ",
        "Sites.Manage.All": "Have full control of all site collections. Allows the app to manage and create lists, documents, and list items in all site collections without a signed-in user. ",
        "Sites.FullControl.All": "Create, edit, and delete items and lists in all site collections. Allows the app to have full control to SharePoint sites in all site collections without a signed-in user. ",
        "User.Read.All": "Read all users' full profiles. Allows the app to read the full set of profile properties, group membership, reports and managers of other users in your organization, without a signed-in user.",
        "User.ReadWrite.All": "  Read and write all users' full profiles. Allows the app to read and write the full set of profile properties, group membership, reports and managers of other users in your organization, without a signed-in user. Also allows the app to create and delete non-administrative users. Does not allow reset of user passwords. ",
        "User.Invite.All": " Invite guest users to the organization. Allows the app to invite guest users to your organization, without a signed-in user. ",
        "User.Export.All": "Export users' data. Allows the app to export organizational users' data, without a signed-in user."
      }
    }
  },
  "tags": [
    {
      "name": "contracts.contract",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "devices.device",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "devices.extension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "devices.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directory.directory",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directory.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryObjects.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryObjects.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "directoryRoles.directoryRole",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryRoles.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "directoryRoleTemplates.directoryRoleTemplate",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "domains.domain",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "domains.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "domains.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "domains.domainDnsRecord",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "drives.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "drives.driveItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "drives.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "drives.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "drives.list",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "education.educationRoot",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "education.educationClass",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "education.educationUser",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "education.educationSchool",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groupLifecyclePolicies.groupLifecyclePolicy",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.group",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.calendar",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.event",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "groups.conversation",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.extension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.groupLifecyclePolicy",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.onenote",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.profilePhoto",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.plannerGroup",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.groupSetting",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.site",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groups.conversationThread",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groupSettings.groupSetting",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "groupSettingTemplates.groupSettingTemplate",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "invitations.invitation",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "invitations.user",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.user",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.userActivity",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.calendar",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.calendarGroup",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.event",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "me.contactFolder",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.contact",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.deviceManagementTroubleshootingEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.extension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.inferenceClassification",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.licenseDetails",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.mailFolder",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.managedAppRegistration",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.managedDevice",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.message",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.onenote",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.outlookUser",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.profilePhoto",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "me.plannerUser",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "organization.organization",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "organization.extension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "planner.planner",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "planner.plannerBucket",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "planner.plannerPlan",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "planner.plannerTask",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "reports.reportRoot",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "reports.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "schemaExtensions.schemaExtension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "security.security",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "security.alert",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shares.sharedDriveItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shares.driveItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shares.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "shares.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "shares.list",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shares.listItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "shares.site",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.site",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.columnDefinition",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.contentType",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.baseItem",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.list",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "sites.onenote",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "subscribedSkus.subscribedSku",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "subscriptions.subscription",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.user",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.userActivity",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.Functions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.calendar",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.calendarGroup",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.event",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.Actions",
      "x-ms-docs-toc-type": "container"
    },
    {
      "name": "users.contactFolder",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.contact",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.directoryObject",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.deviceManagementTroubleshootingEvent",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.drive",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.extension",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.inferenceClassification",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.licenseDetails",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.mailFolder",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.managedAppRegistration",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.managedDevice",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.message",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.onenote",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.outlookUser",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.person",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.profilePhoto",
      "x-ms-docs-toc-type": "page"
    },
    {
      "name": "users.plannerUser",
      "x-ms-docs-toc-type": "page"
    }
  ]
}